commit 601b3a0b79d84dfe085b78a773dac0fe474c37c8
Merge: d4a4440730c4 2abb551297a5
Author: Alex Wang <aw1621107@gmail.com>
Date:   Tue Apr 11 10:30:08 2017 -0400

    WIP on break-everything: d4a4440730c4 libiconv: Add optional dependency on gettext

diff --cc Formula/apr-util.rb
index ad937a0486a4,ad937a0486a4..96ac299c7f38
--- a/Formula/apr-util.rb
+++ b/Formula/apr-util.rb
@@@ -15,7 -15,7 +15,7 @@@ class AprUtil < Formul
    keg_only :provided_by_osx, "Apple's CLT package contains apr."
  
    depends_on "apr"
--  depends_on "openssl"
++  depends_on "openssl@1.1"
    depends_on "postgresql" => :optional
    depends_on "mysql" => :optional
    depends_on "freetds" => :optional
@@@ -28,7 -28,7 +28,7 @@@
      args = %W[
        --prefix=#{libexec}
        --with-apr=#{Formula["apr"].opt_prefix}
--      --with-openssl=#{Formula["openssl"].opt_prefix}
++      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
        --with-crypto
      ]
  
diff --cc Formula/apr.rb
index 958337d3d06c,958337d3d06c..6df9e8612040
--- a/Formula/apr.rb
+++ b/Formula/apr.rb
@@@ -3,6 -3,6 +3,7 @@@ class Apr < Formul
    homepage "https://apr.apache.org/"
    url "https://www.apache.org/dyn/closer.cgi?path=apr/apr-1.5.2.tar.bz2"
    sha256 "7d03ed29c22a7152be45b8e50431063736df9e1daa1ddf93f6a547ba7a28f67a"
++  head "https://github.com/apache/apr.git", :branch => "trunk"
    revision 3
  
    bottle do
@@@ -15,7 -15,7 +16,36 @@@
  
    keg_only :provided_by_osx, "Apple's CLT package contains apr."
  
++  if build.head?
++    depends_on "gawk" => :build
++    depends_on "autoconf" => :build
++    depends_on "libtool" => :build
++    depends_on :python => :build
++    depends_on "openssl@1.1" => :build
++    depends_on "gdbm" => :build
++    depends_on "berkeley-db" => :build
++    depends_on "postgresql" => :build
++    depends_on "sqlite" => :build
++    depends_on "libxml2" => :build
++    depends_on "unixodbc" => :build
++    depends_on "valgrind" => :build
++  end
++
    def install
++    args = %W[
++      --enable-threads
++      --enable-shm
++      --with-crypto
++      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
++      --with-gdbm=#{Formula["gdb"].opt_prefix}
++      --with-berkeley-db=#{Formula["berkeley-db"].opt_prefix}
++      --with-pgsql=#{Formula["postgresql"].opt_prefix}
++      --with-sqlite3=#{Formula["sqlite"].opt_prefix}
++      --with-libxml2=#{Formula["libxml2"].opt_prefix}
++      --with-iconv=/usr/include
++      --with-odbc=#{Formula["unixodbc"].opt_prefix}
++      --with-valgrind=#{Formula["valgrind"].opt_prefix}/include/valgrind
++    ]
      ENV["SED"] = "sed" # prevent libtool from hardcoding sed path from superenv
  
      # https://bz.apache.org/bugzilla/show_bug.cgi?id=57359
@@@ -23,15 -23,15 +53,16 @@@
      ENV.deparallelize
  
      # Stick it in libexec otherwise it pollutes lib with a .exp file.
--    system "./configure", "--prefix=#{libexec}"
++    system "./buildconf" if build.head?
++    system "./configure", "--prefix=#{libexec}", *args
      system "make", "install"
      bin.install_symlink Dir["#{libexec}/bin/*"]
  
      # No need for this to point to the versioned path.
--    inreplace libexec/"bin/apr-1-config", libexec, opt_libexec
++    inreplace libexec/"bin/apr-2-config", libexec, opt_libexec
    end
  
    test do
--    assert_match opt_libexec.to_s, shell_output("#{bin}/apr-1-config --prefix")
++    assert_match opt_libexec.to_s, shell_output("#{bin}/apr-2-config --prefix")
    end
  end
diff --cc Formula/aspell.rb
index 244d85c345bd,244d85c345bd..649be5d6b322
--- a/Formula/aspell.rb
+++ b/Formula/aspell.rb
@@@ -19,6 -19,6 +19,9 @@@ class Aspell < Formul
      version "0.60.7-20110707"
    end
  
++  depends_on "gettext"
++  depends_on "libiconv"
++
    option "with-all-langs", "Install all available dictionaries"
  
    option "with-lang-af", "Install af dictionary"
@@@ -668,7 -668,7 +671,15 @@@
    patch :DATA
  
    def install
--    system "./configure", "--prefix=#{prefix}"
++    args = %W[
++      --prefix=#{prefix}
++      --enable-incremented-soname
++      --enable-static
++      --enable-nls
++      --enable-curses
++      --enable-wide-curses
++    ]
++    system "./configure", *args
      system "make", "install"
  
      ENV.prepend_path "PATH", bin
diff --cc Formula/assimp.rb
index c80b90e747d3,c80b90e747d3..c6583a843566
--- a/Formula/assimp.rb
+++ b/Formula/assimp.rb
@@@ -16,6 -16,6 +16,8 @@@ class Assimp < Formul
    option "without-boost", "Compile without thread safe logging or multithreaded computation if boost isn't installed"
  
    depends_on "cmake" => :build
++  depends_on "zlib"
++  depends_on "minizip"
    depends_on "boost" => [:recommended, :build]
  
    def install
diff --cc Formula/at-spi2-atk.rb
index fcc6f946e185,fcc6f946e185..845b2a1ece82
--- a/Formula/at-spi2-atk.rb
+++ b/Formula/at-spi2-atk.rb
@@@ -16,7 -16,7 +16,7 @@@ class AtSpi2Atk < Formul
    depends_on "atk"
  
    def install
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
++    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}", "--enable-static"
      system "make", "install"
    end
  end
diff --cc Formula/at-spi2-core.rb
index 7593cac787e5,7593cac787e5..e0079309dd58
--- a/Formula/at-spi2-core.rb
+++ b/Formula/at-spi2-core.rb
@@@ -21,7 -21,7 +21,9 @@@ class AtSpi2Core < Formul
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--enable-introspection=yes"
++                          "--enable-introspection=yes",
++                          "--with-x",
++                          "--enable-static"
      system "make", "install"
    end
  end
diff --cc Formula/atk.rb
index 4f631a20994d,4f631a20994d..4390f9b92c9a
--- a/Formula/atk.rb
+++ b/Formula/atk.rb
@@@ -13,6 -13,6 +13,9 @@@ class Atk < Formul
    depends_on "pkg-config" => :build
    depends_on "glib"
    depends_on "gobject-introspection"
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "gtk-doc" => :optional
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/autogen.rb
index 311948e20a23,311948e20a23..5ffcd964d09e
--- a/Formula/autogen.rb
+++ b/Formula/autogen.rb
@@@ -13,6 -13,6 +13,7 @@@ class Autogen < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "libxml2"
    depends_on "guile"
  
    # Allow guile 2.2 to be used
@@@ -25,6 -25,6 +26,7 @@@
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-snprintfv-install",
                            "--prefix=#{prefix}"
  
      # make and install must be separate steps for this formula
diff --cc Formula/bash.rb
index 476fd9647bde,476fd9647bde..22cdc39e1549
--- a/Formula/bash.rb
+++ b/Formula/bash.rb
@@@ -47,6 -47,6 +47,9 @@@ class Bash < Formul
    end
  
    depends_on "readline"
++  depends_on "gettext"
++  depends_on "libiconv"
++  depends_on "ncurses"
  
    def install
      # When built with SSH_SOURCE_BASHRC, bash will source ~/.bashrc when
@@@ -57,7 -57,7 +60,13 @@@
      # Homebrew's bash instead of /bin/bash.
      ENV.append_to_cflags "-DSSH_SOURCE_BASHRC"
  
--    system "./configure", "--prefix=#{prefix}"
++    args = %W[
++      --with-curses
++      --with-installed-readline=#{Formula["readline"].opt_prefix}
++      --prefix=#{prefix}
++    ]
++
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/bcrypt.rb
index e37f05da7de5,e37f05da7de5..792761f8df76
--- a/Formula/bcrypt.rb
+++ b/Formula/bcrypt.rb
@@@ -13,6 -13,6 +13,8 @@@ class Bcrypt < Formul
      sha256 "7f9c94e9c1527e596b316746d9705f524afb70c661abeb1279bf2c88ad061ddf" => :mountain_lion
    end
  
++  depends_on "zlib"
++
    def install
      system "make", "CC=#{ENV.cc}",
                     "CFLAGS=#{ENV.cflags}",
diff --cc Formula/bdw-gc.rb
index e640706c2efb,e640706c2efb..aa61886491a3
--- a/Formula/bdw-gc.rb
+++ b/Formula/bdw-gc.rb
@@@ -26,7 -26,7 +26,10 @@@ class BdwGc < Formul
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--enable-cplusplus"
++                          "--enable-cplusplus",
++                          "--enable-threads=posix",
++                          "--enable-parallel-mark"
++
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/berkeley-db.rb
index 336c6f5f0bf3,336c6f5f0bf3..44e72d02f350
--- a/Formula/berkeley-db.rb
+++ b/Formula/berkeley-db.rb
@@@ -12,6 -12,6 +12,7 @@@ class BerkeleyDb < Formul
    end
  
    depends_on :java => [:optional, :build]
++  depends_on "tcl-tk"
  
    def install
      # BerkeleyDB dislikes parallel builds
@@@ -22,17 -22,17 +23,30 @@@
        --disable-debug
        --prefix=#{prefix}
        --mandir=#{man}
++      --enable-largefile
++      --enable-heap
        --enable-cxx
        --enable-compat185
++      --enable-dump185
        --enable-sql
        --enable-sql_codegen
++      --enable-sql_compat
        --enable-dbm
        --enable-stl
++      --enable-error_history
++      --enable-failchk_broadcast
++      --enable-slices
++      --enable-tcl
++      --with-tcl=#{Formula["tcl-tk"].lib}
++      --enable-test
++      --with-cryptography=yes
      ]
      args << "--enable-java" if build.with? "java"
++    args << "--enable-server" if build.with? "java"
  
      # BerkeleyDB requires you to build everything from the build_unix subdirectory
      cd "build_unix" do
++      ENV["ac_cv_func_strchrnul"] = "no"
        system "../dist/configure", *args
        system "make", "install"
  
diff --cc Formula/binutils.rb
index 9e2f26ebfeaf,9e2f26ebfeaf..8e222b0b27b6
--- a/Formula/binutils.rb
+++ b/Formula/binutils.rb
@@@ -13,18 -13,18 +13,48 @@@ class Binutils < Formul
  
    # No --default-names option as it interferes with Homebrew builds.
  
++  depends_on :x11
++  depends_on "libmpc"
++  depends_on "mpfr"
++  depends_on "gmp"
++  depends_on "isl"
++  depends_on "gettext"
++  depends_on "libiconv"
++
++  # ld, gas, and gprof are not supported on x86_64 Darwin
    def install
--    system "./configure", "--disable-debug",
--                          "--disable-dependency-tracking",
--                          "--program-prefix=g",
--                          "--prefix=#{prefix}",
--                          "--infodir=#{info}",
--                          "--mandir=#{man}",
--                          "--disable-werror",
--                          "--enable-interwork",
--                          "--enable-multilib",
--                          "--enable-64-bit-bfd",
--                          "--enable-targets=all"
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --program-prefix=g
++      --prefix=#{prefix}
++      --infodir=#{info}
++      --mandir=#{man}
++      --disable-werror
++      --enable-interwork
++      --enable-multilib
++      --enable-64-bit-bfd
++      --enable-targets=all
++      --with-newlib
++      --enable-gold
++      --enable-ld
++      --with-gnu-ld
++      --with-gnu-as
++      --enable-libquadmath
++      --enable-libquadmath-support
++      --enable-libstdcxx
++      --enable-libgomp
++      --enable-libatomic
++      --enable-libitm
++      --enable-libsanitizer
++      --enable-libvtv
++      --enable-libssp
++      --enable-compressed-debug-sections=all
++      --enable-lto
++      --with-system-zlib
++      --with-x
++    ]
++    system "./configure", *args
      system "make"
      system "make", "install"
    end
diff --cc Formula/binwalk.rb
index b12dd63f4ce7,b12dd63f4ce7..ba2a2817b67e
--- a/Formula/binwalk.rb
+++ b/Formula/binwalk.rb
@@@ -1,6 -1,6 +1,6 @@@
  class Binwalk < Formula
    desc "Searches a binary image for embedded files and executable code."
--  homepage "http://binwalk.org/"
++  homepage "https://github.com/devttys0/binwalk"
    url "https://github.com/devttys0/binwalk/archive/v2.1.1.tar.gz"
    sha256 "1b70a5b03489d29f60fef18008a2164974234874faab48a4f47ec53d461d284a"
  
@@@ -17,20 -17,20 +17,15 @@@
  
    depends_on "swig" => :build
    depends_on :fortran
--  depends_on :python if MacOS.version <= :snow_leopard
++  depends_on "python"
    depends_on "p7zip"
    depends_on "ssdeep"
    depends_on "xz"
++  depends_on "numpy"
++  depends_on "scipy"
++  depends_on "capstone"
  
--  resource "numpy" do
--    url "https://pypi.python.org/packages/source/n/numpy/numpy-1.10.2.tar.gz"
--    sha256 "23a3befdf955db4d616f8bb77b324680a80a323e0c42a7e8d7388ef578d8ffa9"
--  end
--
--  resource "scipy" do
--    url "https://downloads.sourceforge.net/project/scipy/scipy/0.16.1/scipy-0.16.1.tar.gz"
--    sha256 "ecd1efbb1c038accb0516151d1e6679809c6010288765eb5da6051550bf52260"
--  end
++  ohai "Check https://github.com/devttys0/binwalk/blob/master/INSTALL.md for optional stuff, including captone with its bindings"
  
    resource "capstone" do
      url "https://pypi.python.org/packages/source/c/capstone/capstone-3.0.4.tar.gz"
@@@ -39,7 -39,7 +34,7 @@@
  
    def install
      ENV.prepend_create_path "PYTHONPATH", libexec/"vendor/lib/python2.7/site-packages"
--    res = %w[numpy scipy]
++    res = %w[]
      res += %w[capstone] if build.with? "capstone"
      res.each do |r|
        resource(r).stage do
diff --cc Formula/bison.rb
index 864dc971e426,864dc971e426..9c686db50aa9
--- a/Formula/bison.rb
+++ b/Formula/bison.rb
@@@ -15,9 -15,9 +15,22 @@@ class Bison < Formul
  
    keg_only :provided_by_osx, "Some formulae require a newer version of bison."
  
++  depends_on "gettext" => :optional
++  depends_on :java
++  depends_on "m4" => :build
++
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --enable-largefile
++      --enable-threads=posix
++      --enable-yacc
++      --enable-nls
++      --with-libiconv-prefix=#{Formula["libiconv"].prefix}
++      --prefix=#{prefix}
++    ]
++    args << "--with-libintl-prefix=#{Formula["gettext"].prefix}" if build.with? "gettext"
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/boost-mpi.rb
index 08af53c34d26,08af53c34d26..54aa3feb81e7
--- a/Formula/boost-mpi.rb
+++ b/Formula/boost-mpi.rb
@@@ -36,8 -36,8 +36,8 @@@ class BoostMpi < Formul
      # Trunk starts using "clang++ -x c" to select C compiler which breaks C++11
      # handling using ENV.cxx11. Using "cxxflags" and "linkflags" still works.
      if build.cxx11?
--      args << "cxxflags=-std=c++11"
--      if ENV.compiler == :clang
++      args << "cxxflags=-std=c++1z"
++      if (ENV.compiler == :clang || ENV.compiler == :llvm_clang)
          args << "cxxflags=-stdlib=libc++" << "linkflags=-stdlib=libc++"
        end
      elsif Tab.for_name("boost").cxx11?
diff --cc Formula/boost-python.rb
index 7187aa89ce19,7187aa89ce19..b28d49ad7b75
--- a/Formula/boost-python.rb
+++ b/Formula/boost-python.rb
@@@ -38,8 -38,8 +38,8 @@@ class BoostPython < Formul
      # Trunk starts using "clang++ -x c" to select C compiler which breaks C++11
      # handling using ENV.cxx11. Using "cxxflags" and "linkflags" still works.
      if build.cxx11?
--      args << "cxxflags=-std=c++11"
--      if ENV.compiler == :clang
++      args << "cxxflags=-std=c++1z"
++      if ENV.compiler == :clang || ENV.compiler == :llvm_clang
          args << "cxxflags=-stdlib=libc++" << "linkflags=-stdlib=libc++"
        end
      elsif Tab.for_name("boost").cxx11?
diff --cc Formula/boost.rb
index 8da83498ceae,8da83498ceae..3544eb524e2b
--- a/Formula/boost.rb
+++ b/Formula/boost.rb
@@@ -47,10 -47,10 +47,6 @@@ class Boost < Formul
      # Handle libraries that will not be built.
      without_libraries = ["python", "mpi"]
  
--    # Boost.Log cannot be built using Apple GCC at the moment. Disabled
--    # on such systems.
--    without_libraries << "log" if ENV.compiler == :gcc
--
      bootstrap_args << "--without-libraries=#{without_libraries.join(",")}"
  
      # layout should be synchronized with boost-python and boost-mpi
@@@ -77,8 -77,8 +73,8 @@@
      # Trunk starts using "clang++ -x c" to select C compiler which breaks C++11
      # handling using ENV.cxx11. Using "cxxflags" and "linkflags" still works.
      if build.cxx11?
--      args << "cxxflags=-std=c++11"
--      if ENV.compiler == :clang
++      args << "cxxflags=-std=c++1z"
++      if ENV.compiler == :clang || ENV.compiler == :llvm_clang
          args << "cxxflags=-stdlib=libc++" << "linkflags=-stdlib=libc++"
        end
      end
diff --cc Formula/bsdmake.rb
index f7ad94a35c30,f7ad94a35c30..3fd2acfffa56
--- a/Formula/bsdmake.rb
+++ b/Formula/bsdmake.rb
@@@ -57,6 -57,6 +57,10 @@@ class Bsdmake < Formul
        s.gsub! "@INSTALL_GROUP@", `id -gn`.chomp
      end
  
++    inreplace "config.h",
++              "DEFMAXJOBS",
++              "DEFMAXJOBS #{Hardware::CPU.cores} //"
++
      # See GNUMakefile
      ENV.append "CFLAGS", "-D__FBSDID=__RCSID"
      ENV.append "CFLAGS", "-mdynamic-no-pic"
diff --cc Formula/byacc.rb
index bf0988c8e5cc,bf0988c8e5cc..b096e42cc8be
--- a/Formula/byacc.rb
+++ b/Formula/byacc.rb
@@@ -12,13 -12,13 +12,42 @@@ class Byacc < Formul
      sha256 "0c559a496f3161e277996d685d047bec485479f507a83c824f7e945d371fa54a" => :mavericks
    end
  
++  depends_on "universal-ctags"
++  depends_on "groff"
++  depends_on "cppcheck"
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--program-prefix=b", "--prefix=#{prefix}", "--man=#{man}"
++                          "--program-prefix=b", "--prefix=#{prefix}",
++                          "--man=#{man}", "--enable-btyacc"
      system "make", "install"
    end
  
    test do
--    system bin/"byacc", "-V"
++    (testpath/"test.y").write <<-EOS.undent
++      %{ #include <iostream>
++         using namespace std;
++         extern void yyerror (char *s);
++         extern int yylex ();
++      %}
++      %start prog
++      %%
++      prog:  //  empty
++          |  prog expr '\\n' { cout << "pass"; exit(0); }
++          ;
++      expr: '(' ')'
++          | '(' expr ')'
++          |  expr expr
++          ;
++      %%
++      char c;
++      void yyerror (char *s) { cout << "fail"; exit(0); }
++      int yylex () { cin.get(c); return c; }
++      int main() { yyparse(); }
++    EOS
++    system "#{bin}/byacc", "test.y"
++    system ENV.cxx, "y.tab.c", "-o", "test"
++    assert_equal "pass", shell_output("echo \"((()(())))()\" | ./test")
++    assert_equal "fail", shell_output("echo \"())\" | ./test")
    end
  end
diff --cc Formula/c-ares.rb
index 091948fce2a0,091948fce2a0..48a3c07fb7ee
--- a/Formula/c-ares.rb
+++ b/Formula/c-ares.rb
@@@ -24,7 -24,7 +24,8 @@@ class CAres < Formul
      system "./buildconf" if build.head?
      system "./configure", "--prefix=#{prefix}",
                            "--disable-dependency-tracking",
--                          "--disable-debug"
++                          "--disable-debug",
++                          "--enable-nonblocking"
      system "make", "install"
    end
  
diff --cc Formula/cabal-install.rb
index 0050e9634f0f,0050e9634f0f..bfb288704a94
--- a/Formula/cabal-install.rb
+++ b/Formula/cabal-install.rb
@@@ -14,6 -14,6 +14,7 @@@ class CabalInstall < Formul
    end
  
    depends_on "ghc"
++  depends_on "zlib"
  
    fails_with :clang if MacOS.version <= :lion # Same as ghc.rb
  
diff --cc Formula/cairo.rb
index d78e1567bb35,d78e1567bb35..720fece2564c
--- a/Formula/cairo.rb
+++ b/Formula/cairo.rb
@@@ -26,27 -26,27 +26,55 @@@ class Cairo < Formul
    keg_only :provided_pre_mountain_lion
  
    depends_on "pkg-config" => :build
++  depends_on "zlib"
++  depends_on "lzo"
    depends_on :x11 => :optional if MacOS.version > :leopard
    depends_on "freetype"
    depends_on "fontconfig"
    depends_on "libpng"
    depends_on "pixman"
    depends_on "glib"
++  depends_on "gtk-doc" => :optional
++  depends_on "qt" => :optional
++  depends_on "cogl" => :optional
++  depends_on "libspectre" => :optional
++  depends_on "poppler" => :optional
++  depends_on "librsvg" => :optional
++  depends_on "ghostscript" => :optional
  
    def install
      args = %W[
        --disable-dependency-tracking
        --prefix=#{prefix}
++      --enable-png=yes
++      --enable-ft=yes
++      --enable-fc=yes
++      --enable-test-surfaces=auto
++      --enable-pthread=yes
        --enable-gobject=yes
--      --enable-svg=yes
++      --enable-quartz=yes
++      --enable-quartz-font=yes
++      --enable-quartz-image=yes
++      --enable-gl=yes
        --enable-tee=yes
--      --enable-quartz-image
++      --enable-xml=yes
++      --enable-trace=yes
++      --enable-interpreter=yes
      ]
  
++    if build.with? "gtk-doc"
++      args << "--enable-gtk-doc"
++      args << "--enable-gtk-doc-html"
++      args << "--enable-gtk-doc-pdf"
++    end
++
++    args << "--enable-qt=yes" if build.with? "qt"
++    args << "--enable-cogl=yes" if build.with? "cogl"
++
      if build.with? "x11"
--      args << "--enable-xcb=yes" << "--enable-xlib=yes" << "--enable-xlib-xrender=yes"
++      args << "--with-x" << "--enable-xcb=yes" << "--enable-xlib=yes" << "--enable-xlib-xrender=yes" << "--enable-xlib-xcb=yes" << "--enable-xcb-shm=yes"
      else
--      args << "--enable-xcb=no" << "--enable-xlib=no" << "--enable-xlib-xrender=no"
++      args << "--without-x" << "--enable-xcb=no" << "--enable-xlib=no" << "--enable-xlib-xrender=no" << "--enable-xlib-xcb=no" << "--enable-xcb-shm=no"
      end
  
      if build.head?
diff --cc Formula/cdecl.rb
index 85ef56243fcd,85ef56243fcd..ad1414ab8e39
--- a/Formula/cdecl.rb
+++ b/Formula/cdecl.rb
@@@ -1,8 -1,8 +1,7 @@@
  class Cdecl < Formula
    desc "Turn English phrases to C or C++ declarations"
    homepage "http://cdecl.org/"
--  url "http://cdecl.org/files/cdecl-blocks-2.5.tar.gz"
--  sha256 "9ee6402be7e4f5bb5e6ee60c6b9ea3862935bf070e6cecd0ab0842305406f3ac"
++  url "https://github.com/ridiculousfish/cdecl-blocks.git"
  
    bottle do
      cellar :any_skip_relocation
diff --cc Formula/check.rb
index d934614dde7b,d934614dde7b..da3b44c6269d
--- a/Formula/check.rb
+++ b/Formula/check.rb
@@@ -11,6 -11,6 +11,10 @@@ class Check < Formul
      sha256 "99baff1f5da1e327096a9768904ca90a07a9e18bf883561f41f6c8b77c5a38fe" => :yosemite
    end
  
++  depends_on :tex => :build
++  depends_on "patchutils" => :build
++  depends_on "pkg-config" => :build
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}"
diff --cc Formula/clasp.rb
index b41ed3058154,b41ed3058154..383589ea04f6
--- a/Formula/clasp.rb
+++ b/Formula/clasp.rb
@@@ -1,8 -1,8 +1,8 @@@
  class Clasp < Formula
    desc "Answer set solver for (extended) normal logic programs"
--  homepage "https://potassco.sourceforge.io/"
--  url "https://downloads.sourceforge.net/project/potassco/clasp/3.2.0/clasp-3.2.0-source.tar.gz"
--  sha256 "eafb050408b586d561cd828aec331b4d3b92ea7a26d249a02c4f39b1675f4e68"
++  homepage "https://potassco.org/"
++  url "https://github.com/potassco/clasp/archive/v3.2.2.tar.gz"
++  sha256 "9e16795dd8c87cda76eb42413f2828c6a234869c9299c85806b38599284f86f4"
  
    bottle do
      cellar :any_skip_relocation
diff --cc Formula/cmake.rb
index dc89589aabea,dc89589aabea..1413b20882d4
--- a/Formula/cmake.rb
+++ b/Formula/cmake.rb
@@@ -17,6 -17,6 +17,21 @@@ class Cmake < Formul
  
    depends_on "sphinx-doc" => :build if build.with? "docs"
  
++  OTHER_DEPS = %W[
++    curl
++    expat
++    jsoncpp
++    zlib
++    bzip2
++    libarchive
++  ].freeze
++
++  OTHER_DEPS.each do |dep|
++    depends_on "#{dep}" => :optional
++  end
++  depends_on "xz" => :optional
++  depends_on "rhash" => :optional
++
    # The `with-qt` GUI option was removed due to circular dependencies if
    # CMake is built with Qt support and Qt is built with MySQL support as MySQL uses CMake.
    # For the GUI application please instead use `brew cask install cmake`.
@@@ -24,27 -24,27 +39,37 @@@
    def install
      args = %W[
        --prefix=#{prefix}
--      --no-system-libs
        --parallel=#{ENV.make_jobs}
        --datadir=/share/cmake
        --docdir=/share/doc/cmake
        --mandir=/share/man
--      --system-zlib
--      --system-bzip2
      ]
  
--    # https://github.com/Homebrew/legacy-homebrew/issues/45989
--    if MacOS.version <= :lion
--      args << "--no-system-curl"
++    OTHER_DEPS.each do |dep|
++      if build.with?("#{dep}")
++        args << "--system-#{dep}"
++      else
++        args << "--no-system-#{dep}"
++      end
++    end
++    if build.with? "xz"
++      args << "--system-liblzma"
      else
--      args << "--system-curl"
++      args << "--no-system-liblzma"
++    end
++    if build.head?
++      if build.with?("rhash")
++        args << "--system-librhash"
++      else
++        args << "--no-system-librhash"
++      end
      end
  
      if build.with? "docs"
        # There is an existing issue around macOS & Python locale setting
        # See https://bugs.python.org/issue18378#msg215215 for explanation
        ENV["LC_ALL"] = "en_US.UTF-8"
--      args << "--sphinx-man" << "--sphinx-build=#{Formula["sphinx-doc"].opt_bin}/sphinx-build"
++      args << "--sphinx-man" << "--sphinx-html" << "--sphinx-build=#{Formula["sphinx-doc"].opt_bin}/sphinx-build"
      end
  
      system "./bootstrap", *args
diff --cc Formula/coq.rb
index cab1b830b7aa,cab1b830b7aa..8a5c957d22d9
--- a/Formula/coq.rb
+++ b/Formula/coq.rb
@@@ -27,13 -27,13 +27,14 @@@ class Coq < Formul
    depends_on Camlp5TransitionalModeRequirement
    depends_on "camlp5"
    depends_on "ocaml"
++  depends_on "gtk+"
  
    def install
      ENV["OPAMYES"] = "1"
      ENV["OPAMROOT"] = Pathname.pwd/"opamroot"
      (Pathname.pwd/"opamroot").mkpath
      system "opam", "init", "--no-setup"
--    system "opam", "install", "ocamlfind"
++    system "opam", "install", "ocamlfind", "lablgtk", "conf-gtksourceview"
  
      camlp5_lib = Formula["camlp5"].opt_lib/"ocaml/camlp5"
      system "opam", "config", "exec", "--",
@@@ -42,10 -42,10 +43,19 @@@
                            "-camlp5dir", camlp5_lib,
                            "-emacslib", elisp,
                            "-coqdocdir", "#{pkgshare}/latex",
--                          "-coqide", "no",
--                          "-with-doc", "no"
++                          "-coqide", "yes",
++                          "-with-doc", "yes"
      system "make", "world"
--    ENV.deparallelize { system "make", "install" }
++    system "make"
++    system "make", "coqide-files"
++    system "make", "coqide-binaries"
++    ENV.deparallelize {
++      system "make", "install"
++      system "make", "install-ide-bin"
++      system "make", "install-ide-files"
++      system "make", "install-ide-info"
++      system "make", "install-ide-devfiles"
++    }
    end
  
    test do
diff --cc Formula/coreutils.rb
index 731d0aa6b0e8,731d0aa6b0e8..5ed1b27a340d
--- a/Formula/coreutils.rb
+++ b/Formula/coreutils.rb
@@@ -57,6 -57,6 +57,9 @@@ class Coreutils < Formul
    end
  
    depends_on "gmp" => :optional
++  depends_on "libressl"
++  depends_on "libiconv"
++  depends_on "gettext"
  
    conflicts_with "ganglia", :because => "both install `gstat` binaries"
    conflicts_with "idutils", :because => "both install `gid` and `gid.1`"
@@@ -84,9 -84,9 +87,27 @@@
      args = %W[
        --prefix=#{prefix}
        --program-prefix=g
++      --enable-largefile
++      --enable-threads=posix
++      --enable-acl
++      --enable-xattr
++      --enable-nls
++      --with-openssl
++      --with-libiconv-prefix
++      --with-libintl-prefix
++      --enable-install-program=arch,hostname
      ]
++    # Another option is --enable-single-binary=symlinks, but it does not
++    # currently work when program name transformations (e.g. program prefixes)
++    # are used
++    args << "--enable-single-binary=shebangs"
      args << "--without-gmp" if build.without? "gmp"
      system "./configure", *args
++
++    # Linker flags shouldn't be makefile targets
++    inreplace "Makefile", "src_coreutils_DEPENDENCIES = $(LDADD)",
++                          "src_coreutils_DEPENDENCIES = "
++
      system "make", "install"
  
      # Symlink all commands into libexec/gnubin without the 'g' prefix
diff --cc Formula/cppunit.rb
index 3add8d0e8dbc,3add8d0e8dbc..945b50c38200
--- a/Formula/cppunit.rb
+++ b/Formula/cppunit.rb
@@@ -14,8 -14,8 +14,14 @@@ class Cppunit < Formul
      sha256 "0494ee4b157acec4c86c4d26a2c1155e71e11e5dc3a897ae1888a3da4edbb21f" => :mountain_lion
    end
  
++  depends_on "doxygen" => :build
++  depends_on "graphviz" => :build
++  depends_on :tex => :build
++  depends_on "qt" => :optional
++
    def install
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
++    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}",
++                          "--enable-doxygen", "--enable-html-docs", "--enable-dot", "--enable-latex-docs"
      system "make", "install"
    end
  
diff --cc Formula/cscope.rb
index 68ee797ea600,68ee797ea600..ecb28248e46c
--- a/Formula/cscope.rb
+++ b/Formula/cscope.rb
@@@ -12,9 -12,9 +12,14 @@@ class Cscope < Formul
      sha256 "cb2f63522d072307cacf63e8eabf4c284f2e8c1b2ff8c6de3aeb6fb8759a1212" => :mavericks
    end
  
++  depends_on "ncurses"
++  depends_on "pkg-config" => :build
++
    def install
      system "./configure", "--prefix=#{prefix}",
--                          "--mandir=#{man}"
++                          "--mandir=#{man}",
++                          "--enable-largefile",
++                          "--with-ncurses=#{Formula["ncurses"].prefix}"
      system "make", "install"
    end
  
diff --cc Formula/curl.rb
index a2864473780c,a2864473780c..bfdbf6586de3
--- a/Formula/curl.rb
+++ b/Formula/curl.rb
@@@ -27,10 -27,10 +27,10 @@@ class Curl < Formul
    # HTTP/2 support requires OpenSSL 1.0.2+ or LibreSSL 2.1.3+ for ALPN Support
    # which is currently not supported by Secure Transport (DarwinSSL).
    if MacOS.version < :mountain_lion || build.with?("nghttp2")
--    depends_on "openssl"
++    depends_on "libressl"
    else
--    option "with-openssl", "Build with OpenSSL instead of Secure Transport"
--    depends_on "openssl" => :optional
++    option "with-libressl", "Build with LibreSSL instead of Secure Transport"
++    depends_on "libressl" => :optional
    end
  
    depends_on "pkg-config" => :build
@@@ -39,6 -39,6 +39,10 @@@
    depends_on "c-ares" => :optional
    depends_on "libmetalink" => :optional
    depends_on "nghttp2" => :optional
++  depends_on "krb5"
++  depends_on "openldap"
++  depends_on "libidn2"
++  depends_on "zlib"
  
    def install
      args = %W[
@@@ -46,16 -46,16 +50,43 @@@
        --disable-dependency-tracking
        --disable-silent-rules
        --prefix=#{prefix}
++      --enable-optimize
++      --enable-symbol-hiding
++      --enable-http
++      --enable-ftp
++      --enable-file
++      --enable-ldap
++      --enable-ldaps
++      --enable-rtsp
++      --enable-proxy
++      --enable-dict
++      --enable-telnet
++      --enable-tftp
++      --enable-pop3
++      --enable-imap
++      --enable-smb
++      --enable-smtp
++      --enable-gopher
++      --enable-manual
++      --enable-libcurl-option
++      --enable-crypto-auth
++      --enable-tls-srp
++      --enable-unix-sockets
++      --enable-cookies
++      --with-zlib=#{Formula["zlib"].opt_prefix}
      ]
++      # Incompatible with c-ares
++      # --enable-threaded-resolver
++      # --enable-pthreads
  
      # cURL has a new firm desire to find ssl with PKG_CONFIG_PATH instead of using
      # "--with-ssl" any more. "when possible, set the PKG_CONFIG_PATH environment
      # variable instead of using this option". Multi-SSL choice breaks w/o using it.
--    if MacOS.version < :mountain_lion || build.with?("openssl") || build.with?("nghttp2")
--      ENV.prepend_path "PKG_CONFIG_PATH", "#{Formula["openssl"].opt_lib}/pkgconfig"
--      args << "--with-ssl=#{Formula["openssl"].opt_prefix}"
--      args << "--with-ca-bundle=#{etc}/openssl/cert.pem"
--      args << "--with-ca-path=#{etc}/openssl/certs"
++    if MacOS.version < :mountain_lion || build.with?("libressl") || build.with?("nghttp2")
++      ENV.prepend_path "PKG_CONFIG_PATH", "#{Formula["libressl"].opt_lib}/pkgconfig"
++      args << "--with-ssl=#{Formula["libressl"].opt_prefix}"
++      args << "--with-ca-bundle=#{etc}/libressl/cert.pem"
++      args << "--with-ca-path=#{etc}/libressl/certs"
      else
        args << "--with-darwinssl"
        args << "--without-ca-bundle"
diff --cc Formula/cvs.rb
index 6dff05efde53,6dff05efde53..2df72c3f29c7
--- a/Formula/cvs.rb
+++ b/Formula/cvs.rb
@@@ -38,6 -38,6 +38,10 @@@ class Cvs < Formul
            "patches/zlib.diff"
    end
  
++  depends_on "berkeley-db"
++  depends_on "gettext"
++  depends_on "libiconv"
++
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
@@@ -46,6 -46,6 +50,7 @@@
                            "--mandir=#{man}",
                            "--sysconfdir=#{etc}",
                            "--with-gssapi",
++                          "--disable-cvs-ndbm",
                            "--enable-pam",
                            "--enable-encryption",
                            "--with-external-zlib",
diff --cc Formula/dante.rb
index 379f1aca3028,379f1aca3028..95992909479b
--- a/Formula/dante.rb
+++ b/Formula/dante.rb
@@@ -12,10 -12,10 +12,15 @@@ class Dante < Formul
    end
  
    depends_on "miniupnpc" => :optional
++  depends_on "krb5" => :optional
++  depends_on "gsasl" => :optional
++  depends_on "openldap" => :optional
++  depends_on "heimdal" => :optional
  
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
++                          "--enable-release",
                            "--disable-silent-rules",
                            "--prefix=#{prefix}",
                            "--sysconfdir=#{etc}/dante"
diff --cc Formula/darcs.rb
index 3097e2287d24,3097e2287d24..664e9382737d
--- a/Formula/darcs.rb
+++ b/Formula/darcs.rb
@@@ -18,6 -18,6 +18,9 @@@ class Darcs < Formul
    depends_on "ghc" => :build
    depends_on "cabal-install" => :build
    depends_on "gmp"
++  depends_on "curl"
++  depends_on "zlib"
++  depends_on "ncurses"
  
    def install
      install_cabal_package
diff --cc Formula/dash.rb
index 90c752972b63,90c752972b63..dc1f1ec92187
--- a/Formula/dash.rb
+++ b/Formula/dash.rb
@@@ -14,6 -14,6 +14,8 @@@ class Dash < Formul
      sha256 "dd1cccafe8f7a004d396bccf8382e0049aa472be062281cbf75902e2258a91c4" => :yosemite
    end
  
++  depends_on "libedit"
++
    head do
      url "https://git.kernel.org/pub/scm/utils/dash/dash.git"
      depends_on "autoconf" => :build
diff --cc Formula/dbus-glib.rb
index f1f4b4e87d73,f1f4b4e87d73..e6c84e48a4d4
--- a/Formula/dbus-glib.rb
+++ b/Formula/dbus-glib.rb
@@@ -20,7 -20,7 +20,8 @@@ class DbusGlib < Formul
  
    def install
      system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-bash-completion"
      system "make", "install"
    end
  
diff --cc Formula/dbus.rb
index ebb1e2d1ecbd,ebb1e2d1ecbd..e9e9f90386ac
--- a/Formula/dbus.rb
+++ b/Formula/dbus.rb
@@@ -27,7 -27,7 +27,11 @@@ class Dbus < Formul
      depends_on "libtool" => :build
    end
  
++  depends_on :x11
    depends_on "xmlto" => :build
++  depends_on "gettext"
++  depends_on "expat"
++  depends_on "doxygen" => :build
  
    # Patch applies the config templating fixed in https://bugs.freedesktop.org/show_bug.cgi?id=94494
    # Homebrew pr/issue: 50219
@@@ -47,11 -47,11 +51,13 @@@
                            "--prefix=#{prefix}",
                            "--localstatedir=#{var}",
                            "--sysconfdir=#{etc}",
++                          "--enable-largefile",
                            "--enable-xml-docs",
--                          "--disable-doxygen-docs",
++                          "--enable-doxygen-docs",
++                          "--enable-kqueue",
                            "--enable-launchd",
                            "--with-launchd-agent-dir=#{prefix}",
--                          "--without-x",
++                          "--with-x",
                            "--disable-tests"
      system "make"
      ENV.deparallelize
diff --cc Formula/doxygen.rb
index 40ae63a6d1f0,40ae63a6d1f0..951a12bbcf9f
--- a/Formula/doxygen.rb
+++ b/Formula/doxygen.rb
@@@ -28,6 -28,6 +28,7 @@@ class Doxygen < Formul
    option "with-graphviz", "Build with dot command support from Graphviz."
    option "with-qt", "Build GUI frontend with Qt support."
    option "with-llvm", "Build with libclang support."
++  option "with-search", "Build with doxysearch"
  
    deprecated_option "with-dot" => "with-graphviz"
    deprecated_option "with-doxywizard" => "with-qt"
@@@ -38,9 -38,9 +39,12 @@@
    depends_on "graphviz" => :optional
    depends_on "qt" => :optional
    depends_on "llvm" => :optional
++  depends_on "xapian" if build.with? "search"
  
    def install
      args = std_cmake_args << "-DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=#{MacOS.version}"
++    args << "-Dbuild_search=ON" if build.with? "search"
++    args << "-Dbuild_doc=ON"
      args << "-Dbuild_wizard=ON" if build.with? "qt"
      args << "-Duse_libclang=ON -DLLVM_CONFIG=#{Formula["llvm"].opt_bin}/llvm-config" if build.with? "llvm"
  
diff --cc Formula/e2fsprogs.rb
index 4babc8db71ea,4babc8db71ea..68ac2f9094e4
--- a/Formula/e2fsprogs.rb
+++ b/Formula/e2fsprogs.rb
@@@ -17,10 -17,10 +17,35 @@@ class E2fsprogs < Formul
  
    depends_on "pkg-config" => :build
    depends_on "gettext"
++  depends_on "libiconv"
++  depends_on :tex
  
    def install
--    system "./configure", "--prefix=#{prefix}", "--disable-e2initrd-helper"
++    args = %W[
++      --prefix=#{prefix}
++      --enable-symlink-install
++      --enable-relative-symlinks
++      --enable-symlink-build
++      --enable-bsd-shlibs
++      --enable-quota
++      --enable-fsck
++      --disable-e2initrd-helper
++      --enable-threads=posix
++    ]
++
++    # Yay for makefile race conditions. Required for installation, but might as
++    # well play it safe
++    ENV.deparallelize
++
++    system "./configure", *args
++
++    # Make sure dylibs properly reference other dylibs
++    inreplace "lib/blkid/Makefile", "-o $(BSD_LIB)", "../$(LIBUUID) -o $(BSD_LIB)"
++    inreplace "lib/ext2fs/Makefile", "-o $(BSD_LIB)", "../$(LIBE2P) ../$(LIBCOM_ERR) ../$(LIBSS) -o $(BSD_LIB)"
++    inreplace "lib/ss/Makefile", "-o $(BSD_LIB)", "../$(LIBCOM_ERR) -o $(BSD_LIB)"
++
      system "make"
++    system "make", "docs"
      system "make", "install"
      system "make", "install-libs"
    end
@@@ -29,4 -29,4 +54,15 @@@
      assert_equal 36, shell_output("#{bin}/uuidgen").strip.length
      system bin/"lsattr", "-al"
    end
++
++  def caveats
++    s = ""
++    s += <<-EOS.undent
++    This installs UUID headers that conflict with those provided by the macOS kernel
++
++    libquota.a wasn't installed for some reason, and no shared library was
++    built. I have no clue why.
++    EOS
++    s
++  end
  end
diff --cc Formula/emacs.rb
index 7ac3d05647eb,7ac3d05647eb..d9be35453e19
--- a/Formula/emacs.rb
+++ b/Formula/emacs.rb
@@@ -19,12 -19,12 +19,13 @@@ class Emacs < Formul
  
    head do
      url "https://github.com/emacs-mirror/emacs.git"
--
--    depends_on "autoconf" => :build
--    depends_on "gnu-sed" => :build
--    depends_on "texinfo" => :build
    end
  
++  depends_on "autoconf" => :build
++  depends_on "automake" => :build
++  depends_on "gnu-sed" => :build
++  depends_on "texinfo" => :build
++
    option "with-cocoa", "Build a Cocoa version of emacs"
    option "with-ctags", "Don't remove the ctags executable that emacs provides"
    option "without-libxml2", "Don't build with libxml2 support"
@@@ -33,16 -33,16 +34,24 @@@
    deprecated_option "cocoa" => "with-cocoa"
    deprecated_option "keep-ctags" => "with-ctags"
    deprecated_option "with-d-bus" => "with-dbus"
--  deprecated_option "imagemagick" => "imagemagick@6"
  
    depends_on "pkg-config" => :build
++  depends_on "gawk" => :build
    depends_on "dbus" => :optional
    depends_on "gnutls" => :optional
    depends_on "librsvg" => :optional
    # Emacs does not support ImageMagick 7:
    # Reported on 2017-03-04: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25967
--  depends_on "imagemagick@6" => :optional
++  depends_on "imagemagick" => :optional
    depends_on "mailutils" => :optional
++  depends_on "libtiff" => :build
++  depends_on "libpng" => :build
++  depends_on "giflib" => :build
++  depends_on "cairo" => :build
++  depends_on "gconf" => :build
++  depends_on "freetype" => :build
++  depends_on "glib" => :build
++  depends_on "zlib" => :build
  
    def install
      args = %W[
@@@ -72,23 -72,23 +81,29 @@@
        args << "--without-gnutls"
      end
  
--    # Note that if ./configure is passed --with-imagemagick but can't find the
--    # library it does not fail but imagemagick support will not be available.
--    # See: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=24455
--    if build.with? "imagemagick@6"
++    if build.with? "imagemagick"
        args << "--with-imagemagick"
++      inreplace "configure.ac", "Wand", "MagickWand"
++      inreplace "configure.ac", "AC_DEFINE(HAVE_IMAGEMAGICK, 1, [Define to 1 if using imagemagick.])", "AC_DEFINE(HAVE_IMAGEMAGICK, 1, [Define to 1 if using imagemagick.])\n      AC_DEFINE(HAVE_MAGICKMERGEIMAGELAYERS, 1, [Define to 1 if using ImageMagick >= 7.])"
++      inreplace "src/image.c", "wand/MagickWand.h", "MagickWand/MagickWand.h"
++      inreplace "src/image.c", "magick/version.h", "MagickCore/version.h"
++      inreplace "src/image.c", "MagickPixelPacket", "PixelInfo"
++      inreplace "src/image.c", "PixelSetMagickColor", "PixelSetPixelColor"
      else
        args << "--without-imagemagick"
      end
--
      args << "--with-modules" if build.with? "modules"
++    args << "--with-jpeg"
++    args << "--with-tiff"
++    args << "--with-gif"
++    args << "--with-png"
      args << "--with-rsvg" if build.with? "librsvg"
      args << "--without-pop" if build.with? "mailutils"
--
--    if build.head?
--      ENV.prepend_path "PATH", Formula["gnu-sed"].opt_libexec/"gnubin"
--      system "./autogen.sh"
--    end
++    args << "--with-kerberos5"
++    args << "--with-cairo"
++    args << "--with-gconf"
++    args << "--with-gsettings"
++    args << "--with-zlib"
  
      if build.with? "cocoa"
        args << "--with-ns" << "--disable-ns-self-contained"
@@@ -96,19 -96,19 +111,14 @@@
        args << "--without-ns"
      end
  
++    ENV.prepend_path "PATH", Formula["gnu-sed"].opt_libexec/"gnubin"
++    system "./autogen.sh"
      system "./configure", *args
      system "make"
      system "make", "install"
  
      if build.with? "cocoa"
        prefix.install "nextstep/Emacs.app"
--
--      # Replace the symlink with one that avoids starting Cocoa.
--      (bin/"emacs").unlink # Kill the existing symlink
--      (bin/"emacs").write <<-EOS.undent
--        #!/bin/bash
--        exec #{prefix}/Emacs.app/Contents/MacOS/Emacs "$@"
--      EOS
      end
  
      # Follow MacPorts and don't install ctags from Emacs. This allows Vim
diff --cc Formula/enscript.rb
index 1b4c6d3084fb,1b4c6d3084fb..6e1c3d8646f2
--- a/Formula/enscript.rb
+++ b/Formula/enscript.rb
@@@ -18,12 -18,12 +18,13 @@@ class Enscript < Formul
    keg_only :provided_pre_mountain_lion
  
    depends_on "gettext"
++  depends_on "libiconv"
  
    conflicts_with "cspice", :because => "both install `states` binaries"
  
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}", "--enable-threads=posix"
      system "make", "install"
    end
  
diff --cc Formula/exiv2.rb
index ad6dd6ed0103,ad6dd6ed0103..30a6b85f7a4f
--- a/Formula/exiv2.rb
+++ b/Formula/exiv2.rb
@@@ -20,6 -20,6 +20,13 @@@ class Exiv2 < Formul
      depends_on "libssh"
    end
  
++  depends_on "gettext"
++  depends_on "zlib"
++  depends_on "libiconv"
++  depends_on "expat"
++  depends_on "curl"
++  depends_on "libssh"
++
    def install
      if build.head?
        args = std_cmake_args
@@@ -50,7 -50,7 +57,22 @@@
          mv prefix/"man", man
        end
      else
--      system "./configure", "--prefix=#{prefix}", "--disable-dependency-tracking"
++      args = %W[
++        --prefix=#{prefix}
++        --disable-dependency-tracking
++        --enable-nls
++        --enable-lensdata
++        --enable-xmp
++        --enable-video
++        --enable-webready
++        --with-libiconv-prefix
++        --with-libintl-prefix
++        --with-zlib
++        --with-curl
++        --with-ssh
++        --with-expat
++      ]
++      system "./configure", *args
        system "make", "install"
      end
    end
diff --cc Formula/faac.rb
index d3518023c756,d3518023c756..e23df6793907
--- a/Formula/faac.rb
+++ b/Formula/faac.rb
@@@ -14,9 -14,9 +14,12 @@@ class Faac < Formul
      sha256 "e2cf2e63defd76653bc96443956f28bb9e0388a76cda5d0c8c463528d68a191a" => :mountain_lion
    end
  
++  depends_on :fortran
++  depends_on "mp4v2"
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}", "--enable-drm", "--with-mp4v2"
      system "make", "install"
    end
  
diff --cc Formula/ffmpeg.rb
index 651e0d819007,651e0d819007..1b447ee704ed
--- a/Formula/ffmpeg.rb
+++ b/Formula/ffmpeg.rb
@@@ -1,3 -1,3 +1,5 @@@
++require File.expand_path("/Users/awang/code/homebrew-science/Requirements/cuda_requirement", __FILE__)
++
  class Ffmpeg < Formula
    desc "Play, record, convert, and stream audio and video"
    homepage "https://ffmpeg.org/"
@@@ -29,7 -29,7 +31,7 @@@
    option "with-opencore-amr", "Enable Opencore AMR NR/WB audio format"
    option "with-openh264", "Enable OpenH264 library"
    option "with-openjpeg", "Enable JPEG 2000 image format"
--  option "with-openssl", "Enable SSL support"
++  option "with-openssl@1.1", "Enable SSL support"
    option "with-rtmpdump", "Enable RTMP protocol"
    option "with-rubberband", "Enable rubberband library"
    option "with-schroedinger", "Enable Dirac video format"
@@@ -65,10 -65,10 +67,15 @@@
    depends_on "freetype" => :optional
    depends_on "frei0r" => :optional
    depends_on "game-music-emu" => :optional
++  depends_on "gmp" => :optional
++  depends_on "kvazaar" => :optional
    depends_on "libass" => :optional
    depends_on "libbluray" => :optional
    depends_on "libbs2b" => :optional
    depends_on "libcaca" => :optional
++  depends_on "libcdio" => :optional
++  depends_on "libdc1394" => :optional
++  depends_on "libilbc" => :optional
    depends_on "libgsm" => :optional
    depends_on "libmodplug" => :optional
    depends_on "libsoxr" => :optional
@@@ -76,11 -76,11 +83,14 @@@
    depends_on "libvidstab" => :optional
    depends_on "libvorbis" => :optional
    depends_on "libvpx" => :optional
++  depends_on "netcdf" => :optional
    depends_on "opencore-amr" => :optional
++  depends_on "opencv3" => :optional
    depends_on "openh264" => :optional
    depends_on "openjpeg" => :optional
--  depends_on "openssl" => :optional
++  depends_on "openssl@1.1" => :optional
    depends_on "opus" => :optional
++  depends_on "pulseaudio" => :optional
    depends_on "rtmpdump" => :optional
    depends_on "rubberband" => :optional
    depends_on "schroedinger" => :optional
@@@ -97,6 -97,6 +107,8 @@@
    depends_on "zeromq" => :optional
    depends_on "zimg" => :optional
  
++  depends_on CudaRequirement => :optional
++
    def install
      # Fixes "dyld: lazy symbol binding failed: Symbol not found: _clock_gettime"
      if MacOS.version == "10.11" && MacOS::Xcode.installed? && MacOS::Xcode.version >= "8.0"
@@@ -115,26 -115,26 +127,41 @@@
        --cc=#{ENV.cc}
        --host-cflags=#{ENV.cflags}
        --host-ldflags=#{ENV.ldflags}
++      --enable-vda
      ]
  
++    if build.with? "cuda"
++      odie "FFMPEG requires libnvcuvid from CUDA, which is only available for Windows and Linux :("
++      args << "--enable-cuda"
++      args << "--extra-cflags=-I/usr/local/cuda/include"
++      args << "--extra-ldflags=-L/usr/local/cuda/lib"
++    end
++
      args << "--disable-indev=qtkit" if build.without? "qtkit"
      args << "--disable-securetransport" if build.without? "securetransport"
      args << "--enable-chromaprint" if build.with? "chromaprint"
      args << "--enable-ffplay" if build.with? "sdl2"
      args << "--enable-frei0r" if build.with? "frei0r"
++    args << "--enable-gmp" if build.with? "gmp"
      args << "--enable-libass" if build.with? "libass"
      args << "--enable-libbluray" if build.with? "libbluray"
      args << "--enable-libbs2b" if build.with? "libbs2b"
      args << "--enable-libcaca" if build.with? "libcaca"
      args << "--enable-libebur128" if build.stable? && build.with?("libebur128")
++    args << "--enable-libcdio" if build.with? "libcdio"
++    args << "--enable-libdc1394" if build.with? "libdc1394"
      args << "--enable-libfdk-aac" if build.with? "fdk-aac"
      args << "--enable-libfontconfig" if build.with? "fontconfig"
      args << "--enable-libfreetype" if build.with? "freetype"
      args << "--enable-libgme" if build.with? "game-music-emu"
      args << "--enable-libgsm" if build.with? "libgsm"
++    args << "--enable-libilbc" if build.with? "libilbc"
++    args << "--enable-libkvazaar" if build.with? "kvazaar"
      args << "--enable-libmodplug" if build.with? "libmodplug"
      args << "--enable-libmp3lame" if build.with? "lame"
++    args << "--enable-libpulse" if build.with? "pulseaudio"
      args << "--enable-libopencore-amrnb" << "--enable-libopencore-amrwb" if build.with? "opencore-amr"
++    args << "--enable-libopencv" if build.with? "opencv3"
      args << "--enable-libopenh264" if build.with? "openh264"
      args << "--enable-libopus" if build.with? "opus"
      args << "--enable-librtmp" if build.with? "rtmpdump"
@@@ -157,8 -157,8 +184,9 @@@
      args << "--enable-libxvid" if build.with? "xvid"
      args << "--enable-libzimg" if build.with? "zimg"
      args << "--enable-libzmq" if build.with? "zeromq"
++    args << "--enable-netcdf" if build.with? "netcdf"
      args << "--enable-opencl" if MacOS.version > :lion
--    args << "--enable-openssl" if build.with? "openssl"
++    args << "--enable-openssl" if build.with? "openssl@1.1"
  
      if build.with? "xz"
        args << "--enable-lzma"
@@@ -174,19 -174,19 +202,11 @@@
  
      # These librares are GPL-incompatible, and require ffmpeg be built with
      # the "--enable-nonfree" flag, which produces unredistributable libraries
--    if %w[fdk-aac openssl].any? { |f| build.with? f }
++    if %w[fdk-aac openssl@1.1].any? { |f| build.with? f }
        args << "--enable-nonfree"
      end
  
--    # A bug in a dispatch header on 10.10, included via CoreFoundation,
--    # prevents GCC from building VDA support. GCC has no problems on
--    # 10.9 and earlier.
--    # See: https://github.com/Homebrew/homebrew/issues/33741
--    if MacOS.version < :yosemite || ENV.compiler == :clang
        args << "--enable-vda"
--    else
--      args << "--disable-vda"
--    end
  
      # For 32-bit compilation under gcc 4.2, see:
      # https://trac.macports.org/ticket/20938#comment:22
diff --cc Formula/fftw.rb
index 3cac76e4b4de,3cac76e4b4de..c172f4b1ffec
--- a/Formula/fftw.rb
+++ b/Formula/fftw.rb
@@@ -18,25 -18,25 +18,41 @@@ class Fftw < Formul
  
    depends_on :fortran => :optional
    depends_on :mpi => [:cc, :optional]
++  depends_on "ocaml" => :optional
++  if build.with? "ocaml"
++    depends_on "ocamlbuild"
++  end
++
    needs :openmp if build.with? "openmp"
  
    def install
      args = ["--enable-shared",
++            "--enable-static",
              "--disable-debug",
              "--prefix=#{prefix}",
              "--enable-threads",
--            "--disable-dependency-tracking"]
--    simd_args = ["--enable-sse2"]
--    simd_args << "--enable-avx" if ENV.compiler == :clang && Hardware::CPU.avx? && !build.bottle?
--    simd_args << "--enable-avx2" if ENV.compiler == :clang && Hardware::CPU.avx2? && !build.bottle?
++            "--disable-dependency-tracking",
++            "--enable-fma"
++    ]
  
      args << "--disable-fortran" if build.without? "fortran"
      args << "--enable-mpi" if build.with? "mpi"
      args << "--enable-openmp" if build.with? "openmp"
  
++    simd_args = %W[
++      --enable-sse2
++      --enable-avx
++      --enable-avx2
++      --enable-avx-128-fma
++      --enable-generic-simd128
++      --enable-generic-simd256
++    ]
++
      # single precision
      # enable-sse2, enable-avx and enable-avx2 work for both single and double precision
--    system "./configure", "--enable-single", *(args + simd_args)
++    system "./configure", "--enable-single", "--enable-sse", *simd_args, *args
++    system "make", "all"
++    # system "make", "check"
      system "make", "install"
  
      # clean up so we can compile the double precision variant
@@@ -44,7 -44,7 +60,9 @@@
  
      # double precision
      # enable-sse2, enable-avx and enable-avx2 work for both single and double precision
--    system "./configure", *(args + simd_args)
++    system "./configure", *simd_args, *args
++    system "make", "all"
++    # system "make", "check"
      system "make", "install"
  
      # clean up so we can compile the long-double precision variant
@@@ -53,6 -53,6 +71,8 @@@
      # long-double precision
      # no SIMD optimization available
      system "./configure", "--enable-long-double", *args
++    system "make", "all"
++    # system "make", "check"
      system "make", "install"
    end
  
diff --cc Formula/findutils.rb
index 369e0da59794,369e0da59794..f8a5ee74a33e
--- a/Formula/findutils.rb
+++ b/Formula/findutils.rb
@@@ -18,6 -18,6 +18,10 @@@ class Findutils < Formul
  
    option "with-default-names", "Do not prepend 'g' to the binary"
  
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "python"
++
    def install
      # Work around unremovable, nested dirs bug that affects lots of
      # GNU projects. See:
@@@ -34,6 -34,6 +38,7 @@@
        --localstatedir=#{var}/locate
        --disable-dependency-tracking
        --disable-debug
++      --enable-threads=posix
      ]
      args << "--program-prefix=g" if build.without? "default-names"
  
diff --cc Formula/flac.rb
index be0252246100,be0252246100..6c4330cea59e
--- a/Formula/flac.rb
+++ b/Formula/flac.rb
@@@ -21,7 -21,7 +21,8 @@@ class Flac < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on "libogg" => :optional
++  depends_on "libogg"
++  depends_on "libiconv"
  
    fails_with :clang do
      build 500
@@@ -34,11 -34,11 +35,15 @@@
        --disable-debug
        --prefix=#{prefix}
        --enable-static
++      --enable-largefile
++      --enable-asm-optimizations
++      --enable-sse
++      --enable-avx
++      --enable-64-bit-words
++      --enable-cpplibs
++      --enable-ogg
      ]
  
--    args << "--disable-asm-optimizations" if Hardware::CPU.is_32_bit?
--    args << "--without-ogg" if build.without? "libogg"
--
      system "./autogen.sh" if build.head?
      system "./configure", *args
      system "make", "install"
diff --cc Formula/flex.rb
index 53357611c41d,53357611c41d..74858dbcf284
--- a/Formula/flex.rb
+++ b/Formula/flex.rb
@@@ -14,6 -14,6 +14,7 @@@ class Flex < Formul
  
    depends_on "help2man" => :build
    depends_on "gettext"
++  depends_on "libiconv"
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/fontconfig.rb
index a17422578814,a17422578814..df9b0e04a3c3
--- a/Formula/fontconfig.rb
+++ b/Formula/fontconfig.rb
@@@ -48,12 -48,12 +48,18 @@@ class Fontconfig < Formul
  
    depends_on "pkg-config" => :build
    depends_on "freetype"
++  depends_on "libiconv"
++  depends_on "expat"
  
    def install
      system "autoreconf", "-iv" if build.head?
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-largefile",
                            "--enable-static",
++                          "--enable-iconv",
++                          "--with-libiconv=#{Formula["libiconv"].prefix}",
++                          "--with-expat=#{Formula["expat"].prefix}",
                            "--with-add-fonts=/System/Library/Fonts,/Library/Fonts,~/Library/Fonts",
                            "--prefix=#{prefix}",
                            "--localstatedir=#{var}",
diff --cc Formula/freetds.rb
index e9ee781951ae,e9ee781951ae..0fadcce115f1
--- a/Formula/freetds.rb
+++ b/Formula/freetds.rb
@@@ -18,6 -18,6 +18,9 @@@ class Freetds < Formul
      depends_on "automake" => :build
      depends_on "gettext" => :build
      depends_on "libtool" => :build
++    depends_on "perl" => :build
++    depends_on "gawk" => :build
++    depends_on "doxygen" => :build
    end
  
    option "with-msdblib", "Enable Microsoft behavior in the DB-Library API where it diverges from Sybase's"
diff --cc Formula/freetype.rb
index d3e853817460,d3e853817460..13fe36c7850a
--- a/Formula/freetype.rb
+++ b/Formula/freetype.rb
@@@ -16,7 -16,7 +16,11 @@@ class Freetype < Formul
  
    option "without-subpixel", "Disable sub-pixel rendering (a.k.a. LCD rendering, or ClearType)"
  
++  depends_on "pkg-config" => :build
++  depends_on "zlib"
++  depends_on "bzip2"
    depends_on "libpng"
++  depends_on "harfbuzz" => :optional
  
    def install
      if build.with? "subpixel"
@@@ -25,7 -25,7 +29,21 @@@
            "#define FT_CONFIG_OPTION_SUBPIXEL_RENDERING"
      end
  
--    system "./configure", "--prefix=#{prefix}", "--without-harfbuzz"
++    args = %W[
++      --prefix=#{prefix}
++      --enable-largefile
++      --enable-mmap
++      --with-zlib=yes
++      --with-bzip2=yes
++      --with-png=yes
++    ]
++
++    if build.with? "harfbuzz"
++      args << "--with-harfbuzz=yes"
++    else
++      args << "--with-harfbuzz=no"
++    end
++    system "./configure", *args
      system "make"
      system "make", "install"
  
diff --cc Formula/fribidi.rb
index c0adfa82a58f,c0adfa82a58f..19ea4d658da3
--- a/Formula/fribidi.rb
+++ b/Formula/fribidi.rb
@@@ -19,7 -19,7 +19,7 @@@ class Fribidi < Formul
  
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--with-glib", "--prefix=#{prefix}"
++                          "--with-glib", "--prefix=#{prefix}", "--enable-static"
      system "make", "install"
    end
  
diff --cc Formula/gawk.rb
index 1db0bdaf8ca7,1db0bdaf8ca7..ae663c3282b0
--- a/Formula/gawk.rb
+++ b/Formula/gawk.rb
@@@ -13,13 -13,13 +13,25 @@@ class Gawk < Formul
    end
  
    depends_on "mpfr"
++  depends_on "gmp"
++  depends_on "libiconv"
++  depends_on "gettext"
    depends_on "readline"
++  depends_on "libsigsegv"
  
    def install
--    system "./configure", "--disable-debug",
--                          "--disable-dependency-tracking",
--                          "--prefix=#{prefix}",
--                          "--without-libsigsegv-prefix"
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-largefile
++      --enable-nls
++      --enable-extensions
++      --with-libiconv-prefix=#{Formula["libiconv"].prefix}
++      --with-libintl-prefix=#{Formula["gettext"].prefix}
++      --with-libsigsegv-prefix=#{Formula["libsigsegv"].prefix}
++    ]
++    system "./configure", *args
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/gcc.rb
index ec77cee83576,ec77cee83576..d477c45fd5bc
--- a/Formula/gcc.rb
+++ b/Formula/gcc.rb
@@@ -31,7 -31,7 +31,6 @@@ class Gcc < Formul
  
    # GCC's Go compiler is not currently supported on macOS.
    # See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=46986
--  option "with-java", "Build the gcj compiler"
    option "with-all-languages", "Enable all compilers and languages, except Ada"
    option "with-nls", "Build with native language support (localization)"
    option "with-jit", "Build the jit compiler"
@@@ -43,7 -43,7 +42,9 @@@
    depends_on "libmpc"
    depends_on "mpfr"
    depends_on "isl"
--  depends_on "ecj" if build.with?("java") || build.with?("all-languages")
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "zlib"
  
    fails_with :gcc_4_0
  
@@@ -82,18 -82,18 +83,15 @@@
        # Everything but Ada, which requires a pre-existing GCC Ada compiler
        # (gnat) to bootstrap. GCC 4.6.0 adds go as a language option, but it is
        # currently only compilable on Linux.
--      languages = %w[c c++ objc obj-c++ fortran java jit]
++      languages = %w[c c++ objc obj-c++ fortran jit lto]
      else
        # C, C++, ObjC compilers are always built
        languages = %w[c c++ objc obj-c++]
  
        languages << "fortran" if build.with? "fortran"
--      languages << "java" if build.with? "java"
        languages << "jit" if build.with? "jit"
      end
  
--    languages -= ["java"] if build.head?
--
      # Even when suffixes are appended, the info pages conflict when
      # install-info is run so pretend we have an outdated makeinfo
      # to prevent their build.
@@@ -102,6 -102,6 +100,29 @@@
      args = [
        "--build=#{arch}-apple-darwin#{osmajor}",
        "--prefix=#{prefix}",
++      "--enable-gold",
++      "--enable-ld",
++      "--enable-compressed-debug-sections=all",
++      "--enable-libquadmath",
++      "--enable-libquadmath-support",
++      "--enable-libssp",
++      "--enable-libgomp",
++      "--enable-libsanitizer",
++      "--enable-libvtv",
++      "--enable-threads",
++
++      # This appears to break compilation of libitm (transactional memory)
++      # The target is alloc_cpp.lo
++      # Error "unsupported symbol modifier in relocation"
++      # With arrow pointing to leaq assembly instruction
++      #
++      # Not entirely sure what exactly the problem is; I *think* it's some kind
++      # of bad interaction with the linker and libLTO. Also not sure why this
++      # doesn't break things when not manually enabled, since I *think* it is
++      # enabled by configure anyways.
++      # "--enable-tls",
++      #
++      "--with-libiconv-prefix=#{Formula["libiconv"].prefix}",
        "--libdir=#{lib}/gcc/#{version_suffix}",
        "--enable-languages=#{languages.join(",")}",
        # Make most executables versioned to avoid conflicts.
@@@ -129,10 -129,10 +150,6 @@@
  
      args << "--disable-nls" if build.without? "nls"
  
--    if build.with?("java") || build.with?("all-languages")
--      args << "--with-ecj-jar=#{Formula["ecj"].opt_share}/java/ecj.jar"
--    end
--
      if build.without?("multilib") || !MacOS.prefer_64_bit?
        args << "--disable-multilib"
      else
diff --cc Formula/gconf.rb
index 7935b692ed28,7935b692ed28..317a46ff6a4d
--- a/Formula/gconf.rb
+++ b/Formula/gconf.rb
@@@ -19,11 -19,11 +19,13 @@@ class Gconf < Formul
    depends_on "glib"
    depends_on "dbus-glib"
    depends_on "orbit"
++  depends_on "gtk+3"
++  depends_on "openldap"
  
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
                            "--disable-silent-rules", "--prefix=#{prefix}",
--                          "--sysconfdir=#{etc}"
++                          "--sysconfdir=#{etc}", "--enable-gsettings-backend", "--with-openldap"
      system "make", "install"
  
      # Refresh the cache post-install, not during install.
diff --cc Formula/gd.rb
index 3b984052f85f,3b984052f85f..fdc60a713ef3
--- a/Formula/gd.rb
+++ b/Formula/gd.rb
@@@ -34,13 -34,13 +34,18 @@@ class Gd < Formul
    depends_on "libpng" => :recommended
    depends_on "libtiff" => :recommended
    depends_on "webp" => :recommended
++  depends_on "libiconv"
++  depends_on "zlib"
++  depends_on "pngquant"
++  needs :openmp
  
    def install
      args = %W[
        --disable-dependency-tracking
        --prefix=#{prefix}
--      --without-x
--      --without-xpm
++      --with-x
++      --with-liq
++      --with-xpm
      ]
  
      if build.with? "libpng"
diff --cc Formula/gdb.rb
index a40eddbe5a5b,a40eddbe5a5b..6ff73bb43de6
--- a/Formula/gdb.rb
+++ b/Formula/gdb.rb
@@@ -33,7 -33,7 +33,12 @@@ class Gdb < Formul
  
    depends_on "pkg-config" => :build
    depends_on "python" => :optional
++  depends_on "readline"
++  depends_on "xz"
    depends_on "guile" => :optional
++  depends_on "isl"
++  depends_on :fortran
++  depends_on "zlib"
  
    if MacOS.version >= :sierra
      patch do
@@@ -50,9 -50,9 +55,13 @@@
  
    def install
      args = [
++      "--enable-tui",
        "--prefix=#{prefix}",
        "--disable-debug",
        "--disable-dependency-tracking",
++      "--with-system-readline",
++      "--with-lzma",
++      "--with-system-zlib"
      ]
  
      args << "--with-guile" if build.with? "guile"
diff --cc Formula/gdbm.rb
index 1e8e359a538d,1e8e359a538d..8d2917142a1d
--- a/Formula/gdbm.rb
+++ b/Formula/gdbm.rb
@@@ -13,6 -13,6 +13,9 @@@ class Gdbm < Formul
    end
  
    option "with-libgdbm-compat", "Build libgdbm_compat, a compatibility layer which provides UNIX-like dbm and ndbm interfaces."
++  depends_on "libiconv" => :optional
++  depends_on "gettext"
++  depends_on "readline"
  
    # Use --without-readline because readline detection is broken in 1.13
    # https://github.com/Homebrew/homebrew-core/pull/10903
@@@ -20,12 -20,12 +23,25 @@@
      args = %W[
        --disable-dependency-tracking
        --disable-silent-rules
--      --without-readline
++      --with-libintl-prefix=#{Formula["gettext"].prefix}
++      --enable-largefile
++      --enable-nls
        --prefix=#{prefix}
      ]
  
      args << "--enable-libgdbm-compat" if build.with? "libgdbm-compat"
  
++    if build.with? "libiconv"
++      args << "--with-libiconv-prefix=#{Formula["libiconv"].prefix}"
++    end
++
++    system "./configure", *args
++    system "make", "install"
++
++    # gdbmexport
++    args << "--enable-gdbm-export"
++    args << "--with-gdbm183-libdir=#{lib}"
++    args << "--with-gdbm183-includedir=#{include}"
      system "./configure", *args
      system "make", "install"
    end
diff --cc Formula/gdk-pixbuf.rb
index d64f3db8d08a,d64f3db8d08a..83cf271a0238
--- a/Formula/gdk-pixbuf.rb
+++ b/Formula/gdk-pixbuf.rb
@@@ -19,8 -19,8 +19,13 @@@ class GdkPixbuf < Formul
    depends_on "jpeg"
    depends_on "libtiff"
    depends_on "libpng"
++  depends_on "jasper"
++  depends_on :x11
    depends_on "gobject-introspection"
    depends_on "shared-mime-info"
++  depends_on "gtk-doc" => :optional
++  depends_on "libiconv"
++  depends_on "gettext"
  
    # 'loaders.cache' must be writable by other packages
    skip_clean "lib/gdk-pixbuf-2.0"
@@@ -51,6 -51,6 +56,8 @@@
        --disable-Bsymbolic
        --enable-static
        --without-gdiplus
++      --with-libjasper
++      --with-x11
      ]
  
      args << "--enable-relocations" if build.with?("relocations")
diff --cc Formula/gengetopt.rb
index b97249c6e474,b97249c6e474..f846999493ab
--- a/Formula/gengetopt.rb
+++ b/Formula/gengetopt.rb
@@@ -13,6 -13,6 +13,10 @@@ class Gengetopt < Formul
      sha256 "55332e9f5e24e737976f0212776ddc0d6609bed62eaef4ac80884eaa5171ef76" => :mavericks
    end
  
++  depends_on "gettext"
++  depends_on "source-highlight"
++  depends_on "help2man" => :build
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
diff --cc Formula/geoipupdate.rb
index 22f3327a11e2,22f3327a11e2..fa2d1ea4fa28
--- a/Formula/geoipupdate.rb
+++ b/Formula/geoipupdate.rb
@@@ -17,6 -17,6 +17,9 @@@ class Geoipupdate < Formul
      depends_on "libtool" => :build
    end
  
++  depends_on "curl"
++  depends_on "zlib"
++
    def install
      system "./bootstrap" if build.head?
  
diff --cc Formula/gettext.rb
index 4f109c4fdfc5,4f109c4fdfc5..cb7ac26993ae
--- a/Formula/gettext.rb
+++ b/Formula/gettext.rb
@@@ -16,24 -16,24 +16,118 @@@ class Gettext < Formul
  
    # https://savannah.gnu.org/bugs/index.php?46844
    depends_on "libxml2" if MacOS.version <= :mountain_lion
++  option "with-openmp", "Build with OpenMP"
++  needs :openmp if build.with? "openmp"
++
++  depends_on :java => :optional
++  depends_on "mono" => :optional
++  depends_on "ncurses" => :optional
++
++  # Not needed on 10.3 or newer, but highly recommended on all other systems
++  # macOS appears to use GNU libiconv?
++  depends_on "libiconv"
++
++  # Subset is included
++  depends_on "glib" => :optional
++
++  # Subset is included
++  depends_on "libcroco" => :optional
++
++  # Subset is included
++  depends_on "libunistring"
++
++  # Subset is included
++  depends_on "libxml2" => :optional
++
++  depends_on "emacs" => :optional
++  depends_on "git" => :optional
++  depends_on "gzip"
++  depends_on "bzip2"
++  depends_on "xz"
++  depends_on "gnu-tar" => :optional
++
++  # Head-only?
++  depends_on "automake" => :build
++  depends_on "autoconf" => :build
++  depends_on "m4" => :build
++  # depends_on "byacc" => :build
++  depends_on "bison" => :build
++  depends_on "gperf" => :build
++  depends_on "groff" => :build
++  depends_on "texinfo" => :build
++  depends_on :tex => :build
++
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--disable-debug",
--                          "--prefix=#{prefix}",
--                          "--with-included-gettext",
--                          "--with-included-glib",
--                          "--with-included-libcroco",
--                          "--with-included-libunistring",
--                          "--with-emacs",
--                          "--with-lispdir=#{elisp}",
--                          "--disable-java",
--                          "--disable-csharp",
--                          # Don't use VCS systems to create these archives
--                          "--without-git",
--                          "--without-cvs",
--                          "--without-xz"
++    args = %W[
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --disable-debug
++      --prefix=#{prefix}
++      --with-included-gettext
++      --with-lispdir=#{elisp}
++      --disable-native-java
++      --enable-largefile
++      --enable-threads=posix
++      --enable-nls
++      --enable-c++
++      --with-bzip2
++      --with-xz
++    ]
++    # Why --with-included-gettext? Aren't we *building* gettext?
++
++    args << "--enable-openmp" if build.with? "openmp"
++
++    if build.with? "java"
++      args << "--enable-java"
++    else
++      args << "--disable-java"
++    end
++
++    if build.with? "mono"
++      args << "--enable-csharp=mono"
++    else
++      args << "--disable-csharp"
++    end
++
++    if build.with? "ncurses"
++      args << "--enable-curses"
++      args << "--with-libncurses-prefix=#{Formula["ncurses"].prefix}"
++    end
++
++    if build.with? "libiconv"
++      args << "--with-libiconv-prefix=#{Formula["libiconv"].prefix}"
++    end
++
++    if build.with? "glib"
++      args << "--with-libglib-2.0-prefix=#{Formula["glib"].prefix}"
++    else
++      args << "--with-included-glib"
++    end
++
++    if build.with? "libcroco"
++      args << "--with-libcroco-0.6-prefix=#{Formula["libcroco"].prefix}"
++    else
++      args << "--with-included-libcroco"
++    end
++
++    if build.with? "libunistring"
++      args << "--with-libunistring-prefix=#{Formula["libunistring"].prefix}"
++    else
++      args << "--with-included-libunistring"
++    end
++
++    if build.with? "libxml2"
++      args << "--with-libxml2-prefix=#{Formula["libxml2"].prefix}"
++    else
++      args << "--with-included-libxml"
++    end
++
++      args << "--with-emacs" if build.with? "emacs"
++      args << "--with-git" if build.with? "git"
++
++    # system "./autogen.sh"
++    system "./configure", *args
      system "make"
      ENV.deparallelize # install doesn't support multiple make jobs
      system "make", "install"
diff --cc Formula/ghc.rb
index 8c3ef9804552,8c3ef9804552..09e5b7a2ac32
--- a/Formula/ghc.rb
+++ b/Formula/ghc.rb
@@@ -34,6 -34,6 +34,10 @@@ class Ghc < Formul
  
    depends_on :macos => :lion
    depends_on "sphinx-doc" => :build if build.with? "docs"
++  depends_on "ncurses"
++  # Not compatible with GNU libiconv?
++  # Requires _iconv, _iconv_open, _iconv_close, other symbols?
++  # depends_on "libiconv"
  
    resource "gmp" do
      url "https://ftpmirror.gnu.org/gmp/gmp-6.1.2.tar.xz"
@@@ -66,30 -66,30 +70,24 @@@
    end
  
    def install
--    # Setting -march=native, which is what --build-from-source does, fails
--    # on Skylake (and possibly other architectures as well) with the error
--    # "Segmentation fault: 11" for at least the following files:
--    #   utils/haddock/dist/build/Haddock/Backends/Hyperlinker/Types.dyn_o
--    #   utils/haddock/dist/build/Documentation/Haddock/Types.dyn_o
--    #   utils/haddock/dist/build/Haddock/GhcUtils.dyn_o
--    #   utils/haddock/dist/build/Paths_haddock.dyn_o
--    #   utils/haddock/dist/build/ResponseFile.dyn_o
--    # Setting -march=core2 works around the bug.
--    # Reported 22 May 2016: https://ghc.haskell.org/trac/ghc/ticket/12100
--    # Note that `unless build.bottle?` avoids overriding --bottle-arch=[...].
--    ENV["HOMEBREW_OPTFLAGS"] = "-march=#{Hardware.oldest_cpu}" unless build.bottle?
--
++    ENV["HOMEBREW_OPTFLAGS"] = "-march=core2 -msse4.1"
      # Build a static gmp rather than in-tree gmp, otherwise it links to brew's.
      gmp = libexec/"integer-gmp"
  
--    # MPN_PATH: The lowest common denominator asm paths that work on Darwin,
--    # corresponding to Yonah and Merom. Obviates --disable-assembly.
--    ENV["MPN_PATH"] = "x86_64/fastsse x86_64/core2 x86_64 generic" if build.bottle?
--
      # GMP *does not* use PIC by default without shared libs  so --with-pic
      # is mandatory or else you'll get "illegal text relocs" errors.
      resource("gmp").stage do
--      system "./configure", "--prefix=#{gmp}", "--with-pic", "--disable-shared"
++      gmp_args = %W[
++        --prefix=#{gmp}
++        --with-pic
++        --disable-shared
++        --enable-assembly
++        --enable-fft
++        --enable-alloca=alloca
++      ]
++      ENV.cxx11
++      ENV["gmp_cv_c_double_format"] = "IEEE little endian"
++      system "./configure", *gmp_args
        system "make"
        system "make", "check"
        ENV.deparallelize { system "make", "install" }
@@@ -104,21 -104,21 +102,6 @@@
        args << "--with-clang=#{ENV.cc}"
      end
  
--    # As of Xcode 7.3 (and the corresponding CLT) `nm` is a symlink to `llvm-nm`
--    # and the old `nm` is renamed `nm-classic`. Building with the new `nm`, a
--    # segfault occurs with the following error:
--    #   make[1]: * [compiler/stage2/dll-split.stamp] Segmentation fault: 11
--    # Upstream is aware of the issue and is recommending the use of nm-classic
--    # until Apple restores POSIX compliance:
--    # https://ghc.haskell.org/trac/ghc/ticket/11744
--    # https://ghc.haskell.org/trac/ghc/ticket/11823
--    # https://mail.haskell.org/pipermail/ghc-devs/2016-April/011862.html
--    # LLVM itself has already fixed the bug: llvm-mirror/llvm@ae7cf585
--    # rdar://25311883 and rdar://25299678
--    if DevelopmentTools.clang_build_version >= 703 && DevelopmentTools.clang_build_version < 800
--      args << "--with-nm=#{`xcrun --find nm-classic`.chomp}"
--    end
--
      resource("binary").stage do
        binary = buildpath/"binary"
  
diff --cc Formula/ghostscript.rb
index 218366839072,218366839072..5edd21ebc21c
--- a/Formula/ghostscript.rb
+++ b/Formula/ghostscript.rb
@@@ -23,7 -23,7 +23,18 @@@ class Ghostscript < Formul
  
    depends_on "pkg-config" => :build
    depends_on "little-cms2"
--  depends_on :x11 => :optional
++  depends_on :x11
++  depends_on "dbus"
++  depends_on "freetype"
++  depends_on "jpeg"
++  depends_on "openjpeg"
++  depends_on "zlib"
++  depends_on "libpng"
++  depends_on "libtiff"
++  depends_on "jbig2dec"
++  depends_on "gtk+3"
++  depends_on "libiconv"
++  depends_on "libidn"
  
    # https://sourceforge.net/projects/gs-fonts/
    resource "fonts" do
@@@ -31,14 -31,14 +42,37 @@@
      sha256 "0eb6f356119f2e49b2563210852e17f57f9dcc5755f350a69a46a0d641a0c401"
    end
  
++  resource "gnulib" do
++    url "https://git0.savannah.gnu.org/r/gnulib.git"
++  end
++
    def install
      args = %W[
        --prefix=#{prefix}
--      --disable-cups
++      --enable-contrib
++      --enable-sse2
++      --enable-threading
++      --enable-dbus
++      --enable-freetype
++      --enable-cups
++      --enable-openjpeg
++      --enable-gtk
++      --enable-dynamic
++      --enable-bswap32
++      --enable-byteswap-h
++      --with-libiconv=gnu
++      --with-libidn
++      --with-system-libtiff
++      --with-pdftoraster
++      --with-ijs
++      --with-jbig2dec
++      --with-luratech
++      --with-x
++      --with-drivers=ALL
        --disable-compile-inits
--      --disable-gtk
      ]
--    args << "--without-x" if build.without? "x11"
++    # args << "--enable-fontconfig"
++    # args << "--enable-threadsafe"
  
      if build.head?
        system "./autogen.sh", *args
diff --cc Formula/git.rb
index e4526af2729f,e4526af2729f..024e14dd87e9
--- a/Formula/git.rb
+++ b/Formula/git.rb
@@@ -20,9 -20,9 +20,12 @@@ class Git < Formul
  
    depends_on "pcre" => :optional
    depends_on "gettext" => :optional
--  depends_on "openssl" if build.with? "brewed-openssl"
++  depends_on "libressl" if build.with? "brewed-openssl"
    depends_on "curl" if build.with? "brewed-curl"
    depends_on "go" => :build if build.with? "persistent-https"
++  depends_on "expat"
++  depends_on "zlib"
++  depends_on "libiconv"
    # Trigger an install of swig before subversion, as the "swig" doesn't get pulled in otherwise
    # See https://github.com/Homebrew/homebrew/issues/34554
    if build.with? "brewed-svn"
diff --cc Formula/glib-networking.rb
index 6f3c287feef8,6f3c287feef8..c211a3454fff
--- a/Formula/glib-networking.rb
+++ b/Formula/glib-networking.rb
@@@ -14,8 -14,8 +14,11 @@@ class GlibNetworking < Formul
    depends_on "pkg-config" => :build
    depends_on "intltool" => :build
    depends_on "gettext"
++  depends_on "libiconv"
++  depends_on "libproxy"
    depends_on "glib"
    depends_on "gnutls"
++  depends_on "p11-kit"
    depends_on "gsettings-desktop-schemas"
  
    link_overwrite "lib/gio/modules"
@@@ -26,11 -26,11 +29,11 @@@
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
                            "--prefix=#{prefix}",
--                          "--with-ca-certificates=#{etc}/openssl/cert.pem",
++                          "--with-ca-certificates=#{etc}/libressl/cert.pem"
                            # Remove when p11-kit >= 0.20.7 builds on OSX
                            # see https://github.com/Homebrew/homebrew/issues/36323
                            # and https://bugs.freedesktop.org/show_bug.cgi?id=91602
--                          "--without-pkcs11"
++                          # "--without-pkcs11"
      system "make", "install"
  
      # Delete the cache, will regenerate it in post_install
diff --cc Formula/glib.rb
index f31dcb62abb9,f31dcb62abb9..da3fd92720dc
--- a/Formula/glib.rb
+++ b/Formula/glib.rb
@@@ -22,6 -22,6 +22,13 @@@ class Glib < Formul
    depends_on "gettext"
    depends_on "libffi"
    depends_on "pcre"
++  depends_on "gawk" => :build
++  depends_on "gtk-doc" => :optional
++  depends_on "libiconv"
++  depends_on "libelf"
++  depends_on "zlib"
++  depends_on "docbook" => :build
++  depends_on "dbus"
  
    # https://bugzilla.gnome.org/show_bug.cgi?id=673135 Resolved as wontfix,
    # but needed to fix an assumption about the location of the d-bus machine
@@@ -59,17 -59,17 +66,27 @@@
        --disable-maintainer-mode
        --disable-dependency-tracking
        --disable-silent-rules
++      --enable-largefile
++      --enable-xattr
        --disable-dtrace
--      --disable-libelf
        --enable-static
++      --with-pcre=system
        --prefix=#{prefix}
        --localstatedir=#{var}
        --with-gio-module-dir=#{HOMEBREW_PREFIX}/lib/gio/modules
++      --with-python=#{Formula["python"].opt_prefix}/bin/python
++      --with-libiconv=gnu
++      --with-threads=posix
      ]
  
      # next line can be removed when bug 780271 is fixed and gio.patch is modified accordingly
      system "autoreconf", "-i", "-f"
  
++    if build.with? "gtk-doc"
++      args << "--enable-gtk-doc"
++      args << "--enable-gtk-doc-pdf"
++    end
++
      system "./configure", *args
  
      # disable creating directory for GIO_MODULE_DIR, we will do this manually in post_install
@@@ -89,8 -89,8 +106,6 @@@
        s.gsub! "Cflags: -I${includedir}/glib-2.0 -I${libdir}/glib-2.0/include",
                "Cflags: -I${includedir}/glib-2.0 -I${libdir}/glib-2.0/include -I#{gettext}/include"
      end
--
--    (share+"gtk-doc").rmtree
    end
  
    def post_install
diff --cc Formula/global.rb
index e34467203e81,e34467203e81..33725bb6bd05
--- a/Formula/global.rb
+++ b/Formula/global.rb
@@@ -22,19 -22,19 +22,19 @@@ class Global < Formul
      depends_on "libtool" => :build
    end
  
--  option "with-ctags", "Enable Exuberant Ctags as a plug-in parser"
++  option "with-universal-ctags", "Enable Exuberant Ctags as a plug-in parser"
    option "with-pygments", "Enable Pygments as a plug-in parser (should enable exuberent-ctags too)"
    option "with-sqlite3", "Use SQLite3 API instead of BSD/DB API for making tag files"
  
--  deprecated_option "with-exuberant-ctags" => "with-ctags"
++  deprecated_option "with-exuberant-ctags" => "with-universal-ctags"
  
--  depends_on "ctags" => :optional
++  depends_on "universal-ctags" => :optional
  
    skip_clean "lib/gtags"
  
    resource "pygments" do
--    url "https://pypi.python.org/packages/source/P/Pygments/Pygments-2.1.3.tar.gz"
--    sha256 "88e4c8a91b2af5962bfa5ea2447ec6dd357018e86e94c7d14bd8cacbc5b55d81"
++    url "https://pypi.python.org/packages/71/2a/2e4e77803a8bd6408a2903340ac498cb0a2181811af7c9ec92cb70b0308a/Pygments-2.2.0.tar.gz"
++    sha256 "dbae1046def0efb574852fab9e90209b23f556367b5a320c0bcb871c77c3e8cc"
    end
  
    def install
@@@ -48,8 -48,8 +48,8 @@@
  
      args << "--with-sqlite3" if build.with? "sqlite3"
  
--    if build.with? "ctags"
--      args << "--with-exuberant-ctags=#{Formula["ctags"].opt_bin}/ctags"
++    if build.with? "universal-ctags"
++      args << "--with-exuberant-ctags=#{Formula["universal-ctags"].opt_bin}/ctags"
      end
  
      if build.with? "pygments"
diff --cc Formula/gmp.rb
index 9e86442567ff,9e86442567ff..93fa6b1c2db8
--- a/Formula/gmp.rb
+++ b/Formula/gmp.rb
@@@ -4,6 -4,6 +4,7 @@@ class Gmp < Formul
    url "https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz"
    mirror "https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.xz"
    sha256 "87b565e89a9a684fe4ebeeddb8399dce2599f9c9049854ca8c0dfbdea0e21912"
++  head "https://gmplib.org/repo/gmp", :using => :hg
  
    bottle do
      cellar :any
@@@ -14,11 -14,11 +15,24 @@@
    end
  
    option :cxx11
++  depends_on "readline" => :build
++  depends_on :tex => :build
++  depends_on "autoconf" => :build
++  depends_on "automake" => :build
++  depends_on "libtool" => :build
  
    def install
      ENV.cxx11 if build.cxx11?
--    args = %W[--prefix=#{prefix} --enable-cxx]
--    args << "--build=core2-apple-darwin#{`uname -r`.to_i}" if build.bottle?
++    ENV["gmp_cv_c_double_format"] = "IEEE little endian"
++    args = %W[
++      --prefix=#{prefix}
++      --enable-cxx
++      --enable-assembly
++      --enable-fft
++      --with-readline
++      --enable-alloca=alloca
++    ]
++    system "./.bootstrap" if build.head?
      system "./configure", *args
      system "make"
      system "make", "check"
diff --cc Formula/gnome-doc-utils.rb
index d0589022e142,d0589022e142..4540d88de8f1
--- a/Formula/gnome-doc-utils.rb
+++ b/Formula/gnome-doc-utils.rb
@@@ -25,7 -25,7 +25,9 @@@ class GnomeDocUtils < Formul
      ENV.append_path "PYTHONPATH", "#{Formula["libxml2"].opt_lib}/python2.7/site-packages"
  
      system "./configure", "--prefix=#{prefix}",
--                          "--disable-scrollkeeper",
++                          "--enable-scrollkeeper",
++                          "--enable-documentation",
++                          "--enable-nls",
                            "--enable-build-utils=yes"
  
      # Compilation doesn't work right if we jump straight to make install
diff --cc Formula/gnu-sed.rb
index e0d6a23dd9d3,e0d6a23dd9d3..2a32a4db3630
--- a/Formula/gnu-sed.rb
+++ b/Formula/gnu-sed.rb
@@@ -16,10 -16,10 +16,23 @@@ class GnuSed < Formul
  
    conflicts_with "ssed", :because => "both install share/info/sed.info"
  
++  depends_on "libiconv"
++  depends_on "gettext"
++
    deprecated_option "default-names" => "with-default-names"
  
    def install
--    args = ["--prefix=#{prefix}", "--disable-dependency-tracking"]
++    args = %W[
++      --prefix=#{prefix}
++      --disable-dependency-tracking
++      --enable-largefile
++      --enable-threads=posix
++      --enable-acl
++      --enable-nls
++      --enable-i18n
++      --with-libiconv-prefix=#{Formula["libiconv"].prefix}
++      --with-libintl-prefix=#{Formula["gettext"].prefix}
++    ]
      args << "--program-prefix=g" if build.without? "default-names"
  
      system "./configure", *args
diff --cc Formula/gnu-tar.rb
index 29b213cad692,29b213cad692..483447721e25
--- a/Formula/gnu-tar.rb
+++ b/Formula/gnu-tar.rb
@@@ -12,6 -12,6 +12,14 @@@ class GnuTar < Formul
      sha256 "cb0a9258bfeb0530540af1748b37a4fe79cf07ec5848e7bce48c47d51289bdb7" => :yosemite
    end
  
++  depends_on "gzip"
++  depends_on "bzip2"
++  depends_on "lzip"
++  depends_on "lzop"
++  depends_on "xz"
++  depends_on "gettext"
++  depends_on "libiconv"
++
    option "with-default-names", "Do not prepend 'g' to the binary"
  
    # CVE-2016-6321
@@@ -33,7 -33,7 +41,24 @@@
        ENV["gl_cv_func_getcwd_abort_bug"] = "no"
      end
  
--    args = ["--prefix=#{prefix}", "--mandir=#{man}"]
++    args = %W[
++      --prefix=#{prefix}
++      --mandir=#{man}
++      --enable-largefile
++      --enable-acl
++      --enable-backup-scripts
++      --with-xattrs
++      --with-compress=/usr/bin/compress
++      --with-gzip=#{Formula["gzip"].opt_bin}/gzip
++      --with-bzip2=#{Formula["bzip2"].opt_bin}/bzip2
++      --with-lzip=#{Formula["lzip"].opt_bin}/lzip
++      --with-lzma=#{Formula["xz"].opt_bin}/lzma
++      --with-lzop=#{Formula["lzop"].opt_bin}/lzop
++      --with-xz=#{Formula["xz"].opt_bin}/xz
++      --enable-nls
++      --with-libiconv-prefix=#{Formula["libiconv"].prefix}
++      --with-libintl-prefix=#{Formula["gettext"].prefix}
++    ] 
      args << "--program-prefix=g" if build.without? "default-names"
  
      system "./configure", *args
diff --cc Formula/gnupg@2.0.rb
index 742f87fecec7,742f87fecec7..000000000000
deleted file mode 100644,100644
--- a/Formula/gnupg@2.0.rb
+++ /dev/null
@@@ -1,95 -1,95 +1,0 @@@
--class GnupgAT20 < Formula
--  desc "GNU Privacy Guard: a free PGP replacement"
--  homepage "https://www.gnupg.org/"
--  url "https://gnupg.org/ftp/gcrypt/gnupg/gnupg-2.0.30.tar.bz2"
--  mirror "https://www.mirrorservice.org/sites/ftp.gnupg.org/gcrypt/gnupg/gnupg-2.0.30.tar.bz2"
--  sha256 "e329785a4f366ba5d72c2c678a7e388b0892ac8440c2f4e6810042123c235d71"
--
--  bottle do
--    sha256 "b547da420d75ad03b0c60826c96c1959432f363e9a0ab8d270ade56909a9d95b" => :sierra
--    sha256 "f0b436938f9a17459d2ca4a30a80e9c68aa86547fbb7e36c0a2176e38da6188c" => :el_capitan
--    sha256 "0b8eebc7065e3cd00c1cfa60012f390a9a24477e94ef8d7b4b762afa151c2103" => :yosemite
--  end
--
--  keg_only :versioned_formula
--
--  depends_on "libgpg-error"
--  depends_on "libgcrypt"
--  depends_on "libksba"
--  depends_on "libassuan"
--  depends_on "pinentry"
--  depends_on "pth"
--  depends_on "gpg-agent"
--  depends_on "curl" if MacOS.version <= :mavericks
--  depends_on "dirmngr" => :recommended
--  depends_on "libusb-compat" => :recommended
--  depends_on "readline" => :optional
--
--  def install
--    # Adjust package name to fit our scheme of packaging both gnupg 1.x and
--    # 2.x, and gpg-agent separately, and adjust tests to fit this scheme
--    inreplace "configure" do |s|
--      s.gsub! "PACKAGE_NAME='gnupg'", "PACKAGE_NAME='gnupg2'"
--      s.gsub! "PACKAGE_TARNAME='gnupg'", "PACKAGE_TARNAME='gnupg2'"
--    end
--    inreplace "tests/openpgp/Makefile.in" do |s|
--      s.gsub! "required_pgms = ../../g10/gpg2 ../../agent/gpg-agent",
--              "required_pgms = ../../g10/gpg2"
--      s.gsub! "../../agent/gpg-agent --quiet --daemon sh",
--              "gpg-agent --quiet --daemon sh"
--    end
--
--    ENV.append "LDFLAGS", "-lresolv"
--
--    ENV["gl_cv_absolute_stdint_h"] = "#{MacOS.sdk_path}/usr/include/stdint.h"
--
--    agent = Formula["gpg-agent"].opt_prefix
--
--    args = %W[
--      --disable-dependency-tracking
--      --prefix=#{prefix}
--      --sbindir=#{bin}
--      --enable-symcryptrun
--      --disable-agent
--      --with-agent-pgm=#{agent}/bin/gpg-agent
--      --with-protect-tool-pgm=#{agent}/libexec/gpg-protect-tool
--    ]
--
--    if build.with? "readline"
--      args << "--with-readline=#{Formula["readline"].opt_prefix}"
--    end
--
--    system "./configure", *args
--    system "make"
--    system "make", "check"
--    system "make", "install"
--    bin.install "tools/gpg-zip"
--
--    # Add symlinks from gpg2 to unversioned executables, replacing gpg 1.x.
--    bin.install_symlink "gpg2" => "gpg"
--    bin.install_symlink "gpgv2" => "gpgv"
--    man1.install_symlink "gpg2.1" => "gpg.1"
--    man1.install_symlink "gpgv2.1" => "gpgv.1"
--  end
--
--  def post_install
--    (var/"run").mkpath
--  end
--
--  test do
--    (testpath/"batch.gpg").write <<-EOS.undent
--      Key-Type: RSA
--      Key-Length: 2048
--      Subkey-Type: RSA
--      Subkey-Length: 2048
--      Name-Real: Testing
--      Name-Email: testing@foo.bar
--      Expire-Date: 1d
--      %commit
--    EOS
--    system bin/"gpg", "--batch", "--gen-key", "batch.gpg"
--    (testpath/"test.txt").write "Hello World!"
--    system bin/"gpg", "--armor", "--sign", "test.txt"
--    system bin/"gpg", "--verify", "test.txt.asc"
--  end
--end
diff --cc Formula/gnutls.rb
index a1e6caf061f2,a1e6caf061f2..28562840fdca
--- a/Formula/gnutls.rb
+++ b/Formula/gnutls.rb
@@@ -17,9 -17,9 +17,15 @@@ class Gnutls < Formul
    depends_on "gmp"
    depends_on "nettle"
    depends_on "libunistring"
--  depends_on "p11-kit" => :recommended
--  depends_on "guile" => :optional
--  depends_on "unbound" => :optional
++  depends_on "libidn"
++  depends_on "zlib"
++  depends_on "autogen"
++  depends_on "libiconv"
++  depends_on 'cmocka' => :build
++  depends_on "p11-kit"
++  depends_on "libidn2"
++  depends_on "guile"
++  depends_on "unbound"
  
    def install
      # Fix "dyld: lazy symbol binding failed: Symbol not found: _getentropy"
@@@ -31,25 -31,25 +37,16 @@@
      args = %W[
        --disable-dependency-tracking
        --disable-silent-rules
--      --disable-static
++      --enable-static
        --prefix=#{prefix}
        --sysconfdir=#{etc}
        --with-default-trust-store-file=#{etc}/openssl/cert.pem
        --disable-heartbeat-support
++      --with-p11-kit
++      --enable-guile
++      --with-guile-site-dir
      ]
  
--    if build.with? "p11-kit"
--      args << "--with-p11-kit"
--    else
--      args << "--without-p11-kit"
--    end
--
--    if build.with? "guile"
--      args << "--enable-guile" << "--with-guile-site-dir"
--    else
--      args << "--disable-guile"
--    end
--
      system "./configure", *args
      system "make", "install"
  
diff --cc Formula/gobject-introspection.rb
index a7ed4960ad6f,a7ed4960ad6f..bc0656ffac1e
--- a/Formula/gobject-introspection.rb
+++ b/Formula/gobject-introspection.rb
@@@ -30,7 -30,7 +30,14 @@@ class GobjectIntrospection < Formul
        s.change_make_var! "GOBJECT_INTROSPECTION_LIBDIR", "#{HOMEBREW_PREFIX}/lib"
      end
  
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-doctool
++      --with-cairo
++      PYTHON=python
++    ]
++    system "./configure", *args
      system "make"
      system "make", "install"
    end
diff --cc Formula/gpac.rb
index f6e284435102,f6e284435102..7288a49eeaa2
--- a/Formula/gpac.rb
+++ b/Formula/gpac.rb
@@@ -21,7 -21,7 +21,7 @@@ class Gpac < Formul
      sha256 "831e4b7c778f7adb373d94b82a01f2aec35d02e1363f3389d67148481a7ecca4" => :mavericks
    end
  
--  depends_on "openssl"
++  depends_on "libressl"
    depends_on "pkg-config" => :build
    depends_on :x11 => :optional
    depends_on "a52dec" => :optional
@@@ -30,16 -30,16 +30,19 @@@
    depends_on "libogg" => :optional
    depends_on "libvorbis" => :optional
    depends_on "mad" => :optional
--  depends_on "sdl" => :optional
++  depends_on "sdl2" => :optional
    depends_on "theora" => :optional
    depends_on "ffmpeg" => :optional
++  depends_on "pulseaudio" => :optional
++  depends_on "wxmac" => :optional
  
    def install
--    args = ["--disable-wx",
--            "--disable-pulseaudio",
++    args = [
              "--prefix=#{prefix}",
              "--mandir=#{man}"]
      args << "--disable-x11" if build.without? "x11"
++    args << "--disable-pulseaudio" if build.without? "pulseaudio"
++    args << "--disable-wx" if build.without? "wxmac"
  
      system "./configure", *args
      system "make"
diff --cc Formula/gpgme.rb
index 07231eca9e8a,07231eca9e8a..387d65e6b500
--- a/Formula/gpgme.rb
+++ b/Formula/gpgme.rb
@@@ -16,7 -16,7 +16,7 @@@ class Gpgme < Formul
    depends_on "gnupg"
    depends_on "libgpg-error"
    depends_on "libassuan"
--  depends_on "pth"
++  depends_on "npth"
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/graphicsmagick.rb
index 75f4ef4c1485,75f4ef4c1485..af78311ffa9a
--- a/Formula/graphicsmagick.rb
+++ b/Formula/graphicsmagick.rb
@@@ -22,24 -22,24 +22,33 @@@ class Graphicsmagick < Formul
  
    depends_on "pkg-config" => :build
    depends_on "libtool" => :run
--  depends_on "jpeg" => :recommended
--  depends_on "libpng" => :recommended
--  depends_on "libtiff" => :recommended
--  depends_on "freetype" => :recommended
--  depends_on "little-cms2" => :optional
--  depends_on "jasper" => :optional
--  depends_on "libwmf" => :optional
--  depends_on "ghostscript" => :optional
--  depends_on "webp" => :optional
--  depends_on :x11 => :optional
++  depends_on "jbigkit"
++  depends_on "webp"
++  depends_on "jpeg"
++  depends_on "openjpeg"
++  depends_on "little-cms2"
++  depends_on "xz"
++  depends_on "libpng"
++  depends_on "libtiff"
++  depends_on "freetype"
++  depends_on "jasper"
++  depends_on "libwmf"
++  depends_on :x11
++  depends_on "perl"
++  depends_on "bzip2"
++  depends_on "zlib"
++  depends_on "libxml2"
++  depends_on "p7zip"
  
    skip_clean :la
++  needs :openmp
  
    def ghostscript_fonts?
      File.directory? "#{HOMEBREW_PREFIX}/share/ghostscript/fonts"
    end
  
    def install
++    ENV["LDFLAGS"] = "-Wl,-rpath,#{Formula["llvm"].opt_lib}/libomp"
      quantum_depth = [8, 16, 32].select { |n| build.with? "quantum-depth-#{n}" }
      if quantum_depth.length > 1
        odie "graphicsmagick: --with-quantum-depth-N options are mutually exclusive"
@@@ -50,23 -50,23 +59,31 @@@
        --prefix=#{prefix}
        --disable-dependency-tracking
        --enable-shared
--      --disable-static
++      --enable-static
        --with-modules
--      --without-lzma
--      --disable-openmp
++      --enable-openmp
        --with-quantum-depth=#{quantum_depth}
++      --without-gslib
++      --with-perl
++      --with-bzlib
++      --with-dps
++      --with-jbig
++      --with-webp
++      --with-jpeg
++      --with-jp2
++      --with-lcms2
++      --with-lzma
++      --with-png
++      --with-tiff
++      --with-ttf
++      --with-wmf
++      --with-xml
++      --with-zlib
++      --with-x
++      --with-gs-font-dir=#{HOMEBREW_PREFIX}/share/ghostscript/fonts
++      --mandir=#{man}
      ]
  
--    args << "--without-gslib" if build.without? "ghostscript"
--    args << "--with-gs-font-dir=#{HOMEBREW_PREFIX}/share/ghostscript/fonts" if build.without? "ghostscript"
--    args << "--without-magick-plus-plus" if build.without? "magick-plus-plus"
--    args << "--with-perl" if build.with? "perl"
--    args << "--with-webp=yes" if build.with? "webp"
--    args << "--without-x" if build.without? "x11"
--    args << "--without-ttf" if build.without? "freetype"
--    args << "--without-xml" if build.without? "svg"
--    args << "--without-lcms2" if build.without? "little-cms2"
--
      # versioned stuff in main tree is pointless for us
      inreplace "configure", "${PACKAGE_NAME}-${PACKAGE_VERSION}", "${PACKAGE_NAME}"
      system "./configure", *args
diff --cc Formula/graphite2.rb
index bfa4d625ab96,bfa4d625ab96..6e8b237cedb7
--- a/Formula/graphite2.rb
+++ b/Formula/graphite2.rb
@@@ -14,6 -14,6 +14,7 @@@ class Graphite2 < Formul
    end
  
    depends_on "cmake" => :build
++  depends_on :tex => :build
  
    resource "testfont" do
      url "https://scripts.sil.org/pub/woff/fonts/Simple-Graphite-Font.ttf"
diff --cc Formula/graphviz.rb
index 952377e89c2a,952377e89c2a..f59ab5b04392
--- a/Formula/graphviz.rb
+++ b/Formula/graphviz.rb
@@@ -30,20 -30,20 +30,49 @@@ class Graphviz < Formul
  
    depends_on "pkg-config" => :build
    depends_on :xcode => :build if build.with? "app"
++
++  depends_on "criterion" => :build
    depends_on "libtool" => :run
--  depends_on "pango" => :optional
--  depends_on "gts" => :optional
++  depends_on :x11
++  depends_on "expat" => :optional
++  depends_on "devil" => :optional
++  depends_on "zlib"
++  depends_on "webp"
++  depends_on "poppler" => :optional
    depends_on "librsvg" => :optional
++  depends_on "ghostscript"
++  depends_on "libvisio" => :optional
++  depends_on "cairo"
++  depends_on "pango" => :optional
++  depends_on "lasi" => :optional
    depends_on "freetype" => :optional
--  depends_on :x11 => :optional
++  depends_on "fontconfig"
++  depends_on "gtk+3"
++  depends_on "gdk-pixbuf"
++  depends_on "gts" => :optional
++  depends_on "ann" => :optional
++  depends_on "glade" => :optional
++  depends_on "libming" => :optional
++  depends_on "qt" => :optional
    depends_on "gd"
    depends_on "libpng"
  
    if build.with? "bindings"
      depends_on "swig" => :build
--    depends_on :python
      depends_on :java
++    depends_on "go"
++    depends_on "guile"
++    depends_on "io"
++    depends_on "lua@5.3"
++    depends_on "mono"
++    depends_on "ocaml"
++    depends_on "perl"
++    depends_on "php71"
++    depends_on "python"
++    depends_on "python3"
++    depends_on "r"
      depends_on "ruby"
++    depends_on "tcl"
    end
  
    def install
@@@ -56,27 -56,27 +85,61 @@@
      # Alternative fixes include using stdenv or using "xcrun make"
      inreplace "lib/sfio/features/sfio", "lib qfrexp\nlib qldexp\n", ""
  
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --with-quartz
++      --with-glut=yes
++      --with-x
++    ]
++
      if build.with? "bindings"
        # the ruby pkg-config file is version specific
        inreplace "configure" do |s|
          s.gsub! "ruby-1.9", "ruby-#{Formula["ruby"].stable.version.to_f}"
          s.gsub! "if test `$SWIG -php7 2>&1", "if test `$SWIG -php0 2>&1"
        end
++      args << "--enable-swig=yes"
++      args << "--enable-sharp=yes"
++      args << "--enable-go=yes"
++      args << "--enable-guile=yes"
++      args << "--enable-io=yes"
++      args << "--enable-java=yes"
++      args << "--enable-lua=yes"
++      args << "--enable-ocaml=yes"
++      args << "--enable-perl=yes"
++      args << "--enable-php=yes"
++      args << "--enable-python=yes"
++      args << "--enable-r=yes"
++      args << "--enable-ruby=yes"
++      args << "--enable-tcl=yes"
++    else
++      args << "--disable-swig" if build.without? "bindings"
      end
  
--    args = %W[
--      --disable-debug
--      --disable-dependency-tracking
--      --prefix=#{prefix}
--      --without-qt
--      --with-quartz
--    ]
--    args << "--with-gts" if build.with? "gts"
--    args << "--disable-swig" if build.without? "bindings"
--    args << "--without-pangocairo" if build.without? "pango"
--    args << "--without-freetype2" if build.without? "freetype"
--    args << "--without-x" if build.without? "x11"
--    args << "--without-rsvg" if build.without? "librsvg"
++
++    args << "--with-expat=yes" if build.with? "expat"
++    args << "--with-devil=yes" if build.with? "devil"
++    args << "--with-webp=yes" if build.with? "webp"
++    args << "--with-poppler=yes" if build.with? "poppler"
++    args << "--with-rsvg=yes" if build.with? "librsvg"
++    args << "--with-ghostscript=yes" if build.with? "ghostscript"
++    args << "--with-visio=yes" if build.with? "libvisio"
++    args << "--with-pangocairo=yes" if build.with?("pango") || build.with?("cairo")
++    args << "--with-lasi=yes" if build.with? "lasi"
++    args << "--with-freetype2=yes" if build.with? "freetype"
++    args << "--with-fontconfig=yes" if build.with? "fontconfig"
++    args << "--with-gdk=yes" if build.with? "gtk+3"
++    args << "--with-gtk=yes" if build.with? "gtk+3"
++    args << "--with-gdk-pixbuf=yes" if build.with? "gdk-pixbuf"
++    args << "--with-gts=yes" if build.with? "gts"
++    args << "--with-ann=yes" if build.with? "ann"
++    args << "--with-glade=yes" if build.with? "glade"
++    args << "--with-ming=yes" if build.with? "libming"
++    args << "--with-qt=yes" if build.with? "qt"
++    args << "--with-libgd=yes" if build.with? "gd"
++
  
      if build.head?
        system "./autogen.sh", *args
diff --cc Formula/gringo.rb
index 48ea3c44c299,48ea3c44c299..5916ff8831df
--- a/Formula/gringo.rb
+++ b/Formula/gringo.rb
@@@ -1,34 -1,34 +1,24 @@@
  class Gringo < Formula
    desc "Grounder to translate user-provided logic programs"
--  homepage "https://potassco.sourceforge.io/"
--  url "https://downloads.sourceforge.net/project/potassco/gringo/4.5.4/gringo-4.5.4-source.tar.gz"
--  mirror "https://www.mirrorservice.org/sites/distfiles.macports.org/gringo/gringo-4.5.4-source.tar.gz"
--  sha256 "81f8bbbb1b06236778028e5f1b8627ee38a712ec708724112fb08aecf9bc649a"
++  homepage "https://potassco.org/"
++  url "https://github.com/potassco/clingo/archive/v5.1.0.tar.gz"
++  sha256 "c1afa83142d727d18bdab68fd6d7e1341dcb25d2e9a1aea3abc672ecbae6c72a"
  
--  bottle do
--    cellar :any_skip_relocation
--    sha256 "10fdd80c67761f30f49f95ec2e79f0f8cea9c8109053a07853491846af30fc6a" => :sierra
--    sha256 "441c81748e551106a923ccd61298f98c8b5e46cba684fc2e0031a4fe11f1d0ae" => :el_capitan
--    sha256 "e9b5ee97a0a0b8c14a66d6359936259b7edc96c2013531c250903a03df65bfb0" => :yosemite
--    sha256 "7215d8a23fe6052bd67e4ce8b5537da6e16236f07fe387bd7b29fa5f9ee35ca9" => :mavericks
--  end
  
    depends_on "re2c" => :build
    depends_on "scons" => :build
    depends_on "bison" => :build
++  depends_on "lua@5.3" => :build
++  depends_on "tbb" => :build
++  depends_on "cppunit" => :build
++  depends_on "python3" => :build
  
    needs :cxx11
  
    def install
--    # Allow pre-10.9 clangs to build in C++11 mode
--    ENV.libcxx
--
--    inreplace "SConstruct",
--              "env['CXX']            = 'g++'",
--              "env['CXX']            = '#{ENV.cxx}'"
--
--    scons "--build-dir=release", "gringo", "clingo", "reify"
--    bin.install "build/release/gringo", "build/release/clingo", "build/release/reify"
++    scons "--build-dir=release", "gringo", "clingo", "reify", "lpconvert", "pyclingo", "luaclingo"
++    bin.install "build/release/gringo", "build/release/clingo", "build/release/reify", "build/release/lpconvert"
++    lib.install "build/release/python", "build/release/lua"
    end
  
    test do
diff --cc Formula/gsasl.rb
index 5002c3996563,5002c3996563..a58a5e4723d9
--- a/Formula/gsasl.rb
+++ b/Formula/gsasl.rb
@@@ -16,11 -16,11 +16,24 @@@ class Gsasl < Formul
    end
  
    depends_on "libntlm" => :optional
++  depends_on "gtk-doc" => :optional
++  depends_on "gettext"
++  depends_on "libiconv"
++  depends_on "readline"
++  depends_on "gnutls"
++  depends_on "lasso"
++  depends_on "krb5"
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--with-gssapi-impl=mit",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-largefile
++      --enable-threads=posix
++      --enable-nls
++      --with-gssapi-impl=mit
++    ]
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/gsettings-desktop-schemas.rb
index 7c665411c1da,7c665411c1da..c9a040de1f67
--- a/Formula/gsettings-desktop-schemas.rb
+++ b/Formula/gsettings-desktop-schemas.rb
@@@ -16,6 -16,6 +16,7 @@@ class GsettingsDesktopSchemas < Formul
    depends_on "gobject-introspection" => :build
    depends_on "glib"
    depends_on "gettext"
++  depends_on "libiconv"
    depends_on "libffi"
    depends_on "python" if MacOS.version <= :mavericks
  
@@@ -23,7 -23,7 +24,6 @@@
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
                            "--prefix=#{prefix}",
--                          "--disable-schemas-compile",
                            "--enable-introspection=yes"
      system "make", "install"
    end
diff --cc Formula/gst-plugins-base.rb
index 0c651eb67cdf,0c651eb67cdf..2ed2438c61c1
--- a/Formula/gst-plugins-base.rb
+++ b/Formula/gst-plugins-base.rb
@@@ -20,31 -20,31 +20,35 @@@ class GstPluginsBase < Formul
  
    depends_on "pkg-config" => :build
    depends_on "gettext"
++  depends_on "libiconv"
    depends_on "gstreamer"
  
    # The set of optional dependencies is based on the intersection of
    # https://cgit.freedesktop.org/gstreamer/gst-plugins-base/tree/REQUIREMENTS
    # and Homebrew formulae
    depends_on "gobject-introspection"
--  depends_on "orc" => :recommended
--  depends_on "libogg" => :optional
--  depends_on "opus" => :optional
--  depends_on "pango" => :optional
--  depends_on "theora" => :optional
--  depends_on "libvorbis" => :optional
++  depends_on "orc"
++  depends_on "libogg"
++  depends_on "opus"
++  depends_on "pango"
++  depends_on "theora"
++  depends_on "libvorbis"
++  depends_on "zlib"
++  depends_on :x11
++  # Homebrew cdparanoia is... "special". See cdparanoia formula.
++  # Long story short: patches make cdparanoia different enough that linking
++  # becomes an issue
++  # depends_on "cdparanoia"
++  depends_on "libvisual"
++  depends_on "qt" => :optional
  
    def install
      # gnome-vfs turned off due to lack of formula for it.
      args = %W[
        --prefix=#{prefix}
++      --enable-static
        --enable-experimental
--      --disable-libvisual
        --disable-alsa
--      --disable-cdparanoia
--      --without-x
--      --disable-x
--      --disable-xvideo
--      --disable-xshm
        --disable-debug
        --disable-dependency-tracking
        --enable-introspection=yes
diff --cc Formula/gstreamer.rb
index b64951b46fb5,b64951b46fb5..2e03d4a0b235
--- a/Formula/gstreamer.rb
+++ b/Formula/gstreamer.rb
@@@ -21,15 -21,15 +21,23 @@@ class Gstreamer < Formul
    depends_on "pkg-config" => :build
    depends_on "gobject-introspection"
    depends_on "gettext"
++  depends_on "libiconv"
    depends_on "glib"
    depends_on "bison"
++  depends_on "gtk-doc"
++  depends_on "libunwind-headers"
++  depends_on "bash-completion@2"
++  depends_on "python"
++  depends_on "gmp"
++  depends_on "gsl"
++  depends_on "gtk+3"
  
    def install
      args = %W[
        --prefix=#{prefix}
++      --enable-static
        --disable-debug
        --disable-dependency-tracking
--      --disable-gtk-doc
        --enable-introspection=yes
      ]
  
diff --cc Formula/gtk+.rb
index 271f7e53bdb4,271f7e53bdb4..10a116a0e203
--- a/Formula/gtk+.rb
+++ b/Formula/gtk+.rb
@@@ -51,7 -51,7 +51,9 @@@ class Gtkx < Formul
              "--disable-glibtest",
              "--enable-introspection=yes",
              "--with-gdktarget=quartz",
--            "--disable-visibility"]
++            "--disable-visibility",
++            "--enable-static"
++    ]
  
      args << "--enable-quartz-relocation" if build.with?("quartz-relocation")
  
diff --cc Formula/gtk+3.rb
index 09275d060ac4,09275d060ac4..baff8b71caff
--- a/Formula/gtk+3.rb
+++ b/Formula/gtk+3.rb
@@@ -20,10 -20,10 +20,19 @@@ class Gtkx3 < Formul
    depends_on "pango"
    depends_on "glib"
    depends_on "hicolor-icon-theme"
--  depends_on "gsettings-desktop-schemas" => :recommended
--  depends_on "jasper" => :optional
++  depends_on "gsettings-desktop-schemas"
++  depends_on "jasper"
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "cairo" => "with-x11"
++  depends_on :x11
++  depends_on "librest"
++  depends_on "json-glib"
++  depends_on "at-spi2-atk"
  
    def install
++    # For building with X11?
++    # raise "move e2fsprogs lib and include directories to prevent pulling in wrong uuid lib/headers"
      args = %W[
        --enable-debug=minimal
        --disable-dependency-tracking
@@@ -32,8 -32,8 +41,12 @@@
        --enable-introspection=yes
        --disable-schemas-compile
        --enable-quartz-backend
--      --disable-x11-backend
++      --enable-broadway-backend
++      --enable-static
      ]
++      # Cannot enable both quartz and x11 backends?
++      # http://stackoverflow.com/q/38088908/3580294
++      # --enable-x11-backend
  
      args << "--enable-quartz-relocation" if build.with?("quartz-relocation")
  
@@@ -44,6 -44,6 +57,7 @@@
      system "make", "install"
      # Prevent a conflict between this and Gtk+2
      mv bin/"gtk-update-icon-cache", bin/"gtk3-update-icon-cache"
++    # raise "move e2fsprogs lib/include directories back"
    end
  
    def post_install
diff --cc Formula/gtk-doc.rb
index 27471a6133cc,27471a6133cc..894611f6d049
--- a/Formula/gtk-doc.rb
+++ b/Formula/gtk-doc.rb
@@@ -20,6 -20,6 +20,14 @@@ class GtkDoc < Formul
    depends_on "docbook"
    depends_on "docbook-xsl"
    depends_on "libxml2" => "with-python"
++  depends_on "libxslt"
++  depends_on "fop"
++
++  # Technically only one is needed?
++  depends_on "highlight"
++  # depends_on "source-highlight" => :optional
++  # depends_on "vim" => :optional
++
    depends_on :perl => "5.18" if MacOS.version <= :mavericks
  
    def install
diff --cc Formula/gts.rb
index b975a36baaef,b975a36baaef..2ddd22a3c656
--- a/Formula/gts.rb
+++ b/Formula/gts.rb
@@@ -16,6 -16,6 +16,7 @@@ class Gts < Formul
    depends_on "gettext"
    depends_on "glib"
    depends_on "netpbm"
++  depends_on :fortran
  
    # Fix for newer netpbm.
    # This software hasn't been updated in seven years
diff --cc Formula/guile.rb
index 37efc3623ff8,37efc3623ff8..01ea9e89146d
--- a/Formula/guile.rb
+++ b/Formula/guile.rb
@@@ -23,6 -23,6 +23,8 @@@ class Guile < Formul
    depends_on "libtool" => :run
    depends_on "libffi"
    depends_on "libunistring"
++  depends_on "libiconv"
++  depends_on "gettext"
    depends_on "bdw-gc"
    depends_on "gmp"
    depends_on "readline"
@@@ -36,8 -36,8 +38,11 @@@
      system "./autogen.sh" unless build.stable?
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--with-threads",
++                          "--with-modules",
                            "--with-libreadline-prefix=#{Formula["readline"].opt_prefix}",
                            "--with-libgmp-prefix=#{Formula["gmp"].opt_prefix}"
++    # system "make", "check"
      system "make", "install"
  
      # A really messed up workaround required on macOS --mkhl
diff --cc Formula/harfbuzz.rb
index f57a27785d3e,f57a27785d3e..4b9bc78898ce
--- a/Formula/harfbuzz.rb
+++ b/Formula/harfbuzz.rb
@@@ -28,6 -28,6 +28,7 @@@ class Harfbuzz < Formul
    depends_on "icu4c" => :recommended
    depends_on "cairo" => :optional
    depends_on "graphite2" => :optional
++  # depends_on "gtk-doc" => :optional
  
    resource "ttf" do
      url "https://github.com/behdad/harfbuzz/raw/fc0daafab0336b847ac14682e581a8838f36a0bf/test/shaping/fonts/sha1sum/270b89df543a7e48e206a2d830c0e10e5265c630.ttf"
@@@ -78,6 -78,6 +79,12 @@@
        args << "--with-icu=no"
      end
  
++    # if build.with? "gtk-doc"
++    #   args << "--enable-gtk-doc"
++    #   args << "--enable-gtk-doc-html"
++    #   args << "--enable-gtk-doc-pdf"
++    # end
++
      system "./autogen.sh" if build.head?
      system "./configure", *args
      system "make", "install"
diff --cc Formula/help2man.rb
index 2c134c4827a5,2c134c4827a5..0b6ea450cb22
--- a/Formula/help2man.rb
+++ b/Formula/help2man.rb
@@@ -13,6 -13,6 +13,8 @@@ class Help2man < Formul
      sha256 "d63079ec5272bb4d5be4c244ffa36af7ddbcb0fd738e2acfb657b8268b932c05" => :mavericks
    end
  
++  depends_on "gettext"
++
    def install
      # install is not parallel safe
      # see https://github.com/Homebrew/homebrew/issues/12609
diff --cc Formula/highlight.rb
index 37710460ebdc,37710460ebdc..264574500563
--- a/Formula/highlight.rb
+++ b/Formula/highlight.rb
@@@ -14,12 -14,12 +14,32 @@@ class Highlight < Formul
  
    depends_on "pkg-config" => :build
    depends_on "boost"
--  depends_on "lua"
++  depends_on "lua@5.3" => :build
++  depends_on "luajit" => :build
++  depends_on "qt" => :optional
++  needs :cxx11
  
    def install
++    ENV.cxx11
++    inreplace "src/makefile", "lua)", "lua-5.3)"
++    inreplace "src/makefile", "libhighlight.so.1.0", "libhighlight.1.0.dylib"
++    inreplace "src/makefile", "libhighlight.so.${SO_VERSION}", "libhighlight.${SO_VERSION}.dylib"
++    inreplace "src/makefile", "ld -shared", "${CXX} -dynamiclib"
++    inreplace "src/makefile", "-soname libhighlight.so.1", "-install_name #{lib}/libhighlight.${SO_VERSION}.dylib"
++    inreplace "src/makefile", "-lc ${CORE_OBJECTS}", "-lc ${CORE_OBJECTS} ${DILU_OBJECTS} ${LUA_LIBS}"
      conf_dir = etc/"highlight/" # highlight needs a final / for conf_dir
      system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}"
++    system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "cli"
++    system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "lib-static"
++    system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "lib-shared"
++    system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "gui" if build.with? "qt"
      system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "install"
++    system "make", "PREFIX=#{prefix}", "conf_dir=#{conf_dir}", "install-gui" if build.with? "qt"
++
++    lib.install "src/libhighlight.a"
++    lib.install "src/libhighlight.3.30.dylib"
++    ln_s lib/"libhighlight.3.30.dylib", lib/"libhighlight.dylib"
++    cp_r "src/include", include
    end
  
    test do
diff --cc Formula/icoutils.rb
index 80caf1385d23,80caf1385d23..90d95401af3c
--- a/Formula/icoutils.rb
+++ b/Formula/icoutils.rb
@@@ -12,6 -12,6 +12,8 @@@ class Icoutils < Formul
    end
  
    depends_on "libpng"
++  depends_on "gettext"
++  depends_on "libiconv"
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/icu4c.rb
index abc884bf25db,abc884bf25db..2331bfac0e30
--- a/Formula/icu4c.rb
+++ b/Formula/icu4c.rb
@@@ -19,16 -19,16 +19,44 @@@ class Icu4c < Formul
  
    option :cxx11
  
++  depends_on "doxygen" => :build
++
    def install
      ENV.cxx11 if build.cxx11?
  
--    args = %W[--prefix=#{prefix} --disable-samples --disable-tests --enable-static]
++    args = %W[
++      --prefix=#{prefix}
++      --disable-samples
++      --disable-tests
++      --enable-static
++      --enable-auto-cleanup
++      --enable-extras
++      --enable-icuio
++      --enable-layoutex
++      --enable-tools
++    ]
++
++    # Can't seem to find any actual icu4c plugins? Is this actually used
++    # anywhere?
++    if build.with? "plugins"
++      args << "--enable-plugins"
++    end
      args << "--with-library-bits=64" if MacOS.prefer_64_bit?
++    inreplace "source/common/unicode/uversion.h", "define U_USING_ICU_NAMESPACE 1", "define U_USING_ICU_NAMESPACE 0"
++    inreplace "source/common/unicode/platform.h", "define U_CHARSET_IS_UTF8 0", "define U_CHARSET_IS_UTF8 1"
  
      cd "source" do
++      ENV.append_to_cflags("-DUNISTR_FROM_CHAR_EXPLICIT=explicit")
++      ENV.append_to_cflags("-DUNISTR_FROM_STRING_EXPLICIT=explicit")
++      ENV.append_to_cflags("-DU_NO_DEFAULT_INCLUDE_UTF_HEADERS=1")
        system "./configure", *args
        system "make"
        system "make", "install"
++      if build.with? "plugins"
++        inreplace "#{include}/unicode/uconfig.h",
++                  "#define UCONFIG_ENABLE_PLUGINS 0",
++                  "#define UCONFIG_ENABLE_PLUGINS 1"
++      end
      end
    end
  
diff --cc Formula/idris.rb
index b840bdb4535c,b840bdb4535c..d9464f59b56f
--- a/Formula/idris.rb
+++ b/Formula/idris.rb
@@@ -18,12 -18,12 +18,14 @@@ class Idris < Formul
    depends_on "ghc" => :build
    depends_on "cabal-install" => :build
    depends_on "pkg-config" => :build
++  depends_on "zlib"
++  depends_on "ncurses"
  
    depends_on "gmp"
    depends_on "libffi" => :recommended
  
    def install
--    args = []
++    args = ["-f  GMP"]
      args << "-f FFI" if build.with? "libffi"
      args << "-f release" if build.stable?
      install_cabal_package *args
diff --cc Formula/ilmbase.rb
index 6d7331a5f669,6d7331a5f669..044dd24cf189
--- a/Formula/ilmbase.rb
+++ b/Formula/ilmbase.rb
@@@ -14,7 -14,7 +14,9 @@@ class Ilmbase < Formul
  
    def install
      system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}", "--enable-large-stack"
++    system "make"
++    system "make", "check"
      system "make", "install"
      pkgshare.install %w[Half HalfTest Iex IexMath IexTest IlmThread Imath ImathTest]
    end
diff --cc Formula/intltool.rb
index 4722f6509cd0,4722f6509cd0..3e4392abfa6c
--- a/Formula/intltool.rb
+++ b/Formula/intltool.rb
@@@ -13,6 -13,6 +13,8 @@@ class Intltool < Formul
      sha256 "739e17a9f4e75913118a8ef0fd2a7ad7d645769cc61aeb1d6bcf760fe4bd48a7" => :mountain_lion
    end
  
++  depends_on "bazaar" => :build
++
    def install
      system "./configure", "--prefix=#{prefix}",
                            "--disable-silent-rules"
diff --cc Formula/irssi.rb
index 6d3ae97d8dea,6d3ae97d8dea..320ddef388aa
--- a/Formula/irssi.rb
+++ b/Formula/irssi.rb
@@@ -24,8 -24,8 +24,10 @@@ class Irssi < Formul
  
    depends_on "pkg-config" => :build
    depends_on "glib"
--  depends_on "openssl" => :recommended
++  depends_on "libressl" => :recommended
    depends_on "dante" => :optional
++  depends_on "ncurses"
++  depends_on "perl"
  
    def install
      args = %W[
@@@ -36,8 -36,8 +38,8 @@@
        --with-proxy
        --enable-true-color
        --with-socks=#{build.with?("dante") ? "yes" : "no"}
--      --with-ncurses=#{MacOS.sdk_path}/usr
      ]
++      # --with-ncurses=#{MacOS.sdk_path}/usr
  
      if build.with? "perl"
        args << "--with-perl=yes"
diff --cc Formula/jack.rb
index 998d6550c5d1,998d6550c5d1..7b7ac0c4706a
--- a/Formula/jack.rb
+++ b/Formula/jack.rb
@@@ -19,9 -19,9 +19,14 @@@ class Jack < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on "berkeley-db"
--  depends_on "libsndfile"
    depends_on "libsamplerate"
++  depends_on "dbus"
++  depends_on "expat"
++  depends_on "libsndfile"
++  depends_on "readline"
++  depends_on "opus"
++  depends_on "portaudio"
++  depends_on "berkeley-db"
  
    def install
      # Makefile hardcodes Carbon header location
@@@ -30,7 -30,7 +35,17 @@@
        "#{MacOS.sdk_path}/System/Library/Frameworks/Carbon.framework/Headers/Carbon.h"
  
      ENV["LINKFLAGS"] = ENV.ldflags
--    system "./configure", "--prefix=#{prefix}"
++    args = %W[
++      --prefix=#{prefix}
++      --enable-static
++      --enable-posix-shm
++      --enable-sse
++      --enable-dynsimd
++      --enable-optimize
++    ]
++    # PortAudio doesn't work with Jack1 due to an API change in PortAudio
++    # --enable-portaudio
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/jasper.rb
index b542a3bf2883,b542a3bf2883..3f5becd26778
--- a/Formula/jasper.rb
+++ b/Formula/jasper.rb
@@@ -12,6 -12,6 +12,8 @@@ class Jasper < Formul
  
    depends_on "cmake" => :build
    depends_on "jpeg"
++  depends_on "doxygen" => :build
++  depends_on :tex
  
    def install
      mkdir "build" do
diff --cc Formula/jbig2dec.rb
index 1a87e64c95a2,1a87e64c95a2..55bdc2a38f0c
--- a/Formula/jbig2dec.rb
+++ b/Formula/jbig2dec.rb
@@@ -18,6 -18,6 +18,7 @@@ class Jbig2dec < Formul
    depends_on "autoconf" => :build
    depends_on "libtool" => :build
    depends_on "libpng" => :optional
++  depends_on "zlib"
  
    # https://bugs.ghostscript.com/show_bug.cgi?id=695890
    # Remove on next release.
diff --cc Formula/jemalloc.rb
index 03d81d5185ef,03d81d5185ef..81ef53d6d336
--- a/Formula/jemalloc.rb
+++ b/Formula/jemalloc.rb
@@@ -13,7 -13,7 +13,16 @@@ class Jemalloc < Formul
    end
  
    def install
--    system "./configure", "--disable-debug", "--prefix=#{prefix}", "--with-jemalloc-prefix="
++    args = %W[
++      --disable-debug
++      --prefix=#{prefix}
++      --with-jemalloc-prefix=
++      --enable-xmalloc
++      --enable-lazy-lock
++    ]
++    # TLS is supposedly unusable on Darwin
++    # --enable-tls
++    system "./configure", *args
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/jpeg.rb
index 30215b4c1f14,30215b4c1f14..1c03cd22316d
--- a/Formula/jpeg.rb
+++ b/Formula/jpeg.rb
@@@ -1,8 -1,8 +1,8 @@@
  class Jpeg < Formula
    desc "Image manipulation library"
    homepage "http://www.ijg.org"
--  url "http://www.ijg.org/files/jpegsrc.v8d.tar.gz"
--  sha256 "00029b1473f0f0ea72fbca3230e8cb25797fbb27e58ae2e46bb8bf5a806fe0b3"
++  url "http://www.ijg.org/files/jpegsrc.v9b.tar.gz"
++  sha256 "240fd398da741669bf3c90366f58452ea59041cacc741a489b99f2f6a0bad052"
  
    bottle do
      cellar :any
diff --cc Formula/json-c.rb
index 3e00bf69753a,3e00bf69753a..1ba3a08ad5bd
--- a/Formula/json-c.rb
+++ b/Formula/json-c.rb
@@@ -27,6 -27,6 +27,7 @@@ class JsonC < Formul
      system "./autogen.sh" if build.head?
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-rdrand",
                            "--prefix=#{prefix}"
      ENV.deparallelize
      system "make", "install"
diff --cc Formula/json-glib.rb
index 732df7f683d9,732df7f683d9..e1243c69b560
--- a/Formula/json-glib.rb
+++ b/Formula/json-glib.rb
@@@ -13,6 -13,6 +13,8 @@@ class JsonGlib < Formul
    depends_on "pkg-config" => :build
    depends_on "glib"
    depends_on "gobject-introspection"
++  depends_on "gettext"
++  depends_on "libiconv"
  
    def install
      system "./configure", "--disable-silent-rules",
diff --cc Formula/lame.rb
index 8b2062f9da87,8b2062f9da87..5982f7d04ea2
--- a/Formula/lame.rb
+++ b/Formula/lame.rb
@@@ -14,6 -14,6 +14,8 @@@ class Lame < Formul
      sha256 "db743baefa0ec1b0f8c00df4728536418916c4d42c71c548dc43d43a1b24b523" => :mountain_lion
    end
  
++  depends_on "nasm" => :build
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-debug",
diff --cc Formula/lasso.rb
index 4db0cadd8aff,4db0cadd8aff..fda383b12618
--- a/Formula/lasso.rb
+++ b/Formula/lasso.rb
@@@ -14,7 -14,7 +14,7 @@@ class Lasso < Formul
    depends_on "pkg-config" => :build
    depends_on "libxmlsec1"
    depends_on "glib"
--  depends_on "openssl"
++  depends_on "openssl@1.1"
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/leptonica.rb
index 95ec61ab1bfd,95ec61ab1bfd..48d92945ff7f
--- a/Formula/leptonica.rb
+++ b/Formula/leptonica.rb
@@@ -11,12 -11,12 +11,13 @@@ class Leptonica < Formul
      sha256 "6e7e6f9085592590d5ab8728a58674667e486dbf62d12737261a0c283bbd8ed1" => :yosemite
    end
  
--  depends_on "libpng" => :recommended
--  depends_on "jpeg" => :recommended
--  depends_on "libtiff" => :recommended
--  depends_on "giflib" => :optional
--  depends_on "openjpeg" => :optional
--  depends_on "webp" => :optional
++  depends_on "zlib"
++  depends_on "libpng"
++  depends_on "jpeg"
++  depends_on "giflib"
++  depends_on "libtiff"
++  depends_on "webp"
++  depends_on "openjpeg"
    depends_on "pkg-config" => :build
  
    conflicts_with "osxutils",
@@@ -28,14 -28,14 +29,6 @@@
        --prefix=#{prefix}
      ]
  
--    %w[libpng jpeg libtiff giflib].each do |dep|
--      args << "--without-#{dep}" if build.without?(dep)
--    end
--    %w[openjpeg webp].each do |dep|
--      args << "--with-lib#{dep}" if build.with?(dep)
--      args << "--without-lib#{dep}" if build.without?(dep)
--    end
--
      system "./configure", *args
      system "make", "install"
    end
diff --cc Formula/libarchive.rb
index ecf802f520b5,ecf802f520b5..9296e159e9ca
--- a/Formula/libarchive.rb
+++ b/Formula/libarchive.rb
@@@ -13,18 -13,18 +13,31 @@@ class Libarchive < Formul
  
    keg_only :provided_by_osx
  
--  depends_on "xz" => :recommended
--  depends_on "lz4" => :optional
--  depends_on "lzop" => :optional
++  depends_on "zlib"
++  depends_on "bzip2"
++  depends_on "xz"
++  depends_on "lz4"
++  depends_on "nettle"
++  depends_on "libiconv"
++  depends_on "libxml2"
++  depends_on "expat"
++  depends_on "lzo"
++  depends_on "libressl"
++  depends_on "pcre"
++  depends_on "bcrypt"
++  depends_on "gnu-tar"
++  depends_on "lzo"
  
    def install
++    inreplace "libarchive/archive_openssl_hmac_private.h", "#if OPENSSL_VERSION_NUMBER < 0x10100000L", "#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)"
      system "./configure",
             "--prefix=#{prefix}",
--           "--without-lzo2",    # Use lzop binary instead of lzo2 due to GPL
--           "--without-nettle",  # xar hashing option but GPLv3
--           "--without-xml2",    # xar hashing option but tricky dependencies
--           "--without-openssl", # mtree hashing now possible without OpenSSL
--           "--with-expat"       # best xar hashing option
++           "--with-lzo2"
++           # "--without-lzo2",    # Use lzop binary instead of lzo2 due to GPL
++           # "--without-nettle",  # xar hashing option but GPLv3
++           # "--without-xml2",    # xar hashing option but tricky dependencies
++           # "--without-openssl", # mtree hashing now possible without OpenSSL
++           # "--with-expat"       # best xar hashing option
  
      system "make", "install"
  
diff --cc Formula/libatomic_ops.rb
index f8097f6a3c95,f8097f6a3c95..0aff0f90413a
--- a/Formula/libatomic_ops.rb
+++ b/Formula/libatomic_ops.rb
@@@ -13,7 -13,7 +13,7 @@@ class LibatomicOps < Formul
    end
  
    def install
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
++    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}", "--enable-shared"
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/libav.rb
index 7a6948af710c,7a6948af710c..fb1a7a06cf21
--- a/Formula/libav.rb
+++ b/Formula/libav.rb
@@@ -19,10 -19,10 +19,10 @@@ class Libav < Formul
  
    option "with-opencore-amr", "Enable AMR-NB de/encoding and AMR-WB decoding " \
      "via libopencore-amrnb and libopencore-amrwb"
--  option "with-openssl", "Enable SSL support"
++  option "with-openssl@1.1", "Enable SSL support"
    option "with-rtmpdump", "Enable RTMP protocol support"
    option "with-schroedinger", "Enable Dirac video format"
--  option "with-sdl", "Enable avplay"
++  option "with-sdl2", "Enable avplay"
    option "with-speex", "Enable Speex de/encoding via libspeex"
    option "with-theora", "Enable Theora encoding via libtheora"
    option "with-libvorbis", "Enable Vorbis encoding via libvorbis"
@@@ -49,11 -49,11 +49,11 @@@
    depends_on "libvorbis" => :optional
    depends_on "libvpx" => :optional
    depends_on "opencore-amr" => :optional
--  depends_on "openssl" => :optional
++  depends_on "openssl@1.1" => :optional
    depends_on "opus" => :optional
    depends_on "rtmpdump" => :optional
    depends_on "schroedinger" => :optional
--  depends_on "sdl" => :optional
++  depends_on "sdl2" => :optional
    depends_on "speex" => :optional
    depends_on "theora" => :optional
  
@@@ -97,7 -97,7 +97,7 @@@
      args << "--enable-libvpx" if build.with? "libvpx"
      args << "--enable-libx264" if build.with? "x264"
      args << "--enable-libxvid" if build.with? "xvid"
--    args << "--enable-openssl" if build.with? "openssl"
++    args << "--enable-openssl" if build.with? "openssl@1.1"
  
      system "./configure", *args
  
@@@ -105,7 -105,7 +105,7 @@@
  
      bin.install "avconv", "avprobe"
      man1.install "doc/avconv.1", "doc/avprobe.1"
--    if build.with? "sdl"
++    if build.with? "sdl2"
        bin.install "avplay"
        man1.install "doc/avplay.1"
      end
diff --cc Formula/libcdio.rb
index 9316efc966bd,9316efc966bd..de6712c39cd0
--- a/Formula/libcdio.rb
+++ b/Formula/libcdio.rb
@@@ -12,12 -12,12 +12,28 @@@ class Libcdio < Formul
      sha256 "45f6e37c831b5cbadd68721efc070196b0946b24f4ac05d532b4fcd65d30289b" => :yosemite
    end
  
++  resource "libcdio-paranoia" do
++    url "https://github.com/rocky/libcdio-paranoia/archive/release-10.2+0.93+1.tar.gz"
++    sha256 "eff836d8790eef17b299cd69a0edeea8192f5aff8c252305c92a16c4d08be6aa"
++  end
++
++  depends_on "autoconf" => :build
++  depends_on "automake" => :build
++  depends_on "libtool" => :build
    depends_on "pkg-config" => :build
  
    def install
      system "./configure", "--disable-dependency-tracking", "--disable-silent-rules",
                            "--prefix=#{prefix}"
      system "make", "install"
++    resource("libcdio-paranoia").stage do
++      ENV["PKG_CONFIG_PATH"] = "/usr/local/lib/pkgconfig"
++      system "./autogen.sh", "--prefix=#{prefix}"
++      inreplace "lib/cdda_interface/Makefile", "-Wl,--version-script=libcdio_cdda.la.ver", ""
++      inreplace "lib/paranoia/Makefile", "-Wl,--version-script=libcdio_paranoia.la.ver", ""
++      system "make"
++      system "make", "install"
++    end
    end
  
    test do
diff --cc Formula/libdc1394.rb
index 00eb1d89db92,00eb1d89db92..34f7d20f2b48
--- a/Formula/libdc1394.rb
+++ b/Formula/libdc1394.rb
@@@ -14,7 -14,7 +14,7 @@@ class Libdc1394 < Formul
      sha256 "989b8f20b2ad01c6c3d607fe974c3cf5ad005b51afa8455ec712325c8d4d5b22" => :mountain_lion
    end
  
--  depends_on "sdl"
++  depends_on "sdl2"
  
    # fix issue due to bug in OSX Firewire stack
    # libdc1394 author comments here:
diff --cc Formula/libelf.rb
index 1c2843845763,1c2843845763..e22409ea9833
--- a/Formula/libelf.rb
+++ b/Formula/libelf.rb
@@@ -18,6 -18,6 +18,10 @@@ class Libelf < Formul
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-elf64",
++                          "--enable-nls",
++                          "--enable-extended-format",
++                          "--enable-shared",
                            "--disable-compat"
      # Use separate steps; there is a race in the Makefile.
      system "make"
diff --cc Formula/libepoxy.rb
index c3e8568162b0,c3e8568162b0..6a9ed9068f5a
--- a/Formula/libepoxy.rb
+++ b/Formula/libepoxy.rb
@@@ -12,11 -12,11 +12,15 @@@ class Libepoxy < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on :python => :build if MacOS.version <= :snow_leopard
++  depends_on "python"
++  depends_on "python3"
++  depends_on :x11
  
    def install
      system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-static",
++                          "--enable-glx=yes"
      system "make"
      system "make", "install"
    end
diff --cc Formula/libevent.rb
index 375bd2bebe8d,375bd2bebe8d..8e1c2ca9f9ec
--- a/Formula/libevent.rb
+++ b/Formula/libevent.rb
@@@ -15,8 -15,8 +15,10 @@@ class Libevent < Formul
    depends_on "automake" => :build
    depends_on "doxygen" => :build
    depends_on "libtool" => :build
++  depends_on "gettext"
    depends_on "pkg-config" => :build
--  depends_on "openssl"
++  depends_on "libressl"
++  depends_on "zlib"
  
    conflicts_with "pincaster",
      :because => "both install `event_rpcgen.py` binaries"
@@@ -26,6 -26,6 +28,13 @@@
      system "./autogen.sh"
      system "./configure", "--disable-dependency-tracking",
                            "--disable-debug-mode",
++                          "--enable-function-sections",
++                          "--enable-thread-support",
++                          "--enable-malloc-replacement",
++                          "--enable-openssl",
++                          "--enable-largefile",
++                          "--disable-samples",          # at least until libressl
++                          "--disable-libevent-regress", # gets good support
                            "--prefix=#{prefix}"
      system "make"
      system "make", "install"
diff --cc Formula/libewf.rb
index 3b2b1788d913,3b2b1788d913..b8e62f5517ab
--- a/Formula/libewf.rb
+++ b/Formula/libewf.rb
@@@ -29,7 -29,7 +29,7 @@@ class Libewf < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on "openssl"
++  depends_on "libressl"
  
    def install
      if build.head?
diff --cc Formula/libexif.rb
index 4d883a1e18d3,4d883a1e18d3..a4e63c220a16
--- a/Formula/libexif.rb
+++ b/Formula/libexif.rb
@@@ -14,6 -14,6 +14,10 @@@ class Libexif < Formul
      sha256 "c84d39e0e1b14770c53190e46aa80ed4155dc22106a104d11fe4c85e533bf1ba" => :mountain_lion
    end
  
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "doxygen" => :build
++
    def install
      system "./configure", "--prefix=#{prefix}", "--disable-dependency-tracking"
      system "make", "install"
diff --cc Formula/libfabric.rb
index 967127e51087,967127e51087..1c9a5621926e
--- a/Formula/libfabric.rb
+++ b/Formula/libfabric.rb
@@@ -24,12 -24,12 +24,14 @@@ class Libfabric < Formul
    depends_on "autoconf" => :build
    depends_on "automake" => :build
    depends_on "libtool"  => :build
++  depends_on "criterion"
  
    def install
      system "autoreconf", "-fiv"
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--with-criterion"
      system "make", "install"
    end
  
diff --cc Formula/libgcrypt.rb
index fa831271cc7a,fa831271cc7a..44c959785faf
--- a/Formula/libgcrypt.rb
+++ b/Formula/libgcrypt.rb
@@@ -21,19 -21,19 +21,17 @@@ class Libgcrypt < Formul
    end
  
    def install
--    # Temporary hack to get libgcrypt building on macOS 10.12 and 10.11 with XCode 8.
--    # Seems to be a Clang issue rather than an upstream one, so
--    # keep checking whether or not this is necessary.
--    # Should be reported to GnuPG if still an issue when near stable.
--    # https://github.com/Homebrew/homebrew-core/issues/1957
--    ENV.O1 if DevelopmentTools.clang_build_version >= 800
++    args = %W[
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --enable-static
++      --prefix=#{prefix}
++      --enable-asm
++    ]
  
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--enable-static",
--                          "--prefix=#{prefix}",
--                          "--disable-asm",
--                          "--with-libgpg-error-prefix=#{Formula["libgpg-error"].opt_prefix}"
++    args << "--enable-m-guard"
++
++    system "./configure", *args
  
      # Parallel builds work, but only when run as separate steps
      system "make"
diff --cc Formula/libgpg-error.rb
index 5e892867d21c,5e892867d21c..fd0eb2908f49
--- a/Formula/libgpg-error.rb
+++ b/Formula/libgpg-error.rb
@@@ -11,11 -11,11 +11,23 @@@ class LibgpgError < Formul
      sha256 "06669414f7aba892558875994c411dc2a0723aa19f5d854b435987b3c8b9f19a" => :yosemite
    end
  
++  option :universal
++  depends_on "libiconv"
++  depends_on "gettext"
++
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--prefix=#{prefix}",
--                          "--enable-static"
++    args = %W[
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --prefix=#{prefix}
++      --enable-static
++      --enable-threads=posix
++      --enable-largefile
++      --enable-nls
++      --enable-tests
++    ]
++
++    system "./configure", *args
      system "make", "install"
  
      # avoid triggering mandatory rebuilds of software that hard-codes this path
diff --cc Formula/libgphoto2.rb
index 6c2a81014c7d,6c2a81014c7d..ac1a50b1cec2
--- a/Formula/libgphoto2.rb
+++ b/Formula/libgphoto2.rb
@@@ -20,15 -20,15 +20,28 @@@ class Libgphoto2 < Formul
  
    depends_on "pkg-config" => :build
    depends_on "libtool" => :run
--  depends_on "libusb-compat"
++  depends_on "libusb"
    depends_on "gd"
    depends_on "libexif" => :optional
++  depends_on "gettext"
++  depends_on "libiconv"
++  depends_on "jpeg"
++  depends_on "libxml2"
++  depends_on "gtk-doc" => :optional
  
    def install
++    args = %W[
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --prefix=#{prefix}
++      --enable-nls
++      --enable-largefile
++      --with-jpeg
++      --with-libxml2
++    ]
++    args << "--enable-docs" if build.with? "gtk-doc"
      system "autoreconf", "-fvi" if build.head?
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/libgsf.rb
index 7b656ac79aba,7b656ac79aba..5e65bed9857e
--- a/Formula/libgsf.rb
+++ b/Formula/libgsf.rb
@@@ -24,9 -24,9 +24,15 @@@ class Libgsf < Formul
    depends_on "gdk-pixbuf" => :optional
    depends_on "gettext"
    depends_on "glib"
++  depends_on "zlib"
++  depends_on "bzip2"
  
    def install
--    args = %W[--disable-dependency-tracking --prefix=#{prefix}]
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --with-bz2
++    ]
      if build.head?
        system "./autogen.sh", *args
      else
diff --cc Formula/libidn.rb
index 1b5d71cb4a90,1b5d71cb4a90..7d83471227c0
--- a/Formula/libidn.rb
+++ b/Formula/libidn.rb
@@@ -14,12 -14,12 +14,33 @@@ class Libidn < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "gtk-doc" => :optional
++  depends_on "gettext" => :optional
++  depends_on "emacs" => [:build, :optional]
++  depends_on "valgrind" => [:build, :optional]
++  depends_on "mono" => [:build, :optional]
++  depends_on :java
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}",
--                          "--disable-csharp",
--                          "--with-lispdir=#{elisp}"
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-largefile
++      --enable-threads=posix
++      --enable-nls
++      --enable-csharp=mono
++      --enable-tld
++      --enable-java
++      --with-libiconv-prefix=#{Formula["libiconv"].prefix}
++      --with-lispdir=#{elisp}
++    ]
++    if build.with? "gtk-doc"
++      args << "--enable-gtk-doc"
++      args << "--enable-gtk-doc-html"
++      args << "--enable-gtk-doc-pdf"
++    end
++    args << "--with-libintl-prefix=#{Formula["gettext"].prefix}"
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/libksba.rb
index ec959eab79c8,ec959eab79c8..6e1bae68d2e5
--- a/Formula/libksba.rb
+++ b/Formula/libksba.rb
@@@ -18,6 -18,6 +18,7 @@@ class Libksba < Formul
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-static",
                            "--prefix=#{prefix}"
      system "make", "install"
  
diff --cc Formula/liblqr.rb
index 4d17e2d3bfa4,4d17e2d3bfa4..2e821caec213
--- a/Formula/liblqr.rb
+++ b/Formula/liblqr.rb
@@@ -22,7 -22,7 +22,8 @@@ class Liblqr < Formul
  
    def install
      system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-static"
      system "make", "install"
    end
  end
diff --cc Formula/libmagic.rb
index 62128e1691be,62128e1691be..6e8c93635ae6
--- a/Formula/libmagic.rb
+++ b/Formula/libmagic.rb
@@@ -12,6 -12,6 +12,7 @@@ class Libmagic < Formul
    end
  
    depends_on :python => :optional
++  depends_on "zlib"
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/libmetalink.rb
index 5b887672125c,5b887672125c..c46ff1df81ad
--- a/Formula/libmetalink.rb
+++ b/Formula/libmetalink.rb
@@@ -13,6 -13,6 +13,9 @@@ class Libmetalink < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "libxml2"
++  depends_on "expat"
++  depends_on "cunit" => :build
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/libpano.rb
index 9d5ed56510e9,9d5ed56510e9..4d9b80c0596f
--- a/Formula/libpano.rb
+++ b/Formula/libpano.rb
@@@ -18,11 -18,11 +18,14 @@@ class Libpano < Formul
    depends_on "libpng"
    depends_on "jpeg"
    depends_on "libtiff"
++  depends_on :java
++  depends_on "zlib"
  
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--mandir=#{man}"
++                          "--mandir=#{man}",
++                          "--with-zlib=/usr/local"
      system "make", "install"
    end
  end
diff --cc Formula/libpng.rb
index cda98fd5a5cf,cda98fd5a5cf..916eb7aa919c
--- a/Formula/libpng.rb
+++ b/Formula/libpng.rb
@@@ -21,10 -21,10 +21,12 @@@ class Libpng < Formul
    end
  
    keg_only :provided_pre_mountain_lion
++  depends_on "zlib"
  
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-intel-sse",
                            "--prefix=#{prefix}"
      system "make"
      system "make", "test"
diff --cc Formula/libressl.rb
index 9418489787e8,9418489787e8..3e564556ca4c
--- a/Formula/libressl.rb
+++ b/Formula/libressl.rb
@@@ -36,6 -36,6 +36,7 @@@ class Libressl < Formul
        --prefix=#{prefix}
        --with-openssldir=#{etc}/libressl
        --sysconfdir=#{etc}/libressl
++      --enable-nc
      ]
  
      system "./autogen.sh" if build.head?
diff --cc Formula/librest.rb
index a931b43006e4,a931b43006e4..25950b0ef575
--- a/Formula/librest.rb
+++ b/Formula/librest.rb
@@@ -20,8 -20,8 +20,7 @@@ class Librest < Formul
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
                            "--prefix=#{prefix}",
--                          "--without-gnome",
--                          "--without-ca-certificates",
++                          "--with-ca-certificates=#{etc}/libressl/cert.pem",
                            "--enable-introspection=yes"
      system "make", "install"
    end
diff --cc Formula/librsvg.rb
index 77e7165ed187,77e7165ed187..945be51c6ab2
--- a/Formula/librsvg.rb
+++ b/Formula/librsvg.rb
@@@ -16,8 -16,8 +16,9 @@@ class Librsvg < Formul
    depends_on "glib"
    depends_on "libcroco"
    depends_on "pango"
--  depends_on "libgsf" => :optional
--  depends_on "gtk+3" => :optional
++  depends_on "libgsf"
++  depends_on "gtk+3"
++  depends_on "vala"
  
    def install
      args = %W[
@@@ -27,8 -27,8 +28,9 @@@
        --enable-tools=yes
        --enable-pixbuf-loader=yes
        --enable-introspection=yes
++      --enable-vala=yes
++      --enable-svgz
      ]
--    args << "--enable-svgz" if build.with? "libgsf"
  
      system "./configure", *args
  
diff --cc Formula/libsmi.rb
index 6a7e3c6c933b,6a7e3c6c933b..1ae2aac52b43
--- a/Formula/libsmi.rb
+++ b/Formula/libsmi.rb
@@@ -14,9 -14,9 +14,12 @@@ class Libsmi < Formul
      sha256 "29c960c1a37c4dbe51fe87634db55b888211d22061db9a668e4c116887e04ca9" => :mountain_lion
    end
  
++  depends_on :fortran
++  depends_on "wget"
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}", "--enable-sming"
      system "make", "install"
    end
  
diff --cc Formula/libsndfile.rb
index 42a68a44cdc0,42a68a44cdc0..aa1ba4224c63
--- a/Formula/libsndfile.rb
+++ b/Formula/libsndfile.rb
@@@ -18,10 -18,10 +18,19 @@@ class Libsndfile < Formul
    depends_on "flac"
    depends_on "libogg"
    depends_on "libvorbis"
++  depends_on "octave" => :optional
++  depends_on "wine" => :optional
++  depends_on "autogen" => :optional
  
    def install
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++    ]
++    args << "--enable-octave" if build.with? "octave"
++
      system "autoreconf", "-i"
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
++    system "./configure", *args
      system "make", "install"
    end
  end
diff --cc Formula/libsoup.rb
index ab93318fe74e,ab93318fe74e..2a7da1353503
--- a/Formula/libsoup.rb
+++ b/Formula/libsoup.rb
@@@ -17,6 -17,6 +17,10 @@@ class Libsoup < Formul
    depends_on "sqlite"
    depends_on "gobject-introspection"
    depends_on "vala"
++  depends_on "krb5"
++  depends_on "libxml2"
++  # depends_on "curl"
++  # depends_on "httpd24"
  
    def install
      args = %W[
@@@ -24,7 -24,7 +28,6 @@@
        --disable-dependency-tracking
        --disable-silent-rules
        --prefix=#{prefix}
--      --disable-tls-check
        --enable-introspection=yes
      ]
  
diff --cc Formula/libsoxr.rb
index 978b1aadd0a3,978b1aadd0a3..666242553b5f
--- a/Formula/libsoxr.rb
+++ b/Formula/libsoxr.rb
@@@ -14,9 -14,9 +14,24 @@@ class Libsoxr < Formul
    end
  
    depends_on "cmake" => :build
++  needs :openmp
  
    def install
--    system "cmake", ".", *std_cmake_args
--    system "make", "install"
++      inreplace "CMakeLists.txt", "find_package (SIMD)", "find_package (SIMD REQUIRED)"
++      inreplace "CMakeLists.txt", "find_package (OpenMP)", "find_package (OpenMP REQUIRED)"
++    mkdir "build" do
++      args = %W[
++        -DBUILD_FRAMEWORK=ON
++        -DWITH_SINGLE_PRECISION=ON
++        -DWITH_DOUBLE_PRECISION=ON
++        -DWITH_LSR_BINDINGS=ON
++        -DWITH_OPENMP=ON
++        -DWITH_SIMD=ON
++        -DWITH_PFFFT=ON
++        -DWITH_AVFFT=OFF
++      ]
++      system "cmake", "..", *(std_cmake_args + args)
++      system "make", "install"
++    end
    end
  end
diff --cc Formula/libssh.rb
index fa88c49acdf0,fa88c49acdf0..1c6b3f980015
--- a/Formula/libssh.rb
+++ b/Formula/libssh.rb
@@@ -14,11 -14,11 +14,27 @@@ class Libssh < Formul
    end
  
    depends_on "cmake" => :build
--  depends_on "openssl"
++  depends_on "libressl"
++  # Might use either openssl or libgcrypt, but not both?
++  depends_on "libgcrypt"
++  depends_on "zlib"
++  depends_on "nacl"
++  depends_on "krb5"
++  depends_on "heimdal"
++  depends_on "argp-standalone"
  
    def install
++    ohai "requires nacl headers to be found in <nacl/header>"
++    ln_s buildpath/"nacl" "#{Formula["nacl"].opt_include}"
      mkdir "build" do
--      system "cmake", "..", "-DWITH_STATIC_LIB=ON", *std_cmake_args
++      args = std_cmake_args
++      args << "-DWITH_EXAMPLES=OFF"
++      args << "-DWITH_GCRYPT=ON"
++      args << "-DWITH_TESTING=ON"
++      args << "-DWITH_NACL=ON"
++      args << "-DGCRYPT_ROOT_DIR=#{Formula["libgcrypt"].opt_prefix}"
++      args << "-DWITH_STATIC_LIB=ON"
++      system "cmake", "..", *args
        system "make", "install"
      end
    end
diff --cc Formula/libssh2.rb
index 5d5160ad3bfc,5d5160ad3bfc..9122fe57b3f3
--- a/Formula/libssh2.rb
+++ b/Formula/libssh2.rb
@@@ -20,7 -20,7 +20,8 @@@ class Libssh2 < Formul
      depends_on "libtool" => :build
    end
  
--  depends_on "openssl" => :recommended
++  depends_on "libressl" => :recommended
++  depends_on "zlib"
  
    def install
      args = %W[
@@@ -30,8 -30,8 +31,9 @@@
        --disable-silent-rules
        --disable-examples-build
        --with-openssl
++      --enable-hidden-symbols
        --with-libz
--      --with-libssl-prefix=#{Formula["openssl"].opt_prefix}
++      --with-libssl-prefix=#{Formula["libressl"].opt_prefix}
      ]
  
      system "./buildconf" if build.head?
diff --cc Formula/libtasn1.rb
index 664876a3dc84,664876a3dc84..e5c34c9ef522
--- a/Formula/libtasn1.rb
+++ b/Formula/libtasn1.rb
@@@ -12,6 -12,6 +12,8 @@@ class Libtasn1 < Formul
      sha256 "e506e5613818094ab8029cbf94b51068e7f1d1683bcc5bc6b06c84eb9be2576d" => :yosemite
    end
  
++  depends_on "pkg-config" => :build
++
    def install
      system "./configure", "--prefix=#{prefix}", "--disable-dependency-tracking",
                            "--disable-silent-rules"
diff --cc Formula/libtermkey.rb
index f15b9b9d49a2,f15b9b9d49a2..8b9c38cd1ccc
--- a/Formula/libtermkey.rb
+++ b/Formula/libtermkey.rb
@@@ -13,6 -13,6 +13,7 @@@ class Libtermkey < Formul
  
    depends_on "pkg-config" => :build
    depends_on "libtool" => :build
++  depends_on "ncurses"
  
    def install
      system "make", "PREFIX=#{prefix}"
diff --cc Formula/libtiff.rb
index 641bc393e5e2,641bc393e5e2..eb4ea545eb6e
--- a/Formula/libtiff.rb
+++ b/Formula/libtiff.rb
@@@ -14,10 -14,10 +14,13 @@@ class Libtiff < Formul
    end
  
    option :cxx11
--  option "with-xz", "Include support for LZMA compression"
  
    depends_on "jpeg"
--  depends_on "xz" => :optional
++  depends_on "xz"
++  depends_on "jbigkit"
++  depends_on "zlib"
++  depends_on "cmake" => :build
++  depends_on :x11
  
    # Patches from Debian for CVE-2016-10094, and various other issues.
    # All reported upstream, so should be safe to remove this block on next stable.
@@@ -50,16 -50,16 +53,32 @@@
      args = %W[
        --disable-dependency-tracking
        --prefix=#{prefix}
--      --without-x
++      --enable-largefile
++      --enable-ccitt
++      --enable-packbits
++      --enable-lzw
++      --enable-thunder
++      --enable-next
++      --enable-logluv
++      --enable-mdi
++      --enable-zlib
++      --with-zlib-include-dir=#{Formula["zlib"].opt_include}
++      --with-zlib-lib-dir=#{Formula["zlib"].opt_lib}
++      --enable-pixarlog
++      --enable-jpeg
        --with-jpeg-include-dir=#{Formula["jpeg"].opt_include}
        --with-jpeg-lib-dir=#{Formula["jpeg"].opt_lib}
++      --enable-old-jpeg
++      --enable-jbig
++      --with-jbig-include-dir=#{Formula["jbigkit"].opt_include}
++      --with-jbig-lib-dir=#{Formula["jbigkit"].opt_lib}
++      --enable-lzma
++      --with-lzma-include-dir=#{Formula["xz"].opt_include}
++      --with-lzma-lib-dir=#{Formula["xz"].opt_lib}
++      --enable-cxx
++      --with-x
      ]
--    if build.with? "xz"
--      args << "--with-lzma-include-dir=#{Formula["xz"].opt_include}"
--      args << "--with-lzma-lib-dir=#{Formula["xz"].opt_lib}"
--    else
--      args << "--disable-lzma"
--    end
++
      system "./configure", *args
      system "make", "install"
    end
diff --cc Formula/libtool.rb
index be8393a228a4,be8393a228a4..154a98078ca4
--- a/Formula/libtool.rb
+++ b/Formula/libtool.rb
@@@ -20,6 -20,6 +20,10 @@@ class Libtool < Formul
  
    keg_only :provided_until_xcode43
  
++  depends_on "m4" => :build
++  depends_on "gettext"
++  depends_on "libiconv"
++
    def install
      ENV["SED"] = "sed" # prevent libtool from hardcoding sed path from superenv
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/libunistring.rb
index 61a9e825c1cd,61a9e825c1cd..366537bb95dd
--- a/Formula/libunistring.rb
+++ b/Formula/libunistring.rb
@@@ -12,9 -12,9 +12,13 @@@ class Libunistring < Formul
      sha256 "e2143b25bf7bdc85ddb00b065cf1f72c665d77a6737563cd81a88420bc72e51f" => :yosemite
    end
  
++  depends_on "libiconv"
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-threads=posix",
++                          "--with-libiconv-prefix=#{Formula["libiconv"].prefix}",
                            "--prefix=#{prefix}"
      system "make"
      system "make", "check"
diff --cc Formula/libwmf.rb
index 3ff8ba8108ff,3ff8ba8108ff..c6149349591a
--- a/Formula/libwmf.rb
+++ b/Formula/libwmf.rb
@@@ -14,16 -14,16 +14,33 @@@ class Libwmf < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on "gd"
++  depends_on :x11
++  depends_on "expat"
++  # Can use either expat or libxml2, but not both
++  # depends_on "libxml2"
    depends_on "freetype"
++  depends_on "zlib"
    depends_on "libpng"
    depends_on "jpeg"
++  depends_on "gd"
++  depends_on "gdk-pixbuf"
++  depends_on :fortran
  
    def install
--    system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}",
--                          "--with-png=#{Formula["libpng"].opt_prefix}",
--                          "--with-freetype=#{Formula["freetype"].opt_prefix}"
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --with-x
++      --with-freetype=#{Formula["freetype"].prefix}
++      --with-zlib=#{Formula["zlib"].prefix}
++      --with-png=#{Formula["libpng"].prefix}
++      --with-jpeg=#{Formula["jpeg"].prefix}
++      --with-sys-gd=#{Formula["gd"].prefix}
++    ]
++    # args << "--with-expat=#{Formula["expat"].prefix}"
++    args << "--with-libxml2=#{Formula["libxml2"].prefix}"
++    system "./configure", *args
      system "make"
      ENV.deparallelize # yet another rubbish Makefile
      system "make", "install"
diff --cc Formula/libxkbcommon.rb
index b3ecc449b4c3,b3ecc449b4c3..6fe24556068c
--- a/Formula/libxkbcommon.rb
+++ b/Formula/libxkbcommon.rb
@@@ -18,6 -18,6 +18,8 @@@ class Libxkbcommon < Formul
      depends_on "libtool" => :build
    end
  
++  depends_on "doxygen" => :build
++  depends_on "graphviz" => :build
    depends_on :x11
    depends_on "bison" => :build
    depends_on "pkg-config" => :build
diff --cc Formula/libxml2.rb
index 2b4cb49cf422,2b4cb49cf422..a5a35f875421
--- a/Formula/libxml2.rb
+++ b/Formula/libxml2.rb
@@@ -41,7 -41,7 +41,14 @@@ class Libxml2 < Formul
  
    keg_only :provided_by_osx
  
++  depends_on "pkg-config" => :build
    depends_on :python => :optional
++  depends_on "icu4c"
++  depends_on "xz"
++  depends_on "zlib"
++  depends_on "readline"
++  depends_on "libiconv"
++  depends_on "ncurses"
  
    def install
      if build.head?
@@@ -49,10 -49,10 +56,16 @@@
        system "./autogen.sh"
      end
  
++    inreplace "libxml-2.0.pc.in", "@XML_CFLAGS@", "@XML_CFLAGS@ @ICU_CFLAGS@"
++
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--without-python",
--                          "--without-lzma"
++                          "--with-history",
++                          "--with-icu",
++                          "--with-python",
++                          "--with-readline",
++                          "--with-thread-alloc",
++                          "--with-python-install-dir=#{lib}/python2.7/site-packages"
      system "make"
      ENV.deparallelize
      system "make", "install"
diff --cc Formula/libxmlsec1.rb
index 1821cbfa5f0e,1821cbfa5f0e..cc04d2c35712
--- a/Formula/libxmlsec1.rb
+++ b/Formula/libxmlsec1.rb
@@@ -14,9 -14,9 +14,9 @@@ class Libxmlsec1 < Formul
    end
  
    depends_on "pkg-config" => :build
--  depends_on "libxml2" if MacOS.version <= :lion
++  depends_on "libxml2"
    # Yes, it wants both ssl/tls variations.
--  depends_on "openssl" => :recommended
++  depends_on "libressl" => :recommended
    depends_on "gnutls" => :recommended
    depends_on "libgcrypt" if build.with? "gnutls"
  
diff --cc Formula/libxslt.rb
index 5e927d870d17,5e927d870d17..6787b5dc8330
--- a/Formula/libxslt.rb
+++ b/Formula/libxslt.rb
@@@ -25,9 -25,9 +25,12 @@@ class Libxslt < Formul
  
    keg_only :provided_by_osx
  
--  depends_on "libxml2"
++  depends_on "libxml2" => "with-python"
++  depends_on "python"
++  depends_on "libgcrypt"
  
    def install
++    ohai "Might require exporting XML_CATALOG_FILE from docbook"
      if build.head?
        ENV["NOCONFIGURE"] = "yes"
        system "./autogen.sh"
@@@ -39,7 -39,7 +42,9 @@@
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
                            "--prefix=#{prefix}",
--                          "--with-libxml-prefix=#{Formula["libxml2"].opt_prefix}"
++                          "--with-libxml-prefix=#{Formula["libxml2"].opt_prefix}",
++                          "--with-python=#{Formula["python"].opt_bin}/python"
++    inreplace "python/Makefile", /PYTHON_SITE_PACKAGES = .*/, "PYTHON_SITE_PACKAGES = #{lib}/python2.7/site-packages"
      system "make"
      system "make", "install"
    end
diff --cc Formula/libyaml.rb
index eb3a32d9c201,eb3a32d9c201..fff82be4bf33
--- a/Formula/libyaml.rb
+++ b/Formula/libyaml.rb
@@@ -12,6 -12,6 +12,8 @@@ class Libyaml < Formul
      sha256 "3a7788655c3c8f3b7ad73521928277ca5433789e134f437534702145171b1104" => :yosemite
    end
  
++  depends_on "doxygen" => :build
++
    def install
      system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}"
      system "make", "install"
diff --cc Formula/libzip.rb
index 911e49a222fb,911e49a222fb..fe201e6abfb1
--- a/Formula/libzip.rb
+++ b/Formula/libzip.rb
@@@ -13,10 -13,10 +13,13 @@@ class Libzip < Formul
    end
  
    conflicts_with "libtcod", :because => "both install `zip.h` header"
++  depends_on "zlib"
  
    def install
      system "./configure", "--prefix=#{prefix}",
                            "--mandir=#{man}",
++                          "--enable-largefile",
++                          "--with-zlib=#{Formula["zlib"].prefix}",
                            "CXX=#{ENV.cxx}",
                            "CXXFLAGS=#{ENV.cflags}"
      system "make", "install"
diff --cc Formula/little-cms2.rb
index 01997d08a9e2,01997d08a9e2..567e756141d5
--- a/Formula/little-cms2.rb
+++ b/Formula/little-cms2.rb
@@@ -14,11 -14,11 +14,13 @@@ class LittleCms2 < Formul
  
    depends_on "jpeg" => :recommended
    depends_on "libtiff" => :recommended
++  depends_on "zlib"
  
    def install
      args = %W[--disable-dependency-tracking --prefix=#{prefix}]
      args << "--without-tiff" if build.without? "libtiff"
      args << "--without-jpeg" if build.without? "jpeg"
++    args << "--with-zlib" << "--with-threads"
  
      system "./configure", *args
      system "make", "install"
diff --cc Formula/llvm.rb
index b8a0e6722036,b8a0e6722036..c2de8a2a8146
--- a/Formula/llvm.rb
+++ b/Formula/llvm.rb
@@@ -5,7 -5,7 +5,7 @@@ class CodesignRequirement < Requiremen
    satisfy(:build_env => false) do
      mktemp do
        cp "/usr/bin/false", "llvm_check"
--      quiet_system "/usr/bin/codesign", "-f", "-s", "lldb_codesign", "--dryrun", "llvm_check"
++      system "/usr/bin/codesign", "-f", "-s", "lldb_codesign", "--dryrun", "llvm_check"
      end
    end
  
@@@ -47,6 -47,6 +47,11 @@@ class Llvm < Formul
        sha256 "4f4d33c4ad69bf9e360eebe6b29b7b19486948b1a41decf89d4adec12473cf96"
      end
  
++    resource "libcxxabi" do
++      url "http://releases.llvm.org/4.0.0/libcxxabi-4.0.0.src.tar.xz"
++      sha256 "dca9cb619662ad2d3a0d685c4366078345247218c3702dd35bcaaa23f63481d8"
++    end
++
      resource "libunwind" do
        url "http://releases.llvm.org/4.0.0/libunwind-4.0.0.src.tar.xz"
        sha256 "0755efa9f969373d4d543123bbed4b3f9a835f6302875c1379c5745857725973"
@@@ -71,6 -71,6 +76,11 @@@
        url "http://releases.llvm.org/4.0.0/polly-4.0.0.src.tar.xz"
        sha256 "27a5dbf95e8aa9e0bbe3d6c5d1e83c92414d734357aa0d6c16020a65dc4dcd97"
      end
++
++    resource "test-suite" do
++      url "http://releases.llvm.org/4.0.0/test-suite-4.0.0.src.tar.xz"
++      sha256 "31544baafbee0d6c652637f6dfa19ca91afe5ca577e07752f4b2c23656bc6304"
++    end
    end
  
    bottle do
@@@ -99,6 -99,6 +109,10 @@@
        url "http://llvm.org/git/libcxx.git"
      end
  
++    resource "libcxxabi" do
++      url "http://llvm.org/git/libcxxabi.git"
++    end
++
      resource "libunwind" do
        url "http://llvm.org/git/libunwind.git"
      end
@@@ -118,39 -118,39 +132,43 @@@
      resource "polly" do
        url "http://llvm.org/git/polly.git"
      end
++
++    resource "test-suite" do
++      url "http://llvm.org/git/test-suite.git"
++    end
    end
  
    keg_only :provided_by_osx
  
--  option "without-compiler-rt", "Do not build Clang runtime support libraries for code sanitizers, builtins, and profiling"
--  option "without-libcxx", "Do not build libc++ standard library"
--  option "with-toolchain", "Build with Toolchain to facilitate overriding system compiler"
--  option "with-lldb", "Build LLDB debugger"
--  option "with-python", "Build bindings against custom Python"
--  option "with-shared-libs", "Build shared instead of static libraries"
--  option "without-libffi", "Do not use libffi to call external functions"
++  option "with-shared-libs", "Build shared instead of static libraries. Only recommended for LLVM developers."
  
--  depends_on "libffi" => :recommended # http://llvm.org/docs/GettingStarted.html#requirement
--  depends_on "graphviz" => :optional # for the 'dot' tool (lldb)
++  depends_on "libffi"
++  depends_on "graphviz"
  
--  depends_on "ocaml" => :optional
--  if build.with? "ocaml"
--    depends_on "opam" => :build
--    depends_on "pkg-config" => :build
--  end
++  depends_on "zlib"
++  depends_on "ncurses"
  
--  if MacOS.version <= :snow_leopard
--    depends_on :python
--  else
--    depends_on :python => :optional
--  end
++  depends_on "libxml2"
++
++  depends_on "libtool" => :build
++  depends_on "libedit"
++  depends_on "go"
++  depends_on "swig"
++  depends_on CodesignRequirement
++  depends_on "python"
++  depends_on "python3"
++
++  depends_on "ocaml"
++  depends_on "opam" => :build
++  depends_on "pkg-config" => :build
++  depends_on "aspcud" => :build
++  depends_on "camlp4" => :build
++  depends_on "ocamlbuild" => :build
++
++  depends_on "ninja" => :build
++  depends_on "make" => :build
    depends_on "cmake" => :build
  
--  if build.with? "lldb"
--    depends_on "swig" if MacOS.version >= :lion
--    depends_on CodesignRequirement
--  end
--
    # According to the official llvm readme, GCC 4.7+ is required
    fails_with :gcc_4_0
    fails_with :gcc
@@@ -158,54 -158,54 +176,48 @@@
      fails_with :gcc => n
    end
  
--  def build_libcxx?
--    build.with?("libcxx") || !MacOS::CLT.installed?
--  end
--
    def install
      # Apple's libstdc++ is too old to build LLVM
--    ENV.libcxx if ENV.compiler == :clang
++    ENV.libcxx if ENV.compiler == :clang || ENV.compiler == :llvm_clang
  
      (buildpath/"tools/clang").install resource("clang")
      (buildpath/"tools/clang/tools/extra").install resource("clang-extra-tools")
++    # (buildpath/"tools/clang/utils/perf-training/test-suite").install resource("test-suite")
      (buildpath/"projects/openmp").install resource("openmp")
--    (buildpath/"projects/libcxx").install resource("libcxx") if build_libcxx?
++    (buildpath/"projects/libcxx").install resource("libcxx")
++    (buildpath/"projects/libcxxabi").install resource("libcxxabi")
      (buildpath/"projects/libunwind").install resource("libunwind")
      (buildpath/"tools/lld").install resource("lld")
      (buildpath/"tools/polly").install resource("polly")
  
--    if build.with? "lldb"
--      if build.with? "python"
--        pyhome = `python-config --prefix`.chomp
--        ENV["PYTHONHOME"] = pyhome
--        pylib = "#{pyhome}/lib/libpython2.7.dylib"
--        pyinclude = "#{pyhome}/include/python2.7"
--      end
--      (buildpath/"tools/lldb").install resource("lldb")
++    inreplace "#{buildpath}/tools/clang/cmake/caches/PGO.cmake", "X86", "all"
  
--      # Building lldb requires a code signing certificate.
--      # The instructions provided by llvm creates this certificate in the
--      # user's login keychain. Unfortunately, the login keychain is not in
--      # the search path in a superenv build. The following three lines add
--      # the login keychain to ~/Library/Preferences/com.apple.security.plist,
--      # which adds it to the superenv keychain search path.
--      mkdir_p "#{ENV["HOME"]}/Library/Preferences"
--      username = ENV["USER"]
--      system "security", "list-keychains", "-d", "user", "-s", "/Users/#{username}/Library/Keychains/login.keychain"
--    end
++    pyhome = `python-config --prefix`.chomp
++    ENV["PYTHONHOME"] = pyhome
++    pylib = "#{pyhome}/lib/libpython2.7.dylib"
++    pyinclude = "#{pyhome}/include/python2.7"
++    (buildpath/"tools/lldb").install resource("lldb")
  
--    if build.with? "compiler-rt"
--      (buildpath/"projects/compiler-rt").install resource("compiler-rt")
++    # Building lldb requires a code signing certificate.
++    # The instructions provided by llvm creates this certificate in the
++    # user's login keychain. Unfortunately, the login keychain is not in
++    # the search path in a superenv build. The following three lines add
++    # the login keychain to ~/Library/Preferences/com.apple.security.plist,
++    # which adds it to the superenv keychain search path.
++    mkdir_p "#{ENV["HOME"]}/Library/Preferences"
++    username = ENV["USER"]
++    system "security", "list-keychains", "-d", "user", "-s", "/Users/#{username}/Library/Keychains/login.keychain"
  
--      # compiler-rt has some iOS simulator features that require i386 symbols
--      # I'm assuming the rest of clang needs support too for 32-bit compilation
--      # to work correctly, but if not, perhaps universal binaries could be
--      # limited to compiler-rt. llvm makes this somewhat easier because compiler-rt
--      # can almost be treated as an entirely different build from llvm.
--      ENV.permit_arch_flags
--    end
++    (buildpath/"projects/compiler-rt").install resource("compiler-rt")
  
--    args = %w[
++    # compiler-rt has some iOS simulator features that require i386 symbols
++    # I'm assuming the rest of clang needs support too for 32-bit compilation
++    # to work correctly, but if not, perhaps universal binaries could be
++    # limited to compiler-rt. llvm makes this somewhat easier because compiler-rt
++    # can almost be treated as an entirely different build from llvm.
++    ENV.permit_arch_flags
++
++    args = %W[
        -DLLVM_OPTIMIZED_TABLEGEN=ON
        -DLLVM_INCLUDE_DOCS=OFF
        -DLLVM_ENABLE_RTTI=ON
@@@ -214,10 -214,10 +226,30 @@@
        -DWITH_POLLY=ON
        -DLINK_POLLY_INTO_TOOLS=ON
        -DLLVM_TARGETS_TO_BUILD=all
++      -DLLVM_ENABLE_CXX1Y=ON
++      -DLLVM_ENABLE_FFI=ON
++      -DFFI_INCLUDE_DIR=#{Formula["libffi"].opt_lib}/libffi-#{Formula["libffi"].version}/include
++      -DFFI_LIBRARY_DIR=#{Formula["libffi"].opt_lib}
++      -DLLVM_ENABLE_LIBCXX=ON
++      -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=ON
++      -DLIBCXX_INSTALL_EXPERIMENTAL_LIBRARY=ON
++      -DLIBCXX_CXX_ABI=libcxxabi
++      -DLIBCXX_CXX_ABI_INCLUDE_PATHS=#{buildpath/"projects/libcxxabi/include"}
++      -DLIBCXXABI_USE_LLVM_UNWINDER=ON
++      -DLIBOMP_ARCH=x86_64
++      -DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON
++      -DLLVM_CREATE_XCODE_TOOLCHAIN=ON
++      -DLLDB_RELOCATABLE_PYTHON=ON
++      -DPYTHON_LIBRARY=#{pylib}
++      -DPYTHON_INCLUDE_DIR=#{pyinclude}
++      -DCURSES_NEED_NCURSES=TRUE
++      -DLLVM_OCAML_INSTALL_PATH=#{lib}/ocaml
      ]
--    args << "-DLIBOMP_ARCH=x86_64"
--    args << "-DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON" if build.with? "compiler-rt"
--    args << "-DLLVM_CREATE_XCODE_TOOLCHAIN=ON" if build.with? "toolchain"
++      # -DLLVM_BUILD_INSTRUMENTED=On
++      # -DLLVM_PROFDATA=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/llvm-profdata
++    args << "-DLLVM_ENABLE_LTO=thin"
++    # LLD apparently doesn't support LTO on Darwin (as of 4.0.0)
++    # args << "-DLLVM_ENABLE_LLD=ON"
  
      if build.with? "shared-libs"
        args << "-DBUILD_SHARED_LIBS=ON"
@@@ -226,36 -226,36 +258,31 @@@
        args << "-DLLVM_BUILD_LLVM_DYLIB=ON"
      end
  
--    args << "-DLLVM_ENABLE_LIBCXX=ON" if build_libcxx?
--
--    if build.with?("lldb") && build.with?("python")
--      args << "-DLLDB_RELOCATABLE_PYTHON=ON"
--      args << "-DPYTHON_LIBRARY=#{pylib}"
--      args << "-DPYTHON_INCLUDE_DIR=#{pyinclude}"
--    end
--
--    if build.with? "libffi"
--      args << "-DLLVM_ENABLE_FFI=ON"
--      args << "-DFFI_INCLUDE_DIR=#{Formula["libffi"].opt_lib}/libffi-#{Formula["libffi"].version}/include"
--      args << "-DFFI_LIBRARY_DIR=#{Formula["libffi"].opt_lib}"
--    end
--
      mktemp do
--      if build.with? "ocaml"
--        args << "-DLLVM_OCAML_INSTALL_PATH=#{lib}/ocaml"
--        ENV["OPAMYES"] = "1"
--        ENV["OPAMROOT"] = Pathname.pwd/"opamroot"
--        (Pathname.pwd/"opamroot").mkpath
--        system "opam", "init", "--no-setup"
--        system "opam", "install", "ocamlfind", "ctypes"
--        system "opam", "config", "exec", "--",
--               "cmake", "-G", "Unix Makefiles", buildpath, *(std_cmake_args + args)
--      else
--        system "cmake", "-G", "Unix Makefiles", buildpath, *(std_cmake_args + args)
--      end
++      ENV["OPAMYES"] = "1"
++      ENV["OPAMROOT"] = Pathname.pwd/"opamroot"
++      (Pathname.pwd/"opamroot").mkpath
++      system "opam", "init", "--auto-setup"
++      ENV.prepend_path "PATH", (Pathname.pwd/"opamroot/system/bin")
++      system "eval $(opam config env)"
++      system "opam", "install", "ocamlfind"
++
++      # -flto appears to break ctypes
++      raise "install ctypes/ctypes-foreign externally (remember to set OPAMROOT)"
++
++      system "opam", "config", "exec", "--",
++             "cmake", "-G", "Unix Makefiles", buildpath, *(std_cmake_args + args)
++
++      # system "ninja", "generate-order-file"
++      # system "ninja", "stage2-instrumented"
++      # system "ninja", "stage2-instrumented-generate-profdata"
++      # system "ninja", "stage2"
        system "make"
        system "make", "install"
--      system "make", "install-xcode-toolchain" if build.with? "toolchain"
++      system "make", "install-xcode-toolchain"
++
++      # system "#{buildpath}/lib/Fuzzer/build.sh"
++      # lib.install "#{buildpath}/libFuzzer.a"
      end
  
      (share/"clang/tools").install Dir["tools/clang/tools/scan-{build,view}"]
@@@ -274,12 -274,12 +301,10 @@@
        Extra tools are installed in #{opt_pkgshare}.
      EOS
  
--    if build_libcxx?
--      s += <<-EOS.undent
--        To use the bundled libc++ please add the following LDFLAGS:
--          LDFLAGS="-L#{opt_lib} -Wl,-rpath,#{opt_lib}"
--      EOS
--    end
++    s += <<-EOS.undent
++      To use the bundled libc++ please add the following LDFLAGS:
++        LDFLAGS="-L#{opt_lib} -Wl,-rpath,#{opt_lib}"
++    EOS
  
      s
    end
diff --cc Formula/lrzip.rb
index ce952eca3068,ce952eca3068..521624d112a1
--- a/Formula/lrzip.rb
+++ b/Formula/lrzip.rb
@@@ -1,8 -1,8 +1,8 @@@
  class Lrzip < Formula
    desc "Compression program with a very high compression ratio"
    homepage "http://lrzip.kolivas.org"
--  url "http://ck.kolivas.org/apps/lrzip/lrzip-0.621.tar.bz2"
--  sha256 "31c26fbee8b9b0bd413ca214862dbc0d9e6d3477f23e9839774936bf140ceb6b"
++  url "http://ck.kolivas.org/apps/lrzip/lrzip-0.631.tar.bz2"
++  sha256 "0d11e268d0d72310d6d73a8ce6bb3d85e26de3f34d8a713055f3f25a77226455"
  
    bottle do
      cellar :any
@@@ -15,9 -15,9 +15,14 @@@
  
    depends_on "pkg-config" => :build
    depends_on "lzo"
++  depends_on "bzip2"
++  depends_on "zlib"
++  depends_on "doxygen" => :build
  
    def install
      system "./configure", "--disable-dependency-tracking",
++                          # "--enable-asm", not allowed on non-32-bit archs
++                          "--enable-doc",
                            "--prefix=#{prefix}"
      system "make"
      system "make", "install"
diff --cc Formula/lua.rb
index 639f4b09014c,639f4b09014c..54ac4e04b96b
--- a/Formula/lua.rb
+++ b/Formula/lua.rb
@@@ -47,8 -47,8 +47,7 @@@ class Lua < Formul
    end
  
    resource "luarocks" do
--    url "https://keplerproject.github.io/luarocks/releases/luarocks-2.3.0.tar.gz"
--    sha256 "68e38feeb66052e29ad1935a71b875194ed8b9c67c2223af5f4d4e3e2464ed97"
++    url "https://github.com/luarocks/luarocks.git", :branch => "luarocks-3"
    end
  
    def install
diff --cc Formula/lua@5.1.rb
index ebc0a5235cb5,ebc0a5235cb5..89c434f846d1
--- a/Formula/lua@5.1.rb
+++ b/Formula/lua@5.1.rb
@@@ -42,8 -42,8 +42,7 @@@ class LuaAT51 < Formul
    end
  
    resource "luarocks" do
--    url "https://keplerproject.github.io/luarocks/releases/luarocks-2.3.0.tar.gz"
--    sha256 "68e38feeb66052e29ad1935a71b875194ed8b9c67c2223af5f4d4e3e2464ed97"
++    url "https://github.com/luarocks/luarocks.git", :branch => "luarocks-3"
    end
  
    def install
@@@ -91,11 -91,11 +90,13 @@@
        resource("luarocks").stage do
          ENV.prepend_path "PATH", bin
  
++        raise "symlink liblua to /usr/local/lib temporarily"
          system "./configure", "--prefix=#{libexec}", "--rocks-tree=#{HOMEBREW_PREFIX}",
                                "--sysconfdir=#{etc}/luarocks51", "--with-lua=#{prefix}",
                                "--lua-version=5.1", "--versioned-rocks-dir"
          system "make", "build"
          system "make", "install"
++        raise "unsymlink liblua5.1"
  
          (share/"lua/5.1/luarocks").install_symlink Dir["#{libexec}/share/lua/5.1/luarocks/*"]
          bin.install_symlink libexec/"bin/luarocks-5.1"
diff --cc Formula/lua@5.3.rb
index cf893d4c99c9,cf893d4c99c9..32b307aa9590
--- a/Formula/lua@5.3.rb
+++ b/Formula/lua@5.3.rb
@@@ -13,14 -13,14 +13,15 @@@ class LuaAT53 < Formul
  
    option "without-luarocks", "Don't build with Luarocks support embedded"
  
++  depends_on "readline"
++
    # Be sure to build a dylib, or else runtime modules will pull in another static copy of liblua = crashy
    # See: https://github.com/Homebrew/homebrew/pull/5043
    # ***Update me with each version bump!***
    patch :DATA
  
    resource "luarocks" do
--    url "https://keplerproject.github.io/luarocks/releases/luarocks-2.3.0.tar.gz"
--    sha256 "68e38feeb66052e29ad1935a71b875194ed8b9c67c2223af5f4d4e3e2464ed97"
++    url "https://github.com/luarocks/luarocks.git", :branch => "luarocks-3"
    end
  
    def install
@@@ -58,11 -58,11 +59,13 @@@
          ENV.prepend_path "PATH", bin
          lua_prefix = prefix
  
++        raise "symlink liblua to /usr/local/lib temporarily"
          system "./configure", "--prefix=#{libexec}", "--rocks-tree=#{HOMEBREW_PREFIX}",
                                "--sysconfdir=#{etc}/luarocks53", "--with-lua=#{lua_prefix}",
                                "--lua-version=5.3", "--versioned-rocks-dir"
          system "make", "build"
          system "make", "install"
++        raise "unsymlink liblua"
  
          (share/"lua/5.3/luarocks").install_symlink Dir["#{libexec}/share/lua/5.3/luarocks/*"]
          bin.install_symlink libexec/"bin/luarocks-5.3"
diff --cc Formula/luvit.rb
index ce0d083b44fe,ce0d083b44fe..7b636023ded0
--- a/Formula/luvit.rb
+++ b/Formula/luvit.rb
@@@ -14,7 -14,7 +14,7 @@@ class Luvit < Formul
  
    depends_on "pkg-config" => :build
    depends_on "luajit"
--  depends_on "openssl"
++  depends_on "libressl"
  
    def install
      ENV["USE_SYSTEM_SSL"] = "1"
diff --cc Formula/lzo.rb
index a377e2626b8c,a377e2626b8c..05b2029898b5
--- a/Formula/lzo.rb
+++ b/Formula/lzo.rb
@@@ -14,6 -14,6 +14,8 @@@ class Lzo < Formul
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-largefile",
++                          "--enable-asm",
                            "--enable-shared"
      system "make"
      system "make", "check"
diff --cc Formula/lzop.rb
index 347bb67e9133,347bb67e9133..d451dc94c2dd
--- a/Formula/lzop.rb
+++ b/Formula/lzop.rb
@@@ -16,8 -16,8 +16,8 @@@ class Lzop < Formul
    depends_on "lzo"
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++    system "./configure", "--disable-dependency-tracking", "--enable-asm",
++                          "--prefix=#{prefix}", "--enable-largefile"
      system "make", "install"
    end
  
diff --cc Formula/mbedtls.rb
index 63d8cacc8c53,63d8cacc8c53..7a2374f4bab6
--- a/Formula/mbedtls.rb
+++ b/Formula/mbedtls.rb
@@@ -13,6 -13,6 +13,8 @@@ class Mbedtls < Formul
    end
  
    depends_on "cmake" => :build
++  depends_on "zlib"
++  depends_on "pkcs11-helper"
  
    def install
      inreplace "include/mbedtls/config.h" do |s|
@@@ -24,7 -24,7 +26,7 @@@
        s.gsub! "//#define MBEDTLS_THREADING_C", "#define MBEDTLS_THREADING_C"
      end
  
--    system "cmake", "-DUSE_SHARED_MBEDTLS_LIBRARY=On", *std_cmake_args
++    system "cmake", "-DENABLE_ZLIB_SUPPORT=ON", "-DUSE_PKCS11_HELPER_LIBRARY=PN", "-DUSE_SHARED_MBEDTLS_LIBRARY=On", *std_cmake_args
      system "make"
      system "make", "install"
  
diff --cc Formula/md5sha1sum.rb
index 0c9d779cd3ee,0c9d779cd3ee..8dbe876b7dab
--- a/Formula/md5sha1sum.rb
+++ b/Formula/md5sha1sum.rb
@@@ -15,10 -15,10 +15,10 @@@ class Md5sha1sum < Formul
      sha256 "f3925bbf60e1b8eaf47fe26cf19d49e61dd9623f891ec62a5500b07dbc186410" => :mountain_lion
    end
  
--  depends_on "openssl"
++  depends_on "libressl"
  
    def install
--    openssl = Formula["openssl"]
++    openssl = Formula["libressl"]
      ENV["SSLINCPATH"] = openssl.opt_include
      ENV["SSLLIBPATH"] = openssl.opt_lib
  
diff --cc Formula/mecab.rb
index 616e4a6fa558,616e4a6fa558..b015e752e4c2
--- a/Formula/mecab.rb
+++ b/Formula/mecab.rb
@@@ -17,6 -17,6 +17,8 @@@ class Mecab < Formul
  
    conflicts_with "mecab-ko", :because => "both install mecab binaries"
  
++  depends_on "libiconv"
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
diff --cc Formula/minimal-racket.rb
index 4846073e6e86,4846073e6e86..59873651f013
--- a/Formula/minimal-racket.rb
+++ b/Formula/minimal-racket.rb
@@@ -14,6 -14,6 +14,9 @@@ class MinimalRacket < Formul
    # these two files are amended when (un)installing packages
    skip_clean "lib/racket/launchers.rktd", "lib/racket/mans.rktd"
  
++  depends_on "libiconv"
++  depends_on "libffi"
++
    def install
      cd "src" do
        args = %W[
diff --cc Formula/minizip.rb
index fedf4b8a65a1,fedf4b8a65a1..c120f60a1556
--- a/Formula/minizip.rb
+++ b/Formula/minizip.rb
@@@ -15,6 -15,6 +15,7 @@@ class Minizip < Formul
    depends_on "autoconf" => :build
    depends_on "automake" => :build
    depends_on "libtool" => :build
++  depends_on "zlib"
  
    def install
      system "./configure", "--prefix=#{prefix}"
diff --cc Formula/mono.rb
index e0ae16112e84,e0ae16112e84..29c385973c9b
--- a/Formula/mono.rb
+++ b/Formula/mono.rb
@@@ -3,6 -3,6 +3,7 @@@ class Mono < Formul
    homepage "http://www.mono-project.com/"
    url "https://download.mono-project.com/sources/mono/mono-4.8.0.524.tar.bz2"
    sha256 "ca02614cfc9fe65e310631cd611d7b07d1ff205ce193006d4be0f9919c26bdcf"
++  head "https://github.com/mono/mono.git"
  
    bottle do
      sha256 "46c5725563889e50b7d596c68c8b4f64db03bfde04b2e08e0279b8a1471b894d" => :sierra
@@@ -22,32 -22,32 +23,99 @@@
    link_overwrite "lib/cli"
  
    option "without-fsharp", "Build without support for the F# language."
++    option "with-llvm", "Enable LLVM as a code generation engine for Mono. Requires a HEAD build."
  
    depends_on "automake" => :build
    depends_on "autoconf" => :build
    depends_on "pkg-config" => :build
    depends_on "cmake" => :build
++  depends_on "libiconv"
++  depends_on "python"
++  depends_on "libedit"
++  depends_on "wget"
++  depends_on "zlib"
++  depends_on "gettext"
++  depends_on "ncurses"
++  depends_on "libtool" => :build
  
    conflicts_with "xsd", :because => "both install `xsd` binaries"
    conflicts_with "czmq", :because => "both install `makecert` binaries"
  
--  resource "fsharp" do
--    url "https://github.com/fsharp/fsharp.git",
--        :tag => "4.1.0.2",
--        :revision => "6ce41a922dd9ebb9766ca4b89b7a32f6a82e43e9"
++  stable do
++    resource "fsharp" do
++      url "https://github.com/fsharp/fsharp.git",
++          :tag => "4.1.0.2",
++          :revision => "6ce41a922dd9ebb9766ca4b89b7a32f6a82e43e9"
++    end
++  end
++  head do
++    resource "fsharp" do
++      url "https://github.com/fsharp/fsharp.git"
++    end
++  end
++
++  head do
++    resource "llvm" do
++      # Instructions say to checkout branch 'mono', but build fails saying the
++      # mono llvm repository is too old
++      url "https://github.com/mono/llvm.git"
++    end
    end
  
    def install
++    odie "Building with LLVM requires a HEAD build" if build.with?("llvm") && !build.head?
++
++    if build.with?("llvm")
++      resource("llvm").stage do
++        llvm_args = %W[
++          --prefix=#{prefix}/llvm
++          --enable-optimized
++          --enable-targets=x86,x86_64
++        ]
++        # Experimental?
++        llvm_args << "--enable-cxx1y"
++        # Might be worth it for a HEAD build?
++        # llvm_args << "--disable-assertions"
++        system "./configure", *llvm_args
++        system "make"
++        system "make", "install"
++      end
++    end
++
      args = %W[
        --prefix=#{prefix}
        --disable-dependency-tracking
        --disable-silent-rules
--      --enable-nls=no
++      --enable-nls
++      --enable-libraries
++      --enable-mcs-build
++      --enable-system-aot
++      --enable-executables
++      --with-sgen=yes
++      --with-sgen-default-current=yes
++      --with-tls=__thread
++      --with-large-heap=yes
++      --enable-big-arrays
++      --enable-dtrace
++      --enable-parallel-mark
++      --with-runtime-preset=all
      ]
  
++    args << "--disable-btls" unless build.head?
++
++    if build.with? "llvm"
++      args << "--enable-llvm"
++      ENV["MONO_USE_LLVM"] = "1"
++      ENV.prepend_path "PATH", "#{prefix}/llvm/bin"
++    end
++
      args << "--build=" + (MacOS.prefer_64_bit? ? "x86_64": "i686") + "-apple-darwin"
  
--    system "./configure", *args
++    # Build appears to break otherwise; some parts try to use binaries before
++    # they are built.
++    ENV.deparallelize
++
++    system "./autogen.sh", *args
      system "make"
      system "make", "install"
      # mono-gdb.py and mono-sgen-gdb.py are meant to be loaded by gdb, not to be
diff --cc Formula/mpfr.rb
index ec76ac5f1823,ec76ac5f1823..08ff84f93566
--- a/Formula/mpfr.rb
+++ b/Formula/mpfr.rb
@@@ -13,7 -13,7 +13,10 @@@ class Mpfr < Formul
      sha256 "ca737c71556161c37563b78305aa93c6663cde07f06d94e4d7de091983327c48" => :yosemite
    end
  
--  depends_on "gmp"
++  resource "gmp-build" do
++   url "https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz"
++   sha256 "87b565e89a9a684fe4ebeeddb8399dce2599f9c9049854ca8c0dfbdea0e21912"
++  end
  
    fails_with :clang do
      build 421
@@@ -24,8 -24,8 +27,34 @@@
    end
  
    def install
--    system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}",
--                          "--disable-silent-rules"
++    (buildpath/"gmp-build").install resource("gmp-build")
++    ENV["gmp_cv_c_double_format"] = "IEEE little endian"
++    ENV["mpfr_cv_c_long_double_format"] = "IEEE extended, little endian"
++
++    cd (buildpath/"gmp-build") do
++      gmp_args = %W[
++        --prefix=#{Formula["gmp"].prefix}
++        --enable-cxx
++        --enable-assembly
++        --enable-fft
++        --with-readline
++        --enable-alloca=alloca
++      ]
++      system "./configure", *gmp_args
++      system "make"
++      system "make", "check"
++    end
++
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --disable-silent-rules
++      --with-gmp-build=#{(buildpath/"gmp-build")}
++      --enable-gmp-internals
++      --enable-thread-safe
++    ]
++    # args << "--enable-decimal-float"
++    system "./configure", *args
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/msgpack.rb
index ce71b146c2a2,ce71b146c2a2..772c482669aa
--- a/Formula/msgpack.rb
+++ b/Formula/msgpack.rb
@@@ -12,9 -12,9 +12,15 @@@ class Msgpack < Formul
    end
  
    depends_on "cmake" => :build
++  depends_on "zlib"
  
    def install
--    system "cmake", ".", *std_cmake_args
++    ENV.cxx11
++    args = %W[
++      -DMSGPACK_BOOST=ON
++      -DMSGPACK_CXX11=ON
++    ]
++    system "cmake", ".", *(std_cmake_args + args)
      system "make", "install"
    end
  
diff --cc Formula/mspdebug.rb
index 3f45f424669a,3f45f424669a..a4ac41f85374
--- a/Formula/mspdebug.rb
+++ b/Formula/mspdebug.rb
@@@ -12,6 -12,6 +12,7 @@@ class Mspdebug < Formul
    end
  
    depends_on "libusb-compat"
++  depends_on "readline"
  
    def install
      system "make", "PREFIX=#{prefix}", "install"
diff --cc Formula/mysql.rb
index f0bed7856664,f0bed7856664..e3215965f9a8
--- a/Formula/mysql.rb
+++ b/Formula/mysql.rb
@@@ -24,7 -24,7 +24,14 @@@ class Mysql < Formul
  
    depends_on "cmake" => :build
    depends_on "pidof" unless MacOS.version >= :mountain_lion
--  depends_on "openssl"
++  depends_on "libressl"
++  depends_on "libedit"
++  depends_on "protobuf"
++  depends_on "zlib"
++  depends_on "libevent"
++  depends_on "ncurses"
++  depends_on "lz4"
++  depends_on "mecab"
  
    # https://github.com/Homebrew/homebrew-core/issues/1475
    # Needs at least Clang 3.3, which shipped alongside Lion.
@@@ -64,8 -64,8 +71,14 @@@
        -DSYSCONFDIR=#{etc}
        -DCOMPILATION_COMMENT=Homebrew
        -DWITH_EDITLINE=system
--      -DWITH_BOOST=boost
++      -DWITH_BOOST=../boost
++      -DWITH_PROTOBUF=system
++      -DWITH_LIBEVENT=system
++      -DWITH_LZ4=system
++      -DWITH_MECAB=system
++      -DWITH_ZLIB=system
      ]
++    # MySQL requires a specific boost version (i.e. the one packaged with it)
  
      # To enable unit testing at build, we need to download the unit testing suite
      if build.with? "test"
@@@ -89,34 -89,34 +102,38 @@@
      # Build with debug support
      args << "-DWITH_DEBUG=1" if build.with? "debug"
  
--    system "cmake", ".", *std_cmake_args, *args
--    system "make"
--    system "make", "install"
++    inreplace "cmake/ssl.cmake", "CRYPTO_LIBRARY      AND", "CRYPTO_LIBRARY"
++    inreplace "cmake/ssl.cmake", "OPENSSL_MAJOR_VERSION STREQUAL \"1\"", ""
++    mkdir "build" do
++      system "cmake", "..", *std_cmake_args, *args
++      system "make"
++      system "make", "install"
  
--    # We don't want to keep a 240MB+ folder around most users won't need.
--    (prefix/"mysql-test").cd do
--      system "./mysql-test-run.pl", "status", "--vardir=#{Dir.mktmpdir}"
++      # We don't want to keep a 240MB+ folder around most users won't need.
++      (prefix/"mysql-test").cd do
++        system "./mysql-test-run.pl", "status", "--vardir=#{Dir.mktmpdir}"
++      end
++      rm_rf prefix/"mysql-test"
++
++      # Don't create databases inside of the prefix!
++      # See: https://github.com/Homebrew/homebrew/issues/4975
++      rm_rf prefix/"data"
++
++      # Perl script was removed in 5.7.9 so install C++ binary instead.
++      # Binary is deprecated & will be removed in future upstream
++      # update but is still required for mysql-test-run to pass in test.
++      (prefix/"scripts").install "client/mysql_install_db"
++      bin.install_symlink prefix/"scripts/mysql_install_db"
++
++      # Fix up the control script and link into bin
++      inreplace "#{prefix}/support-files/mysql.server" do |s|
++        s.gsub!(/^(PATH=".*)(")/, "\\1:#{HOMEBREW_PREFIX}/bin\\2")
++        # pidof can be replaced with pgrep from proctools on Mountain Lion
++        s.gsub!(/pidof/, "pgrep") if MacOS.version >= :mountain_lion
++      end
++
++      bin.install_symlink prefix/"support-files/mysql.server"
      end
--    rm_rf prefix/"mysql-test"
--
--    # Don't create databases inside of the prefix!
--    # See: https://github.com/Homebrew/homebrew/issues/4975
--    rm_rf prefix/"data"
--
--    # Perl script was removed in 5.7.9 so install C++ binary instead.
--    # Binary is deprecated & will be removed in future upstream
--    # update but is still required for mysql-test-run to pass in test.
--    (prefix/"scripts").install "client/mysql_install_db"
--    bin.install_symlink prefix/"scripts/mysql_install_db"
--
--    # Fix up the control script and link into bin
--    inreplace "#{prefix}/support-files/mysql.server" do |s|
--      s.gsub!(/^(PATH=".*)(")/, "\\1:#{HOMEBREW_PREFIX}/bin\\2")
--      # pidof can be replaced with pgrep from proctools on Mountain Lion
--      s.gsub!(/pidof/, "pgrep") if MacOS.version >= :mountain_lion
--    end
--
--    bin.install_symlink prefix/"support-files/mysql.server"
    end
  
    def post_install
diff --cc Formula/nasm.rb
index 8cbbf86bda50,8cbbf86bda50..5092a162db7f
--- a/Formula/nasm.rb
+++ b/Formula/nasm.rb
@@@ -15,13 -15,13 +15,14 @@@ class Nasm < Formul
    head do
      url "git://repo.or.cz/nasm.git"
      depends_on "autoconf" => :build
++  end
++
      depends_on "asciidoc" => :build
      depends_on "xmlto" => :build
--  end
  
    def install
      system "./autogen.sh" if build.head?
--    system "./configure", "--prefix=#{prefix}"
++    system "./configure", "--prefix=#{prefix}", "--enable-largefile"
      system "make", "manpages" if build.head?
      system "make", "install", "install_rdf"
    end
diff --cc Formula/ncdu.rb
index 2193e8ca3058,2193e8ca3058..b78769323276
--- a/Formula/ncdu.rb
+++ b/Formula/ncdu.rb
@@@ -12,6 -12,6 +12,9 @@@ class Ncdu < Formul
      sha256 "b4e39a75592588e134de07e8037bf01e0d6fc93dbe79af1f6f9e197ca8b288cb" => :mavericks
    end
  
++  depends_on "pkg-config" => :build
++  depends_on "ncurses"
++
    head do
      url "https://g.blicky.net/ncdu.git"
  
diff --cc Formula/ncurses.rb
index 2dc40717140c,2dc40717140c..1ec02fce7908
--- a/Formula/ncurses.rb
+++ b/Formula/ncurses.rb
@@@ -47,6 -47,6 +47,7 @@@ class Ncurses < Formul
                            "--mandir=#{man}",
                            "--with-manpage-format=normal",
                            "--with-shared",
++                          "--with-pthread",
                            "--with-gpm=no"
      system "make"
      ENV.deparallelize
@@@ -61,23 -61,23 +62,32 @@@
      major = version.to_s.split(".")[0]
  
      %w[form menu ncurses panel].each do |name|
--      lib.install_symlink "lib#{name}w.#{major}.dylib" => "lib#{name}.dylib"
--      lib.install_symlink "lib#{name}w.#{major}.dylib" => "lib#{name}.#{major}.dylib"
--      lib.install_symlink "lib#{name}w.a" => "lib#{name}.a"
--      lib.install_symlink "lib#{name}w_g.a" => "lib#{name}_g.a"
++      lib.install_symlink "lib#{name}tw.#{major}.dylib" => "lib#{name}.dylib"
++      lib.install_symlink "lib#{name}tw.#{major}.dylib" => "lib#{name}.#{major}.dylib"
++      lib.install_symlink "lib#{name}tw.a" => "lib#{name}.a"
++      lib.install_symlink "lib#{name}tw_g.a" => "lib#{name}_g.a"
++
++      lib.install_symlink "lib#{name}tw.#{major}.dylib" => "lib#{name}w.dylib"
++      lib.install_symlink "lib#{name}tw.#{major}.dylib" => "lib#{name}w.#{major}.dylib"
++      lib.install_symlink "lib#{name}tw.a" => "lib#{name}w.a"
++      lib.install_symlink "lib#{name}tw_g.a" => "lib#{name}w_g.a"
      end
  
--    lib.install_symlink "libncurses++w.a" => "libncurses++.a"
++    lib.install_symlink "libncurses++tw.a" => "libncurses++.a"
      lib.install_symlink "libncurses.a" => "libcurses.a"
      lib.install_symlink "libncurses.dylib" => "libcurses.dylib"
  
--    (lib/"pkgconfig").install_symlink "ncursesw.pc" => "ncurses.pc"
++    lib.install_symlink "libncurses++tw.a" => "libncurses++w.a"
  
--    bin.install_symlink "ncursesw#{major}-config" => "ncurses#{major}-config"
++    (lib/"pkgconfig").install_symlink "ncursestw.pc" => "ncurses.pc"
++    (lib/"pkgconfig").install_symlink "ncursestw.pc" => "ncursesw.pc"
++
++    bin.install_symlink "ncursestw#{major}-config" => "ncurses#{major}-config"
++    bin.install_symlink "ncursestw#{major}-config" => "ncursesw#{major}-config"
  
      include.install_symlink [
--      "ncursesw/curses.h", "ncursesw/form.h", "ncursesw/ncurses.h",
--      "ncursesw/panel.h", "ncursesw/term.h", "ncursesw/termcap.h"
++      "ncursestw/curses.h", "ncursestw/form.h", "ncursestw/ncurses.h",
++      "ncursestw/panel.h", "ncursestw/term.h", "ncursestw/termcap.h"
      ]
    end
  
diff --cc Formula/net-snmp.rb
index a0a678c6c992,a0a678c6c992..3071e6e49a0a
--- a/Formula/net-snmp.rb
+++ b/Formula/net-snmp.rb
@@@ -14,7 -14,7 +14,7 @@@ class NetSnmp < Formul
  
    keg_only :provided_by_osx
  
--  depends_on "openssl"
++  depends_on "openssl@1.1"
    depends_on :python => :optional
  
    def install
@@@ -30,7 -30,7 +30,7 @@@
        --without-kmem-usage
        --disable-embedded-perl
        --without-perl-modules
--      --with-openssl=#{Formula["openssl"].opt_prefix}
++      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
      ]
  
      if build.with? "python"
diff --cc Formula/netpbm.rb
index c31e6be8d3a4,c31e6be8d3a4..ad900c104e9d
--- a/Formula/netpbm.rb
+++ b/Formula/netpbm.rb
@@@ -24,6 -24,6 +24,10 @@@ class Netpbm < Formul
    depends_on "jasper"
    depends_on "jpeg"
    depends_on "libpng"
++  depends_on "zlib"
++  depends_on :x11
++  depends_on "libxml2"
++  depends_on "ghostscript"
  
    def install
      cp "config.mk.in", "config.mk"
diff --cc Formula/nettle.rb
index 45527ddcb6de,45527ddcb6de..bd1038b5330c
--- a/Formula/nettle.rb
+++ b/Formula/nettle.rb
@@@ -13,6 -13,6 +13,7 @@@ class Nettle < Formul
    end
  
    depends_on "gmp"
++  depends_on "libressl"
  
    def install
      # macOS doesn't use .so libs. Emailed upstream 04/02/2016.
@@@ -20,6 -20,6 +21,11 @@@
  
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-public-key",
++                          "--enable-assembler",
++                          "--enable-openssl",
++                          "--enable-x86-aesni",
++                          "--enable-static",
                            "--enable-shared"
      system "make"
      system "make", "install"
diff --cc Formula/nghttp2.rb
index ccf3a31ae747,ccf3a31ae747..ae683a738e00
--- a/Formula/nghttp2.rb
+++ b/Formula/nghttp2.rb
@@@ -22,19 -22,19 +22,21 @@@ class Nghttp2 < Formul
    option "without-docs", "Don't build man pages"
    option "with-python3", "Build python3 bindings"
  
--  depends_on :python3 => :optional
++  depends_on "python3"
++  depends_on "mruby"
    depends_on "sphinx-doc" => :build if build.with? "docs"
--  depends_on "libxml2" if MacOS.version <= :lion
++  depends_on "libxml2"
    depends_on "pkg-config" => :build
    depends_on "cunit" => :build
    depends_on "c-ares"
    depends_on "libev"
--  depends_on "openssl"
++  depends_on "zlib"
++  depends_on "libressl"
    depends_on "libevent"
    depends_on "jansson"
    depends_on "boost"
    depends_on "spdylay"
--  depends_on "jemalloc" => :recommended
++  depends_on "jemalloc"
  
    resource "Cython" do
      url "https://files.pythonhosted.org/packages/b7/67/7e2a817f9e9c773ee3995c1e15204f5d01c8da71882016cac10342ef031b/Cython-0.25.2.tar.gz"
@@@ -56,12 -56,12 +58,13 @@@
        --with-boost=#{Formula["boost"].opt_prefix}
        --enable-asio-lib
        --with-spdylay
++      --enable-hpack-tools
        --disable-python-bindings
++      --with-mruby
      ]
++    # Don't want --enable-python-bindings because "make install" fails
  
      args << "--enable-examples" if build.with? "examples"
--    args << "--with-xml-prefix=/usr" if MacOS.version > :lion
--    args << "--without-jemalloc" if build.without? "jemalloc"
  
      system "autoreconf", "-ivf" if build.head?
      system "./configure", *args
diff --cc Formula/nmap.rb
index 9d078a691c9b,9d078a691c9b..552b18b48539
--- a/Formula/nmap.rb
+++ b/Formula/nmap.rb
@@@ -13,7 -13,7 +13,16 @@@ class Nmap < Formul
  
    option "with-pygtk", "Build Zenmap GUI"
  
--  depends_on "openssl"
++  depends_on "libressl"
++  # Requires PCRE headers in PCRE/pcre.h?
++  depends_on "pcre"
++  depends_on "lua@5.3"
++  depends_on "libpcap"
++  depends_on "python"
++  depends_on "libdnet" => :optional
++  depends_on "liblinear" => :optional
++  depends_on "apr" => ["HEAD", :optional]
++  depends_on "subversion" => :optional
    depends_on "pygtk" => :optional
  
    conflicts_with "ndiff", :because => "both install `ndiff` binaries"
@@@ -23,15 -23,15 +32,13 @@@
  
      args = %W[
        --prefix=#{prefix}
--      --with-libpcre=included
--      --with-liblua=included
--      --with-openssl=#{Formula["openssl"].opt_prefix}
--      --without-nmap-update
++      --with-libpcap=#{Formula["libpcap"].opt_prefix}
++      --with-libpcre=#{Formula["pcre"].opt_prefix}
++      --with-liblua=#{Formula["lua@5.3"].opt_prefix}
++      --with-openssl=#{Formula["libressl"].opt_prefix}
        --disable-universal
      ]
  
--    args << "--without-zenmap" if build.without? "pygtk"
--
      system "./configure", *args
      system "make" # separate steps required otherwise the build fails
      system "make", "install"
diff --cc Formula/node.rb
index 66db335a5ce6,66db335a5ce6..a62901d071cc
--- a/Formula/node.rb
+++ b/Formula/node.rb
@@@ -12,7 -12,7 +12,7 @@@ class Node < Formul
    end
  
    option "with-debug", "Build with debugger hooks"
--  option "with-openssl", "Build against Homebrew's OpenSSL instead of the bundled OpenSSL"
++  option "with-libressl", "Build against Homebrew's LibreSSL instead of the bundled OpenSSL"
    option "without-npm", "npm will not be installed"
    option "without-completion", "npm bash completion will not be installed"
    option "without-icu4c", "Build with small-icu (English only) instead of system-icu (all locales)"
@@@ -22,7 -22,7 +22,7 @@@
    depends_on :python => :build if MacOS.version <= :snow_leopard
    depends_on "pkg-config" => :build
    depends_on "icu4c" => :recommended
--  depends_on "openssl" => :optional
++  depends_on "libressl" => :optional
  
    conflicts_with "node@0.12", :because => "Differing version of same formula"
    conflicts_with "node@0.10", :because => "Differing version of same formula"
@@@ -49,7 -49,7 +49,7 @@@
      args = %W[--prefix=#{prefix} --without-npm]
      args << "--debug" if build.with? "debug"
      args << "--with-intl=system-icu" if build.with? "icu4c"
--    args << "--shared-openssl" if build.with? "openssl"
++    args << "--shared-openssl" if build.with? "libressl"
      args << "--tag=head" if build.head?
  
      system "./configure", *args
diff --cc Formula/npth.rb
index 2fca5c96ed33,2fca5c96ed33..e2fdfab387a0
--- a/Formula/npth.rb
+++ b/Formula/npth.rb
@@@ -15,6 -15,6 +15,7 @@@ class Npth < Formul
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
++                          "--enable-static",
                            "--prefix=#{prefix}"
      system "make", "install"
    end
diff --cc Formula/nspr.rb
index d49fa4d74a8d,d49fa4d74a8d..04d058cb1626
--- a/Formula/nspr.rb
+++ b/Formula/nspr.rb
@@@ -27,6 -27,6 +27,10 @@@ class Nspr < Formul
          --enable-ipv6
          --enable-macos-target=#{MacOS.version}
        ]
++      # Cannot use; "unknown type name RCPrimordialThread"
++      # --enable-cplus
++      # Cannot use; pulls in stdbool.h, which breaks some other code
++      # --enable-user-pthreads
        args << "--enable-64bit" if MacOS.prefer_64_bit?
        system "./configure", *args
        # Remove the broken (for anyone but Firefox) install_name
diff --cc Formula/nss.rb
index 3657e2d8ab5f,3657e2d8ab5f..bcc4d810ab74
--- a/Formula/nss.rb
+++ b/Formula/nss.rb
@@@ -19,6 -19,6 +19,8 @@@ class Nss < Formul
    EOS
  
    depends_on "nspr"
++  depends_on "zlib"
++  depends_on "sqlite"
  
    def install
      ENV.deparallelize
@@@ -27,8 -27,8 +29,10 @@@
      args = %W[
        BUILD_OPT=1
        NSS_USE_SYSTEM_SQLITE=1
++      NSS_FORCE_FIPS=1
        NSPR_INCLUDE_DIR=#{Formula["nspr"].opt_include}/nspr
        NSPR_LIB_DIR=#{Formula["nspr"].opt_lib}
++      FREEBL_LOWHASH=1
      ]
      args << "USE_64=1" if MacOS.prefer_64_bit?
  
diff --cc Formula/numpy.rb
index 0c7c15e8eeed,0c7c15e8eeed..2f2dd92589b0
--- a/Formula/numpy.rb
+++ b/Formula/numpy.rb
@@@ -25,6 -25,6 +25,8 @@@ class Numpy < Formul
    depends_on :fortran => :build
    depends_on :python => :recommended if MacOS.version <= :snow_leopard
    depends_on :python3 => :optional
++  # depends_on "blis"
++  # depends_on "lapack"
  
    resource "nose" do
      url "https://files.pythonhosted.org/packages/58/a5/0dc93c3ec33f4e281849523a5a913fa1eea9a3068acfa754d44d88107a44/nose-1.3.7.tar.gz"
diff --cc Formula/ocaml.rb
index 605e9dfc111e,605e9dfc111e..713400fc4a95
--- a/Formula/ocaml.rb
+++ b/Formula/ocaml.rb
@@@ -42,17 -42,17 +42,46 @@@ class Ocaml < Formul
    option "with-flambda", "Install with flambda support"
  
    depends_on :x11 => :optional
++  depends_on "ncurses"
  
    def install
      ENV.deparallelize # Builds are not parallel-safe, esp. with many cores
  
      # the ./configure in this package is NOT a GNU autoconf script!
--    args = ["-prefix", HOMEBREW_PREFIX.to_s, "-with-debug-runtime", "-mandir", man]
++    args = ["-prefix", HOMEBREW_PREFIX.to_s, "-mandir", man]
++
++    # Breaks opam build?
++    # args << "-safe-string"
++
      args << "-no-graph" if build.without? "x11"
      args << "-flambda" if build.with? "flambda"
++
++    # inreplace "otherlibs/Makefile",
++    #           "allopt: lib$(CLIBNAME).$(A)",
++    #           "allopt: lib$(CLIBNAME).$(A).opt"
++    # inreplace "otherlibs/Makefile",
++    #           "$(LDOPTS)",
++    #           "$(LDOPTS) -L$(ROOTDIR)/stdlib -lcamlrun\nlib$(CLIBNAME).$(A).opt: $(COBJS)\n\t$(MKLIB) -oc $(CLIBNAME) $(COBJS) $(LDOPTS) -L$(ROOTDIR)/stdlib -lasmrun"
++    # For dllunix.so only
++    # Switch between byterun/asmrun?
++    # inreplace "otherlibs/Makefile", "$(LDOPTS)", "$(LDOPTS) ../../byterun/debugger.o ../../byterun/signals.o"
++
++    # For dllnum.so only
++    # Switch between byterun/asmrun?
++    # inreplace "otherlibs/Makefile", "$(LDOPTS)", "$(LDOPTS) ../../byterun/ints.o"
++
++    # For dllbigarray.so only
++    # Switch between byterun/asmrun?
++    # inreplace "otherlibs/Makefile", "$(LDOPTS)", "$(LDOPTS) ../../byterun/compare.o"
++
++    # inreplace "ocamldoc/Makefile", "ocamlcommon.cmxa", "ocamlcommon.cmxa ../asmrun/meta.o ../asmrun/debugger.o"
      system "./configure", *args
  
--    system "make", "world.opt"
++    system "make", "world"
++    system "make", "bootstrap"
++    system "make", "opt"
++    system "make", "opt.opt"
++    system "make", "tests"
      system "make", "install", "PREFIX=#{prefix}"
    end
  
diff --cc Formula/open-mpi.rb
index dbbe55a5e4a2,dbbe55a5e4a2..4336d54cf8e4
--- a/Formula/open-mpi.rb
+++ b/Formula/open-mpi.rb
@@@ -1,3 -1,3 +1,4 @@@
++require File.expand_path("/Users/awang/code/homebrew-science/Requirements/cuda_requirement.rb", __FILE__)
  class OpenMpi < Formula
    desc "High performance message passing library"
    homepage "https://www.open-mpi.org/"
@@@ -12,21 -12,21 +13,29 @@@
  
    head do
      url "https://github.com/open-mpi/ompi.git"
++  end
      depends_on "automake" => :build
      depends_on "autoconf" => :build
      depends_on "libtool" => :build
--  end
  
    option "with-mpi-thread-multiple", "Enable MPI_THREAD_MULTIPLE"
--  option "with-cxx-bindings", "Enable C++ MPI bindings (deprecated as of MPI-3.0)"
    option :cxx11
  
    deprecated_option "disable-fortran" => "without-fortran"
    deprecated_option "enable-mpi-thread-multiple" => "with-mpi-thread-multiple"
  
++  depends_on "pkg-config" => :build
++  depends_on :x11
++  depends_on CudaRequirement => :optional
    depends_on :fortran => :recommended
--  depends_on :java => :optional
    depends_on "libevent"
++  depends_on "slurm"
++  depends_on "libfabric"
++  depends_on "berkeley-db"
++  depends_on "zlib"
++  depends_on "libressl"
++  depends_on "cairo"
++  depends_on "libxml2"
  
    conflicts_with "mpich", :because => "both install mpi__ compiler wrappers"
    conflicts_with "lcdf-typetools", :because => "both install same set of binaries."
@@@ -41,15 -41,15 +50,49 @@@
        --enable-ipv6
        --with-libevent=#{Formula["libevent"].opt_prefix}
        --with-sge
++      --enable-sparse-groups
++      --with-cuda
++      --enable-getpwuid
++      --enable-static
++      --enable-shared
++      --enable-builtin-atomics
++      --enable-osx-builtin-atomics
++      --enable-event-evport
++      --with-libltdl=#{Formula["libtool"].prefix}
++      --with-libfabric=#{Formula["libfabric"].prefix}
++      --with-slurm
      ]
--    args << "--with-platform-optimized" if build.head?
--    args << "--disable-mpi-fortran" if build.without? "fortran"
--    args << "--enable-mpi-thread-multiple" if build.with? "mpi-thread-multiple"
--    args << "--enable-mpi-java" if build.with? "java"
--    args << "--enable-mpi-cxx" if build.with? "cxx-bindings"
  
++    if build.with? "fortran"
++      args << "--enable-mpi-fortran=all"
++    else
++      args << "--disable-mpi-fortran"
++    end
++
++    args << "--with-platform-optimized" if build.head?
++    args << "--enable-mpi-thread-multiple" if build.with? "mpi-thread-multiple"
++
++    inreplace "ompi/mca/io/romio314/romio/configure", "/usr/bin/arch -k", "/usr/bin/arch"
++    inreplace "ompi/mca/io/romio314/romio/configure", "/bin/machine", "/usr/bin/machine"
++
++    # Seems OpenCL support is limited to Linux + AMD at this time
++    # ENV.prepend "LDFLAGS", "-Wl,-framework -Wl,OpenCL"
++    # inreplace "configure", "CL/", "OpenCL/"
++    # inreplace "configure", "-lOpenCL", "-framework OpenCL"
++    # inreplace "opal/mca/hwloc/hwloc1112/hwloc/config/hwloc.m4", "CL/", "OpenCL/"
++    # inreplace "opal/mca/hwloc/hwloc1112/hwloc/include/hwloc/opencl.h", "<CL/", "<OpenCL/"
++    # inreplace "opal/mca/hwloc/hwloc1112/hwloc/src/topology-opencl.c", "<CL/", "<OpenCL/"
++
++    ENV["CFLAGS"] = "-Wl,-rpath,/usr/local/cuda/lib"
++    ENV["CXXFLAGS"] = "-Wl,-rpath,/usr/local/cuda/lib"
      system "./autogen.pl" if build.head?
      system "./configure", *args
++
++    # inreplace "ompi/debuggers/Makefile", "_test_LDADD =", "_test_LDADD = -Wl,-rpath,/usr/local/cuda/lib"
++    # inreplace "test/datatype/Makefile", "_LDADD = \\", "_LDADD = -Wl,-rpath,/usr/local/cuda/lib \\"
++    # inreplace "test/util/Makefile", "_LDADD) $(LIBS)", "_LDADD) $(LIBS) -Wl,-rpath,/usr/local/cuda/lib"
++    # inreplace "test/class/Makefile", "_LDADD) $(LIBS)", "_LDADD) $(LIBS) -Wl,-rpath,/usr/local/cuda/lib"
++
      system "make", "all"
      system "make", "check"
      system "make", "install"
@@@ -93,7 -93,7 +136,7 @@@
        call MPI_FINALIZE(ierror)
        end
      EOS
--    system bin/"mpif90", "hellof.f90", "-o", "hellof"
++    system bin/"mpif90", "hellof.f90", "-o", "hellof", "-Wl,-rpath,/usr/local/cuda/lib"
      system "./hellof"
      system bin/"mpirun", "-np", "4", "./hellof"
    end
diff --cc Formula/openexr.rb
index 09d55730936d,09d55730936d..a49b80d53fd1
--- a/Formula/openexr.rb
+++ b/Formula/openexr.rb
@@@ -14,6 -14,6 +14,7 @@@ class Openexr < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "zlib"
    depends_on "ilmbase"
  
    resource "exr" do
@@@ -21,17 -21,17 +22,13 @@@
      sha256 "eede573a0b59b79f21de15ee9d3b7649d58d8f2a8e7787ea34f192db3b3c84a4"
    end
  
--  # Fixes builds on 32-bit targets due to incorrect long literals
--  # Patches are already applied in the upstream git repo.
--  patch do
--    url "https://raw.githubusercontent.com/Homebrew/formula-patches/f1a3ea4f69b7a54d8123e2f16488864d52202de8/openexr/64bit_types.patch"
--    sha256 "c95374d8fdcc41ddc2f7c5b3c6f295a56dd5a6249bc26d0829548e70f5bd2dc9"
--  end
--
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
++                          "--enable-large-stack",
                            "--prefix=#{prefix}"
++    system "make"
++    # system "make", "check" Seems to cause -flto bus error?
      system "make", "install"
    end
  
diff --cc Formula/openjpeg.rb
index 261f9ea9d88f,261f9ea9d88f..7422b6a6cf5c
--- a/Formula/openjpeg.rb
+++ b/Formula/openjpeg.rb
@@@ -21,6 -21,6 +21,7 @@@ class Openjpeg < Formul
    depends_on "little-cms2"
    depends_on "libtiff"
    depends_on "libpng"
++  depends_on "zlib"
  
    def install
      args = std_cmake_args
diff --cc Formula/openldap.rb
index 622332840aad,622332840aad..fb8f3741c222
--- a/Formula/openldap.rb
+++ b/Formula/openldap.rb
@@@ -16,7 -16,7 +16,7 @@@ class Openldap < Formul
    option "with-sssvlv", "Enable server side sorting and virtual list view"
  
    depends_on "berkeley-db@4" => :optional
--  depends_on "openssl"
++  depends_on "libressl"
  
    def install
      args = %W[
diff --cc Formula/openslp.rb
index dbb00a524ed1,dbb00a524ed1..20a7f5efe876
--- a/Formula/openslp.rb
+++ b/Formula/openslp.rb
@@@ -11,9 -11,9 +11,11 @@@ class Openslp < Formul
      sha256 "883203d7fc5bbd6faefa058bf2f68dad2cc6a485f46599163d000684ae585507" => :mavericks
    end
  
++  depends_on "libressl"
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}", "--enable-async-api", "--enable-slpv2-security"
      system "make", "install"
    end
  end
diff --cc Formula/opus.rb
index 9e6ec0a45af6,9e6ec0a45af6..a2d986258305
--- a/Formula/opus.rb
+++ b/Formula/opus.rb
@@@ -22,7 -22,7 +22,7 @@@ class Opus < Formul
    option "with-custom-modes", "Enable custom-modes for opus see https://www.opus-codec.org/docs/opus_api-1.1.3/group__opus__custom.html"
  
    def install
--    args = ["--disable-dependency-tracking", "--disable-doc", "--prefix=#{prefix}"]
++    args = ["--disable-dependency-tracking", "--disable-doc", "--prefix=#{prefix}", "--enable-asm", "--enable-rtcd", "--enable-intrinsics"]
      args << "--enable-custom-modes" if build.with? "custom-modes"
  
      system "./autogen.sh" if build.head?
diff --cc Formula/orc.rb
index 3663ffccfc3b,3663ffccfc3b..5ee405bea12e
--- a/Formula/orc.rb
+++ b/Formula/orc.rb
@@@ -12,9 -12,9 +12,12 @@@ class Orc < Formul
      sha256 "257b50ea85c8481edf1638bab17c027a191f2a492955cb214a23f5cd6516db56" => :mavericks
    end
  
++  depends_on "pkg-config" => :build
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-static",
                            "--disable-gtk-doc"
      system "make", "install"
    end
diff --cc Formula/p11-kit.rb
index 72e66cd0bfc4,72e66cd0bfc4..c76dfd7f1f31
--- a/Formula/p11-kit.rb
+++ b/Formula/p11-kit.rb
@@@ -21,6 -21,6 +21,10 @@@ class P11Kit < Formul
  
    depends_on "libffi"
    depends_on "pkg-config" => :build
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "libtasn1"
++  depends_on "nss"
  
    def install
      # https://bugs.freedesktop.org/show_bug.cgi?id=91602#c1
@@@ -31,13 -31,13 +35,14 @@@
        system "./autogen.sh"
      end
  
++    # p11-kit apparently cannot be used as a static library?
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
--                          "--disable-trust-module",
++                          "--with-hash-impl=freebl",
++                          "--without-trust-paths", # ??
                            "--prefix=#{prefix}",
                            "--sysconfdir=#{etc}",
--                          "--with-module-config=#{etc}/pkcs11/modules",
--                          "--without-libtasn1"
++                          "--with-module-config=#{etc}/pkcs11/modules"
      system "make"
      system "make", "check"
      system "make", "install"
diff --cc Formula/pandoc.rb
index c8a7614e2e13,c8a7614e2e13..78d4e16a9487
--- a/Formula/pandoc.rb
+++ b/Formula/pandoc.rb
@@@ -17,6 -17,6 +17,7 @@@ class Pandoc < Formul
  
    depends_on "ghc" => :build
    depends_on "cabal-install" => :build
++  depends_on :tex
  
    def install
      cabal_sandbox do
diff --cc Formula/pango.rb
index df603bfe4ebf,df603bfe4ebf..50401e56679e
--- a/Formula/pango.rb
+++ b/Formula/pango.rb
@@@ -26,6 -26,6 +26,7 @@@ class Pango < Formul
    depends_on "harfbuzz"
    depends_on "fontconfig"
    depends_on "gobject-introspection"
++  depends_on "gtk-doc" => :optional
  
    def install
      args = %W[
@@@ -44,6 -44,6 +45,12 @@@
        args << "--without-xft"
      end
  
++    if build.with? "gtk-doc"
++      args << "--enable-gtk-doc"
++      args << "--enable-gtk-doc-html"
++      args << "--enable-gtk-doc-pdf"
++    end
++
      system "./autogen.sh" if build.head?
      system "./configure", *args
      system "make"
diff --cc Formula/parrot.rb
index ad7e31c7d832,ad7e31c7d832..2d7819b6834c
--- a/Formula/parrot.rb
+++ b/Formula/parrot.rb
@@@ -29,7 -29,7 +29,7 @@@ class Parrot < Formul
  
    depends_on "gmp" => :optional
    depends_on "icu4c" => :optional
--  depends_on "pcre" => :optional
++  depends_on "pcre2" => :optional
    depends_on "readline" => :optional
    depends_on "libffi" => :optional
  
diff --cc Formula/pbzip2.rb
index c53bf0599d12,c53bf0599d12..ac9d095d0715
--- a/Formula/pbzip2.rb
+++ b/Formula/pbzip2.rb
@@@ -11,6 -11,6 +11,8 @@@ class Pbzip2 < Formul
      sha256 "ad103aef3e2d72293cfed3fcc42999afee9b4fc332f8319e3c079758215411c9" => :yosemite
    end
  
++  depends_on "bzip2"
++
    def install
      system "make", "PREFIX=#{prefix}",
                     "CC=#{ENV.cxx}",
diff --cc Formula/pcre.rb
index 6a7ec8557edd,6a7ec8557edd..f6fe97ffc3f4
--- a/Formula/pcre.rb
+++ b/Formula/pcre.rb
@@@ -19,16 -19,16 +19,22 @@@ class Pcre < Formul
      depends_on "autoconf" => :build
      depends_on "libtool" => :build
    end
++  depends_on "readline"
++  depends_on "zlib"
++  depends_on "bzip2"
  
    def install
      system "./autogen.sh" if build.head?
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--enable-utf8",
++                          "--enable-utf",
++                          "--enable-cpp",
++                          "--enable-pcretest-libreadline",
                            "--enable-pcre8",
                            "--enable-pcre16",
                            "--enable-pcre32",
                            "--enable-unicode-properties",
++                          "--enable-pcregrep-jit",
                            "--enable-pcregrep-libz",
                            "--enable-pcregrep-libbz2",
                            "--enable-jit"
diff --cc Formula/pcre2.rb
index 6db78167f49d,6db78167f49d..ead578b09c3b
--- a/Formula/pcre2.rb
+++ b/Formula/pcre2.rb
@@@ -13,13 -13,13 +13,22 @@@ class Pcre2 < Formul
      sha256 "18f0559c760d65f0f2323499fcf306c04576b3630a46d61a3582a37fb103bf29" => :yosemite
    end
  
++  depends_on "readline"
++  depends_on "zlib"
++  depends_on "gzip"
++  depends_on "bzip2"
++
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-pcre2-8",
                            "--enable-pcre2-16",
                            "--enable-pcre2-32",
++                          "--enable-pcre2grep-jit",
++                          "--enable-pcre2grep-callout",
                            "--enable-pcre2grep-libz",
                            "--enable-pcre2grep-libbz2",
++                          "--enable-pcre2test-libreadline",
                            "--enable-jit"
      system "make"
      system "make", "check"
diff --cc Formula/perl.rb
index 67d04380eaf1,67d04380eaf1..13a0752ffd08
--- a/Formula/perl.rb
+++ b/Formula/perl.rb
@@@ -27,6 -27,6 +27,10 @@@ class Perl < Formul
    option "with-dtrace", "Build with DTrace probes"
    option "without-test", "Skip running the build test suite"
  
++  depends_on "berkeley-db"
++  depends_on "gdbm"
++  depends_on "dante" => :optional
++
    deprecated_option "with-tests" => "with-test"
  
    def install
@@@ -56,8 -56,8 +60,13 @@@
        -Duseshrplib
        -Duselargefiles
        -Dusethreads
++      -Duse64bitall
++      -Dusemorebits
++      -Duselongdouble
++      -Dusefaststdio
      ]
  
++    args << "-Dusesocks" if build.with? "dante"
      args << "-Dusedtrace" if build.with? "dtrace"
      args << "-Dusedevel" if build.head?
  
diff --cc Formula/pigz.rb
index 0f3f6f5b9474,0f3f6f5b9474..04626fc671fb
--- a/Formula/pigz.rb
+++ b/Formula/pigz.rb
@@@ -12,6 -12,6 +12,8 @@@ class Pigz < Formul
      sha256 "dfc83c38b9be8396eeb854fe8b045b9657e693665aad508164b65569fc78f491" => :yosemite
    end
  
++  depends_on "zlib"
++
    def install
      # Fix dyld: lazy symbol binding failed: Symbol not found: _deflatePending
      # Reported 8 Dec 2016 to madler at alumni.caltech.edu
diff --cc Formula/pinentry.rb
index 047c2edbc9dd,047c2edbc9dd..ca88a8b52ac4
--- a/Formula/pinentry.rb
+++ b/Formula/pinentry.rb
@@@ -4,7 -4,7 +4,6 @@@ class Pinentry < Formul
    url "https://www.gnupg.org/ftp/gcrypt/pinentry/pinentry-1.0.0.tar.bz2"
    mirror "https://www.mirrorservice.org/sites/ftp.gnupg.org/gcrypt/pinentry/pinentry-1.0.0.tar.bz2"
    sha256 "1672c2edc1feb036075b187c0773787b2afd0544f55025c645a71b4c2f79275a"
--
    bottle do
      cellar :any
      sha256 "6ce2fe92d8e0cf8984ec00c1332bceb33579eee5ce005355e26c567a15a2d4d0" => :sierra
@@@ -15,19 -15,19 +14,26 @@@
    depends_on "pkg-config" => :build
    depends_on "libgpg-error"
    depends_on "libassuan"
--  depends_on "gtk+" => :optional
++  depends_on "gtk+3"
++  depends_on "qt" => :optional
++  depends_on "libsecret"
++  depends_on "emacs"
  
    def install
      args = %W[
        --disable-dependency-tracking
        --disable-silent-rules
        --prefix=#{prefix}
--      --disable-pinentry-qt
--      --disable-pinentry-qt5
--      --disable-pinentry-gnome3
++      --enable-pinentry-curses
++      --enable-fallback-curses
++      --enable-pinentry-tty
++      --enable-pinentry-emacs
++      --disable-pinentry-gtk2
++      --enable-pinentry-gnome3
++      --enable-libsecret
      ]
  
--    args << "--disable-pinentry-gtk2" if build.without? "gtk+"
++    args << "--enable-pinentry-qt" if build.with? "qt"
  
      system "./configure", *args
      system "make", "install"
diff --cc Formula/pixman.rb
index e9159bbebd81,e9159bbebd81..8adb447f60d8
--- a/Formula/pixman.rb
+++ b/Formula/pixman.rb
@@@ -14,14 -14,14 +14,26 @@@ class Pixman < Formul
  
    keg_only :provided_pre_mountain_lion
  
++  option "with-openmp", "Build with OpenMP"
++  needs :openmp if build.with? "openmp"
++
    depends_on "pkg-config" => :build
++  depends_on "libpng"
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-gtk",
--                          "--disable-mmx", # MMX assembler fails with Xcode 7
--                          "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --prefix=#{prefix}
++      --enable-mmx
++      --enable-sse2
++      --enable-ssse3
++      --enable-gcc-inline-asm
++      --enable-libpng
++    ]
++    args << "--enable-openmp" if build.with? "openmp"
++
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/pkcs11-helper.rb
index ec236be8030c,ec236be8030c..517111841f90
--- a/Formula/pkcs11-helper.rb
+++ b/Formula/pkcs11-helper.rb
@@@ -19,7 -19,7 +19,10 @@@ class Pkcs11Helper < Formul
    depends_on "automake" => :build
    depends_on "libtool" => :build
    depends_on "pkg-config" => :build
--  depends_on "openssl"
++  depends_on "libressl"
++  depends_on "gnutls"
++  depends_on "nss"
++  depends_on "mbedtls" => :optional
  
    def install
      args = %W[
diff --cc Formula/pngquant.rb
index 713897a10949,713897a10949..c3b2ccf58c0c
--- a/Formula/pngquant.rb
+++ b/Formula/pngquant.rb
@@@ -16,6 -16,6 +16,7 @@@ class Pngquant < Formul
  
    depends_on "pkg-config" => :build
    depends_on "libpng"
++  depends_on "zlib"
    depends_on "little-cms2" => :optional
  
    needs :openmp if build.with? "openmp"
@@@ -23,12 -23,12 +24,11 @@@
    def install
      ENV.append_to_cflags "-DNDEBUG" # Turn off debug
  
--    args = ["--prefix=#{prefix}"]
++    args = ["--prefix=#{prefix}", "--enable-sse"]
      args << "--with-lcms2" if build.with? "little-cms2"
  
      if build.with? "openmp"
        args << "--with-openmp"
--      args << "--without-cocoa"
      end
  
      system "./configure", *args
diff --cc Formula/popt.rb
index 759750bb06ef,759750bb06ef..9e8e41b3226c
--- a/Formula/popt.rb
+++ b/Formula/popt.rb
@@@ -13,9 -13,9 +13,14 @@@ class Popt < Formul
      sha256 "6d95c3530a7bd4d7099d91f448669b53bb51a071c5e9a8b9915cdc750bd72aec" => :mountain_lion
    end
  
++  depends_on "libiconv"
++  depends_on "gettext"
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-nls",
++                          "--enable-largefile"
      system "make", "install"
    end
  end
diff --cc Formula/portaudio.rb
index 425b868ea277,425b868ea277..b128c1051e34
--- a/Formula/portaudio.rb
+++ b/Formula/portaudio.rb
@@@ -15,8 -15,8 +15,17 @@@ class Portaudio < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "jack" => :optional
  
    def install
++    args = %W[
++      --prefix=#{prefix}
++      --disable-debug
++      --disable-dependency-tracking
++      --enable-mac-universal=no
++      --enable-cxx
++    ]
++    args << "--with-jack" if build.with? "jack"
      system "./configure", "--prefix=#{prefix}",
                            "--disable-debug",
                            "--disable-dependency-tracking",
diff --cc Formula/postgresql.rb
index d057d18c67f0,d057d18c67f0..648955a3bc3f
--- a/Formula/postgresql.rb
+++ b/Formula/postgresql.rb
@@@ -20,9 -20,9 +20,15 @@@ class Postgresql < Formul
    deprecated_option "no-tcl" => "without-tcl"
    deprecated_option "enable-dtrace" => "with-dtrace"
  
--  depends_on "openssl"
++  depends_on "libressl"
    depends_on "readline"
--  depends_on "libxml2" if MacOS.version <= :leopard # Leopard libxml is too old
++  depends_on "gettext"
++  depends_on "libiconv"
++  depends_on "tcl-tk"
++  depends_on "libxml2"
++  depends_on "zlib"
++  depends_on "openldap"
++  depends_on "krb5"
  
    option "with-python", "Enable PL/Python2"
    depends_on :python => :optional
@@@ -42,8 -42,8 +48,8 @@@
      # avoid adding the SDK library directory to the linker search path
      ENV["XML2_CONFIG"] = "xml2-config --exec-prefix=/usr"
  
--    ENV.prepend "LDFLAGS", "-L#{Formula["openssl"].opt_lib} -L#{Formula["readline"].opt_lib}"
--    ENV.prepend "CPPFLAGS", "-I#{Formula["openssl"].opt_include} -I#{Formula["readline"].opt_include}"
++    ENV.prepend "LDFLAGS", "-L#{Formula["libressl"].opt_lib} -L#{Formula["readline"].opt_lib}"
++    ENV.prepend "CPPFLAGS", "-I#{Formula["libressl"].opt_include} -I#{Formula["readline"].opt_include}"
  
      args = %W[
        --disable-debug
@@@ -52,6 -52,6 +58,7 @@@
        --libdir=#{HOMEBREW_PREFIX}/lib
        --sysconfdir=#{etc}
        --docdir=#{doc}
++      --enable-nls
        --enable-thread-safety
        --with-bonjour
        --with-gssapi
@@@ -60,6 -60,6 +67,8 @@@
        --with-pam
        --with-libxml
        --with-libxslt
++      --with-tcl
++      --with-bsd-auto
      ]
  
      args << "--with-perl" if build.with? "perl"
@@@ -72,6 -72,6 +81,7 @@@
        which_python = which(build.with?("python") ? "python" : "python3")
      end
      ENV["PYTHON"] = which_python
++    ENV["PYTHONPATH"] = ""
  
      # The CLT is required to build Tcl support on 10.7 and 10.8 because
      # tclConfig.sh is not part of the SDK
diff --cc Formula/protobuf.rb
index 7b6d74bf73e5,7b6d74bf73e5..7331d904152c
--- a/Formula/protobuf.rb
+++ b/Formula/protobuf.rb
@@@ -21,8 -21,8 +21,9 @@@ class Protobuf < Formul
    depends_on "autoconf" => :build
    depends_on "automake" => :build
    depends_on "libtool" => :build
--  depends_on :python => :recommended if MacOS.version <= :snow_leopard
--  depends_on :python3 => :optional
++  depends_on "python" => :recommended
++  depends_on "python3" => :optional
++  depends_on "zlib"
  
    resource "appdirs" do
      url "https://pypi.python.org/packages/48/69/d87c60746b393309ca30761f8e2b49473d43450b150cb08f3c6df5c11be5/appdirs-1.4.3.tar.gz"
diff --cc Formula/pulseaudio.rb
index b5d9dc1b336e,b5d9dc1b336e..cd3e2c8de155
--- a/Formula/pulseaudio.rb
+++ b/Formula/pulseaudio.rb
@@@ -20,27 -20,27 +20,29 @@@ class Pulseaudio < Formul
      depends_on "gettext" => :build
    end
  
--  option "with-nls", "Build with native language support"
--
    deprecated_option "without-speex" => "without-speexdsp"
  
    depends_on "pkg-config" => :build
--
--  if build.with? "nls"
--    depends_on "intltool" => :build
--    depends_on "gettext" => :build
--  end
++  depends_on "intltool" => :build
++  depends_on "gettext" => :build
++  depends_on "check" => :build
++  depends_on "libiconv"
  
    depends_on "libtool" => :run
    depends_on "json-c"
    depends_on "libsndfile"
    depends_on "libsoxr"
--  depends_on "openssl"
--  depends_on "speexdsp" => :recommended
--  depends_on "glib" => :optional
--  depends_on "gconf" => :optional
--  depends_on "gtk+3" => :optional
--  depends_on "jack" => :optional
++  depends_on "libressl"
++  depends_on "speexdsp"
++  depends_on "dbus"
++  depends_on "orc"
++  depends_on "fftw"
++  depends_on 'libsoxr'
++  depends_on "gdbm"
++  depends_on "glib"
++  depends_on "gtk+3"
++  depends_on "gconf"
++  depends_on "jack"
  
    fails_with :clang do
      build 421
@@@ -52,15 -52,15 +54,19 @@@
        --disable-dependency-tracking
        --disable-silent-rules
        --prefix=#{prefix}
++      --enable-static
        --enable-coreaudio-output
--      --disable-neon-opt
        --with-mac-sysroot=#{MacOS.sdk_path}
        --with-mac-version-min=#{MacOS.version}
--      --disable-x11
++      --enable-x11
++      --enable-glib2
++      --enable-gtk3
++      --enable-gconf
++      --enable-jack
++      --enable-dbus
++      --enable-orc
      ]
  
--    args << "--disable-nls" if build.without? "nls"
--
      if build.head?
        # autogen.sh runs bootstrap.sh then ./configure
        system "./autogen.sh", *args
diff --cc Formula/pwntools.rb
index b5655a165611,b5655a165611..91cb745d565d
--- a/Formula/pwntools.rb
+++ b/Formula/pwntools.rb
@@@ -13,9 -13,9 +13,10 @@@ class Pwntools < Formul
      sha256 "45fcd4005b494018548351e882a1fe651ed35eabd5f0e5ee4db1f563016cabc2" => :yosemite
    end
  
--  depends_on :python if MacOS.version <= :snow_leopard
--  depends_on "openssl@1.1"
++  depends_on "python"
++  depends_on "libressl"
    depends_on "binutils" => :recommended
++  depends_on "pandoc"
  
    conflicts_with "moreutils", :because => "Both install `errno` binaries"
  
diff --cc Formula/py2cairo.rb
index 62965db81779,62965db81779..5bcbf49e457d
--- a/Formula/py2cairo.rb
+++ b/Formula/py2cairo.rb
@@@ -17,7 -17,7 +17,7 @@@ class Py2cairo < Formul
  
    depends_on "pkg-config" => :build
    depends_on "cairo"
--  depends_on :python if MacOS.version <= :snow_leopard
++  depends_on "python"
  
    def install
      ENV.refurbish_args
@@@ -31,7 -31,7 +31,7 @@@
      # Python extensions default to universal but cairo is not universal
      ENV["ARCHFLAGS"] = "-arch #{MacOS.preferred_arch}"
  
--    system "./waf", "configure", "--prefix=#{prefix}", "--nopyc", "--nopyo"
++    system "./waf", "configure", "--prefix=#{prefix}"
      system "./waf", "install"
  
      module_dir = lib/"python2.7/site-packages/cairo"
diff --cc Formula/py3cairo.rb
index 6f974868a2e8,6f974868a2e8..09c2567215e2
--- a/Formula/py3cairo.rb
+++ b/Formula/py3cairo.rb
@@@ -15,10 -15,10 +15,11 @@@ class Py3cairo < Formul
  
    depends_on "pkg-config" => :build
    depends_on "cairo"
--  depends_on :python3
++  depends_on "python3"
  
    def install
      ENV["PYTHON"] = "python3"
++    ENV["LINKFLAGS"] = "-undefined dynamic_lookup"
      system "./waf", "configure", "--prefix=#{prefix}"
      system "./waf", "build"
      system "./waf", "install"
diff --cc Formula/pygobject.rb
index e5abbf72765f,e5abbf72765f..ba3a34d3ff2d
--- a/Formula/pygobject.rb
+++ b/Formula/pygobject.rb
@@@ -16,6 -16,6 +16,7 @@@ class Pygobject < Formul
    depends_on "pkg-config" => :build
    depends_on "glib"
    depends_on :python
++  depends_on "libffi"
  
    # https://bugzilla.gnome.org/show_bug.cgi?id=668522
    patch do
@@@ -26,6 -26,6 +27,8 @@@
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
++                          "--enable-static",
++                          "--enable-cairo",
                            "--disable-introspection"
      system "make", "install"
      (lib/"python2.7/site-packages/pygtk.pth").append_lines <<-EOS.undent
diff --cc Formula/pypy.rb
index 024e715af1ab,024e715af1ab..9065b0426a23
--- a/Formula/pypy.rb
+++ b/Formula/pypy.rb
@@@ -24,7 -24,7 +24,7 @@@ class Pypy < Formul
    depends_on "pkg-config" => :build
    depends_on "gdbm" => :recommended
    depends_on "sqlite" => :recommended
--  depends_on "openssl"
++  depends_on "openssl@1.1"
  
    resource "bootstrap" do
      url "https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-osx64.tar.bz2"
diff --cc Formula/pypy3.rb
index 3fc5a731d916,3fc5a731d916..f24cd648d0d5
--- a/Formula/pypy3.rb
+++ b/Formula/pypy3.rb
@@@ -20,7 -20,7 +20,7 @@@ class Pypy3 < Formul
    depends_on "pkg-config" => :build
    depends_on "gdbm" => :recommended
    depends_on "sqlite" => :recommended
--  depends_on "openssl"
++  depends_on "openssl@1.1"
    depends_on "xz" => :recommended
  
    resource "bootstrap" do
diff --cc Formula/python.rb
index b6ad73f2349b,b6ad73f2349b..fcbb36034864
--- a/Formula/python.rb
+++ b/Formula/python.rb
@@@ -32,9 -32,9 +32,14 @@@ class Python < Formul
    depends_on "readline" => :recommended
    depends_on "sqlite" => :recommended
    depends_on "gdbm" => :recommended
--  depends_on "openssl"
++  depends_on "libressl"
    depends_on "tcl-tk" => :optional
    depends_on "berkeley-db@4" => :optional
++  depends_on :x11 if build.with?("tcl-tk") && Tab.for_name("tcl-tk").with?("x11")
++  depends_on "libffi"
++  depends_on "expat"
++  depends_on "mercurial" => :optional
++  depends_on "gettext" => :optional
  
    skip_clean "bin/pip", "bin/pip-2.7"
    skip_clean "bin/easy_install", "bin/easy_install-2.7"
@@@ -106,9 -106,9 +111,19 @@@
        --datadir=#{share}
        --enable-framework=#{frameworks}
        --without-ensurepip
++      --enable-ipv6
++      --enable-optimizations
++      --with-lto
++      --with-system-expat
++      --with-system-ffi
++      --with-signal-module
++      --with-threads
++      --with-doc-strings
++      --with-tsc
++      --with-pymalloc
      ]
  
--    args << "--without-gcc" if ENV.compiler == :clang
++    args << "--without-gcc" if (ENV.compiler == :clang || ENV.compiler == :llvm_clang)
  
      cflags   = []
      ldflags  = []
@@@ -134,7 -134,7 +149,7 @@@
      inreplace "setup.py" do |s|
        s.gsub! "do_readline = self.compiler.find_library_file(lib_dirs, 'readline')",
                "do_readline = '#{Formula["readline"].opt_lib}/libhistory.dylib'"
--      s.gsub! "/usr/local/ssl", Formula["openssl"].opt_prefix
++      s.gsub! "/usr/local/ssl", Formula["libressl"].opt_prefix
        s.gsub! "/usr/include/db4", Formula["berkeley-db@4"].opt_include
      end
  
@@@ -168,6 -168,6 +183,7 @@@
      args << "LDFLAGS=#{ldflags.join(" ")}" unless ldflags.empty?
      args << "CPPFLAGS=#{cppflags.join(" ")}" unless cppflags.empty?
  
++    raise "fix enable_optimization withval -> enableval"
      system "./configure", *args
  
      # HAVE_POLL is "broken" on macOS. See:
@@@ -261,8 -261,8 +277,8 @@@
      end
  
      # Help distutils find brewed stuff when building extensions
--    include_dirs = [HOMEBREW_PREFIX/"include", Formula["openssl"].opt_include]
--    library_dirs = [HOMEBREW_PREFIX/"lib", Formula["openssl"].opt_lib]
++    include_dirs = [HOMEBREW_PREFIX/"include", Formula["libressl"].opt_include]
++    library_dirs = [HOMEBREW_PREFIX/"lib", Formula["libressl"].opt_lib]
  
      if build.with? "sqlite"
        include_dirs << Formula["sqlite"].opt_include
diff --cc Formula/python3.rb
index 6c11da17da6e,6c11da17da6e..9927b8d2679a
--- a/Formula/python3.rb
+++ b/Formula/python3.rb
@@@ -23,10 -23,10 +23,15 @@@ class Python3 < Formul
    depends_on "readline" => :recommended
    depends_on "sqlite" => :recommended
    depends_on "gdbm" => :recommended
--  depends_on "openssl"
++  depends_on "libressl"
    depends_on "xz" => :recommended # for the lzma module added in 3.3
    depends_on "tcl-tk" => :optional
    depends_on "sphinx-doc" => [:build, :optional]
++  depends_on "expat"
++  depends_on "libffi"
++  depends_on "libmpdec"
++  depends_on "gettext" => :optional
++  depends_on "mercurial" => :optional
  
    skip_clean "bin/pip3", "bin/pip-3.4", "bin/pip-3.5", "bin/pip-3.6"
    skip_clean "bin/easy_install3", "bin/easy_install-3.4", "bin/easy_install-3.5", "bin/easy_install-3.6"
@@@ -86,9 -86,9 +91,18 @@@
        --enable-framework=#{frameworks}
        --without-ensurepip
        --with-dtrace
++      --enable-ipv6
++      --enable-optimizations
++      --enable-loadable-sqlite-extensions
++      --with-lto
++      --with-system-expat
++      --with-system-ffi
++      --with-system-libmpdec
++      --with-doc-strings
++      --with-pymalloc
      ]
  
--    args << "--without-gcc" if ENV.compiler == :clang
++    args << "--without-gcc" if (ENV.compiler == :clang || ENV.compiler == :llvm_clang)
      args << "--enable-loadable-sqlite-extensions" if build.with?("sqlite")
  
      cflags   = []
@@@ -114,7 -114,7 +128,7 @@@
      inreplace "setup.py" do |s|
        s.gsub! "do_readline = self.compiler.find_library_file(lib_dirs, 'readline')",
                "do_readline = '#{Formula["readline"].opt_lib}/libhistory.dylib'"
--      s.gsub! "/usr/local/ssl", Formula["openssl"].opt_prefix
++      s.gsub! "/usr/local/ssl", Formula["libressl"].opt_prefix
      end
  
      if build.with? "sqlite"
@@@ -143,6 -143,6 +157,7 @@@
      args << "LDFLAGS=#{ldflags.join(" ")}" unless ldflags.empty?
      args << "CPPFLAGS=#{cppflags.join(" ")}" unless cppflags.empty?
  
++    raise "fix enable_optimizations withval -> enableval"
      system "./configure", *args
  
      system "make"
@@@ -245,8 -245,8 +260,8 @@@
      end
  
      # Help distutils find brewed stuff when building extensions
--    include_dirs = [HOMEBREW_PREFIX/"include", Formula["openssl"].opt_include]
--    library_dirs = [HOMEBREW_PREFIX/"lib", Formula["openssl"].opt_lib]
++    include_dirs = [HOMEBREW_PREFIX/"include", Formula["libressl"].opt_include]
++    library_dirs = [HOMEBREW_PREFIX/"lib", Formula["libressl"].opt_lib]
  
      if build.with? "sqlite"
        include_dirs << Formula["sqlite"].opt_include
diff --cc Formula/qemu.rb
index f5cbd26ebd06,f5cbd26ebd06..df728dacbd14
--- a/Formula/qemu.rb
+++ b/Formula/qemu.rb
@@@ -20,8 -20,8 +20,6 @@@ class Qemu < Formul
    depends_on "glib"
    depends_on "pixman"
    depends_on "vde" => :optional
--  depends_on "sdl2" => :optional
--  depends_on "gtk+" => :optional
    depends_on "libssh2" => :optional
  
    deprecated_option "with-sdl" => "with-sdl2"
@@@ -59,16 -59,16 +57,9 @@@
        --disable-guest-agent
      ]
  
--    # Cocoa and SDL2/GTK+ UIs cannot both be enabled at once.
--    if build.with?("sdl2") || build.with?("gtk+")
--      args << "--disable-cocoa"
--    else
        args << "--enable-cocoa"
--    end
  
      args << (build.with?("vde") ? "--enable-vde" : "--disable-vde")
--    args << (build.with?("sdl2") ? "--enable-sdl" : "--disable-sdl")
--    args << (build.with?("gtk+") ? "--enable-gtk" : "--disable-gtk")
      args << (build.with?("libssh2") ? "--enable-libssh2" : "--disable-libssh2")
  
      system "./configure", *args
diff --cc Formula/qt.rb
index 7e97cdb052a9,7e97cdb052a9..966edd1cda35
--- a/Formula/qt.rb
+++ b/Formula/qt.rb
@@@ -33,15 -33,15 +33,38 @@@ class Qt < Formul
    option "with-examples", "Build examples"
    option "with-qtwebkit", "Build with QtWebkit module"
  
--  # OS X 10.7 Lion is still supported in Qt 5.5, but is no longer a reference
--  # configuration and thus untested in practice. Builds on OS X 10.7 have been
--  # reported to fail: <https://github.com/Homebrew/homebrew/issues/45284>.
--  depends_on :macos => :mountain_lion
--
    depends_on "pkg-config" => :build
    depends_on :xcode => :build
    depends_on :mysql => :optional
    depends_on :postgresql => :optional
++  depends_on "icu4c"
++  depends_on "zlib"
++  depends_on "libiconv"
++  depends_on "libproxy"
++  depends_on "dbus"
++  depends_on "jpeg"
++  depends_on "libpng"
++  depends_on "libxkbcommon"
++  depends_on "freetype"
++  depends_on "fontconfig"
++  depends_on "double-conversion"
++  depends_on "pcre"
++  depends_on "harfbuzz"
++  depends_on "glib"
++  depends_on "sqlite"
++  depends_on "libressl"
++  depends_on "sdl2"
++  depends_on "assimp"
++  depends_on "pulseaudio"
++  depends_on "android-sdk"
++  depends_on "android-ndk"
++  depends_on "pcre2"
++  # depends_on "gtk+3"
++  depends_on "icoutils"
++  depends_on :x11
++  depends_on "gstreamer"
++  depends_on "gst-plugins-base"
++
  
    # http://lists.qt-project.org/pipermail/development/2016-March/025358.html
    resource "qt-webkit" do
@@@ -63,21 -63,21 +86,58 @@@
    end
  
    def install
++    raise "move e2fsprogs lib/include directories"
++    ENV.cxx11
++
++    # Prevent Qt from hardcoding compilers/other tools
++    inreplace "qtbase/configure", "echo \"$var=$val\"", "echo \"$line\""
++    inreplace "qtbase/mkspecs/features/mac/sdk.prf", "isEmpty(sysrooted)", "!isEmpty(sysrooted)"
++
      args = %W[
        -verbose
        -prefix #{prefix}
        -release
++      -ltcg
++      -static
++      -shared
++      -framework
++      -android-sdk #{Formula["android-sdk"].opt_prefix}
++      -android-ndk #{Formula["android-ndk"].opt_prefix}
        -opensource -confirm-license
        -system-zlib
--      -qt-libpng
--      -qt-libjpeg
--      -qt-freetype
--      -qt-pcre
++      -system-doubleconversion
++      -system-libpng
++      -system-libjpeg
++      -system-freetype
++      -system-xcb
++      -system-xkbcommon
++      -system-pcre
++      -system-harfbuzz
++      -system-sqlite
++      -cups
++      -icu
++      -securetransport
++      -libproxy
        -nomake tests
        -no-rpath
        -pkg-config
        -dbus-runtime
++      -xcb-xlib
++      -system-xkbcommon-x11
++      -gif
++      -ico
      ]
++      # Requires GTK+3 to be compiled with X11, and GTK+3 cannot have both X11
++      # and Quartz backends enabled at the same time
++      # -gtk
++    # Doesn't work?
++    # args << "-iconv"
++
++      # -ssl
++      # -openssl-runtime
++
++      # -system-pcre2 (only for newer versions of Qt)
++      # -fontconfig (Considered Linux-only? https://bugreports.qt.io/browse/QTBUG-57436)
  
      args << "-nomake" << "examples" if build.without? "examples"
  
diff --cc Formula/rakudo-star.rb
index 29d2dd58eb2c,29d2dd58eb2c..509be32ba072
--- a/Formula/rakudo-star.rb
+++ b/Formula/rakudo-star.rb
@@@ -14,8 -14,8 +14,9 @@@ class RakudoStar < Formul
  
    depends_on "gmp" => :optional
    depends_on "icu4c" => :optional
--  depends_on "pcre" => :optional
++  depends_on "pcre2" => :optional
    depends_on "libffi"
++  depends_on :java if build.with? "jvm"
  
    conflicts_with "parrot"
  
diff --cc Formula/rtmpdump.rb
index 1f40d44d9d18,1f40d44d9d18..23859ffe30cb
--- a/Formula/rtmpdump.rb
+++ b/Formula/rtmpdump.rb
@@@ -16,7 -16,7 +16,7 @@@ class Rtmpdump < Formul
      sha256 "f4c8dbdf3f8a04626a7975abf96eccd5e494a3f6a795b2035c6d418bfbe8079d" => :mavericks
    end
  
--  depends_on "openssl"
++  depends_on "gnutls"
  
    conflicts_with "flvstreamer", :because => "both install 'rtmpsrv', 'rtmpsuck' and 'streams' binary"
  
@@@ -29,6 -29,6 +29,7 @@@
                     "SYS=darwin",
                     "prefix=#{prefix}",
                     "sbindir=#{bin}",
++                   "CRYPTO=GNUTLS",
                     "install"
    end
  
diff --cc Formula/ruby.rb
index aa363dd4eeb2,aa363dd4eeb2..8a86e971070f
--- a/Formula/ruby.rb
+++ b/Formula/ruby.rb
@@@ -22,10 -22,10 +22,13 @@@ class Ruby < Formul
    depends_on "pkg-config" => :build
    depends_on "readline" => :recommended
    depends_on "gdbm" => :optional
--  depends_on "gmp" => :optional
++  depends_on "gmp"
++  depends_on "doxygen" => :build
++  depends_on "graphviz" => :build
    depends_on "libffi" => :optional
    depends_on "libyaml"
--  depends_on "openssl"
++  depends_on "libressl"
++  depends_on "jemalloc"
  
    def install
      # otherwise `gem` command breaks
@@@ -37,6 -37,6 +40,7 @@@
        --prefix=#{prefix}
        --enable-shared
        --disable-silent-rules
++      --with-gemalloc
        --with-sitedir=#{HOMEBREW_PREFIX}/lib/ruby/site_ruby
        --with-vendordir=#{HOMEBREW_PREFIX}/lib/ruby/vendor_ruby
      ]
@@@ -44,11 -44,11 +48,10 @@@
      args << "--program-suffix=#{program_suffix}" if build.with? "suffix"
      args << "--disable-install-doc" if build.without? "doc"
      args << "--disable-dtrace" unless MacOS::CLT.installed?
--    args << "--without-gmp" if build.without? "gmp"
  
      paths = [
        Formula["libyaml"].opt_prefix,
--      Formula["openssl"].opt_prefix,
++      Formula["libressl"].opt_prefix,
      ]
  
      %w[readline gdbm gmp libffi].each do |dep|
diff --cc Formula/rzip.rb
index 66f776952d7b,66f776952d7b..e3f5778d9215
--- a/Formula/rzip.rb
+++ b/Formula/rzip.rb
@@@ -12,9 -12,9 +12,13 @@@ class Rzip < Formul
      sha256 "f86aa1c100b7144b04c43a06b475e11f18d88982ed0d5ea90b1da0c3cc813720" => :mavericks
    end
  
++  depends_on :x11
++  depends_on "bzip2"
++
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
++                          "--enable-largefile",
                            "--prefix=#{prefix}"
  
      system "make", "install", "INSTALL_MAN=#{man}"
diff --cc Formula/sane-backends.rb
index 2d181cc99f28,2d181cc99f28..e04579e53e9e
--- a/Formula/sane-backends.rb
+++ b/Formula/sane-backends.rb
@@@ -28,7 -28,7 +28,7 @@@ class SaneBackends < Formul
    depends_on "jpeg"
    depends_on "libtiff"
    depends_on "libusb-compat"
--  depends_on "openssl"
++  depends_on "openssl@1.1"
    depends_on "net-snmp"
  
    def install
diff --cc Formula/scipy.rb
index 36d1536221a3,36d1536221a3..845a258235be
--- a/Formula/scipy.rb
+++ b/Formula/scipy.rb
@@@ -14,8 -14,8 +14,8 @@@ class Scipy < Formul
    option "without-python", "Build without python2 support"
  
    depends_on "swig" => :build
--  depends_on :python => :recommended if MacOS.version <= :snow_leopard
--  depends_on :python3 => :optional
++  depends_on "python"
++  depends_on "python3"
    depends_on :fortran
  
    numpy_options = []
diff --cc Formula/sdl2.rb
index bca60d3c56c1,bca60d3c56c1..9e0c30792c56
--- a/Formula/sdl2.rb
+++ b/Formula/sdl2.rb
@@@ -22,6 -22,6 +22,10 @@@ class Sdl2 < Formul
  
    option "with-test", "Compile and install the tests"
  
++  depends_on "libiconv"
++  depends_on "pulseaudio"
++  depends_on :x11
++
    # https://github.com/mistydemeo/tigerbrew/issues/361
    if MacOS.version <= :snow_leopard
      patch do
@@@ -38,13 -38,13 +42,87 @@@
  
      system "./autogen.sh" if build.head? || build.devel?
  
--    args = %W[--prefix=#{prefix}]
++    args = %W[
++      --prefix=#{prefix}
++      --enable-libc
++      --enable-gcc-atomics
++      --enable-atomic
++      --enable-audio
++      --enable-video
++      --enable-render
++      --enable-events
++      --enable-joystick
++      --enable-haptic
++      --enable-power
++      --enable-filesystem
++      --enable-threads
++      --enable-timers
++      --enable-file
++      --enable-loadso
++      --enable-cpuinfo
++      --enable-assembly
++      --enable-ssemath
++      --enable-mmx
++      --enable-3dnow
++      --enable-sse
++      --enable-sse2
++      --enable-altivec
++      --enable-oss
++      --enable-alsa
++      --enable-alsatest
++      --enable-alsa-shared
++      --enable-esd
++      --enable-esdtest
++      --enable-esd-shared
++      --enable-pulseaudio
++      --enable-pulseaudio-shared
++      --enable-arts
++      --enable-arts-shared
++      --enable-nas
++      --enable-nas-shared
++      --enable-sndio
++      --enable-sndio-shared
++      --enable-diskaudio
++      --enable-dummyaudio
++      --enable-video-wayland
++      --enable-video-wayland-qt-touch
++      --enable-wayland-shared
++      --enable-video-mir
++      --enable-mir-shared
++      --enable-video-x11
++      --enable-x11-shared
++      --enable-video-x11-xcursor
++      --enable-video-x11-xdbe
++      --enable-video-x11-xinerama
++      --enable-video-x11-xinput
++      --enable-video-x11-xrandr
++      --enable-video-x11-scrnsaver
++      --enable-video-x11-xshape
++      --enable-video-x11-vm
++      --enable-video-vivante
++      --enable-video-cocoa
++      --enable-video-directfb
++      --enable-fusionsound
++      --enable-fusionsound-shared
++      --enable-video-dummy
++      --enable-video-opengl
++      --enable-video-opengles
++      --enable-video-opengles1
++      --enable-video-opengles2
++      --enable-libudev
++      --enable-dbus
++      --enable-ime
++      --enable-ibus
++      --enable-fcitx
++      --enable-input-tslib
++      --enable-pthreads
++      --enable-pthread-sem
++      --enable-directx
++      --enable-sdl-dlopen
++      --enable-render-d3d
++      --with-x
++    ]
  
--    # LLVM-based compilers choke on the assembly code packaged with SDL.
--    if ENV.compiler == :clang && DevelopmentTools.clang_build_version < 421
--      args << "--disable-assembly"
--    end
--    args << "--without-x"
      args << "--disable-haptic" << "--disable-joystick" if MacOS.version <= :snow_leopard
  
      system "./configure", *args
@@@ -62,7 -62,7 +140,7 @@@
                       testoverlay2.c testsprite2.c],
                    /"(\w+\.(?:bmp|dat|wav))"/,
                    "\"#{pkgshare}/test_extras/\\1\""
--        system "./configure", "--without-x"
++        system "./configure"
          system "make"
          # Tests don't have a "make install" target
          (pkgshare/"tests").install %w[checkkeys controllermap loopwave loopwavequeue testaudioinfo
diff --cc Formula/slurm.rb
index 811799c6e219,811799c6e219..7c1923aaa5e8
--- a/Formula/slurm.rb
+++ b/Formula/slurm.rb
@@@ -13,6 -13,6 +13,7 @@@ class Slurm < Formul
    end
  
    depends_on "cmake" => :build
++  depends_on "ncurses"
  
    def install
      system "cmake", ".", *std_cmake_args
diff --cc Formula/snappy.rb
index 953ff38a6d2a,953ff38a6d2a..6bf9a02a48f0
--- a/Formula/snappy.rb
+++ b/Formula/snappy.rb
@@@ -18,6 -18,6 +18,12 @@@ class Snappy < Formul
    end
  
    depends_on "pkg-config" => :build
++  depends_on "gflags"
++  depends_on "zlib"
++  depends_on "lzo"
++  depends_on "liblzf"
++  # depends_on "fastlz"?
++  # depends_on "quicklz"?
  
    def install
      ENV.deparallelize if build.stable?
diff --cc Formula/source-highlight.rb
index 582549afc69d,582549afc69d..7761712f6d4d
--- a/Formula/source-highlight.rb
+++ b/Formula/source-highlight.rb
@@@ -14,6 -14,6 +14,9 @@@ class SourceHighlight < Formul
    end
  
    depends_on "boost"
++  depends_on "help2man" => :build
++  depends_on "doxygen" => :build
++  depends_on "universal-ctags" => :build
  
    def install
      system "./configure", "--disable-dependency-tracking",
diff --cc Formula/spdylay.rb
index aee173df3580,aee173df3580..57324a2fe515
--- a/Formula/spdylay.rb
+++ b/Formula/spdylay.rb
@@@ -17,8 -17,8 +17,10 @@@ class Spdylay < Formul
    depends_on "libtool" => :build
    depends_on "pkg-config" => :build
    depends_on "libevent" => :recommended
--  depends_on "libxml2" if MacOS.version <= :lion
--  depends_on "openssl"
++  depends_on "cunit" => :build
++  depends_on "libxml2"
++  depends_on "zlib"
++  depends_on "libressl"
  
    def install
      if MacOS.version == "10.11" && MacOS::Xcode.installed? && MacOS::Xcode.version >= "8.0"
@@@ -31,7 -31,7 +33,8 @@@
  
      system "autoreconf", "-fiv"
      system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--with-libxml2"
      system "make", "install"
    end
  
diff --cc Formula/speexdsp.rb
index 7f7c51639035,7f7c51639035..bfff02f3b0ca
--- a/Formula/speexdsp.rb
+++ b/Formula/speexdsp.rb
@@@ -15,12 -15,12 +15,17 @@@ class Speexdsp < Formul
    depends_on "automake" => :build
    depends_on "libtool" => :build
    depends_on "pkg-config" => :build
++  depends_on "fftw"
  
    def install
++    inreplace "libspeexdsp/Makefile.am", "AGE@", "AGE@ @FFT_LIBS@"
      system "./autogen.sh"
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-sse",
++                          "--enable-resample-full-sinc-table",
++                          "--with-fft=gpl-fftw3"
      system "make"
      system "make", "install"
    end
diff --cc Formula/sphinx.rb
index 57aa19ebf600,57aa19ebf600..deb4e743c65a
--- a/Formula/sphinx.rb
+++ b/Formula/sphinx.rb
@@@ -24,6 -24,6 +24,8 @@@ class Sphinx < Formul
    depends_on :mysql => :optional
    depends_on :postgresql => :optional
    depends_on "openssl" if build.with? "mysql"
++  depends_on "expat" => :build
++  depends_on "unixodbc" => :build
  
    resource "stemmer" do
      url "https://github.com/snowballstem/snowball.git",
@@@ -57,6 -57,6 +59,9 @@@
        --disable-dependency-tracking
        --localstatedir=#{var}
        --with-libstemmer
++      --with-libexpat
++      --with-iconv
++      --with-unixodbc
      ]
  
      args << "--enable-id64" if build.with? "id64"
diff --cc Formula/sqlite.rb
index 38da330de88a,38da330de88a..0a10fd9c5413
--- a/Formula/sqlite.rb
+++ b/Formula/sqlite.rb
@@@ -67,6 -67,6 +67,7 @@@ class Sqlite < Formul
      args = [
        "--prefix=#{prefix}",
        "--disable-dependency-tracking",
++      "--enable-largefile",
        "--enable-dynamic-extensions",
      ]
      args << "--enable-readline" << "--disable-editline" if build.with? "readline"
diff --cc Formula/subversion.rb
index 4b44097f9f1c,4b44097f9f1c..d95a80f5fe99
--- a/Formula/subversion.rb
+++ b/Formula/subversion.rb
@@@ -19,11 -19,11 +19,10 @@@ class Subversion < Formul
    option "with-java", "Build Java bindings"
    option "with-perl", "Build Perl bindings"
    option "with-ruby", "Build Ruby bindings"
--  option "with-gpg-agent", "Build with support for GPG Agent"
++  option "with-gnupg", "Build with support for GPG"
  
    depends_on "pkg-config" => :build
--  depends_on "apr-util"
--  depends_on "apr"
++  depends_on "apr" => ["head"]
  
    # Always build against Homebrew versions instead of system versions for consistency.
    depends_on "sqlite"
@@@ -34,16 -34,16 +33,31 @@@
  
    # For Serf
    depends_on "scons" => :build
--  depends_on "openssl"
++  depends_on "libressl"
  
    # Other optional dependencies
--  depends_on "gpg-agent" => :optional
++  depends_on "gnupg" => :optional
    depends_on :java => :optional
  
--  resource "serf" do
--    url "https://www.apache.org/dyn/closer.cgi?path=serf/serf-1.3.9.tar.bz2"
--    mirror "https://archive.apache.org/dist/serf/serf-1.3.9.tar.bz2"
--    sha256 "549c2d21c577a8a9c0450facb5cca809f26591f048e466552240947bdf7a87cc"
++  depends_on "nasm" => :build
++  depends_on "libmagic"
++  depends_on "zlib"
++  depends_on "berkeley-db4"
++  depends_on "ruby"
++
++  head do
++    url "http://svn.apache.org/repos/asf/subversion/trunk", :using => :svn
++    resource "serf" do
++      url "http://svn.apache.org/repos/asf/serf/trunk", :using => :svn
++    end
++  end
++
++  stable do
++    resource "serf" do
++      url "https://www.apache.org/dyn/closer.cgi?path=serf/serf-1.3.9.tar.bz2"
++      mirror "https://archive.apache.org/dist/serf/serf-1.3.9.tar.bz2"
++      sha256 "549c2d21c577a8a9c0450facb5cca809f26591f048e466552240947bdf7a87cc"
++    end
    end
  
    # Fix #23993 by stripping flags swig can't handle from SWIG_CPPFLAGS
@@@ -69,10 -69,10 +83,12 @@@
        args = %W[
          PREFIX=#{serf_prefix} GSSAPI=/usr CC=#{ENV.cc}
          CFLAGS=#{ENV.cflags} LINKFLAGS=#{ENV.ldflags}
--        OPENSSL=#{Formula["openssl"].opt_prefix}
++        OPENSSL=#{Formula["openssl@1.1"].opt_prefix}
          APR=#{Formula["apr"].opt_prefix}
--        APU=#{Formula["apr-util"].opt_prefix}
        ]
++      inreplace "buckets/ssl_buckets.c", "#ifdef TLS_ST_SW_HELLO_REQ", "#if 1"
++      inreplace "buckets/ssl_buckets.c", "#ifdef TLS_ST_OK", "#if 1"
++      inreplace "buckets/ssl_buckets.c", "#ifdef SERF_HAVE_OPENSSL_MALLOC_INIT", "#if 1"
        scons(*args)
        scons "install"
      end
@@@ -103,7 -103,7 +119,7 @@@
      ]
  
      args << "--enable-javahl" << "--without-jikes" if build.with? "java"
--    args << "--without-gpg-agent" if build.without? "gpg-agent"
++    args << "--without-gpg-agent" if build.without? "gnupg21"
  
      if build.with? "ruby"
        args << "--with-ruby-sitedir=#{lib}/ruby"
@@@ -119,6 -119,6 +135,7 @@@
                "toolsdir = @bindir@/svn-tools",
                "toolsdir = @libexecdir@/svn-tools"
  
++    system "./autogen.sh"
      system "./configure", *args
      system "make"
      system "make", "install"
@@@ -215,17 -215,17 +232,17 @@@ en
  __END__
  diff --git a/configure b/configure
  index 445251b..6ff4332 100755
----- a/configure
--+++ b/configure
--@@ -26153,6 +26153,8 @@ fi
++--- a/configure.ac
+++++ b/configure.ac
++@@ -1530,4 +1530,6 @@ fi
++# Need to strip '-no-cpp-precomp' from CPPFLAGS for SWIG as well.
   SWIG_CPPFLAGS="$CPPFLAGS"
-- 
--   SWIG_CPPFLAGS=`echo "$SWIG_CPPFLAGS" | $SED -e 's/-no-cpp-precomp //'`
--+  SWIG_CPPFLAGS=`echo "$SWIG_CPPFLAGS" | $SED -e 's/-F\/[^ ]* //'`
--+  SWIG_CPPFLAGS=`echo "$SWIG_CPPFLAGS" | $SED -e 's/-isystem\/[^ ]* //'`
-- 
-- 
--   SWIG_CPPFLAGS=`echo "$SWIG_CPPFLAGS" | $SED -e 's/-Wdate-time //'`
++ SVN_STRIP_FLAG(SWIG_CPPFLAGS, [-no-cpp-precomp ])
+++SVN_STRIP_FLAG(SWIG_CPPFLAGS, [-F\/@<:@^ @:>@* ])
+++SVN_STRIP_FLAG(SWIG_CPPFLAGS, [-isystem\/@<:@^ @:>@* ])
++ SVN_STRIP_FLAG(SWIG_CPPFLAGS, [-Wdate-time ])
++ AC_SUBST([SWIG_CPPFLAGS])
++
  diff --git a/subversion/bindings/swig/perl/native/Makefile.PL.in b/subversion/bindings/swig/perl/native/Makefile.PL.in
  index a60430b..bd9b017 100644
  --- a/subversion/bindings/swig/perl/native/Makefile.PL.in
diff --cc Formula/swig.rb
index 1b7f7eb7e565,1b7f7eb7e565..615ddb5bb9d1
--- a/Formula/swig.rb
+++ b/Formula/swig.rb
@@@ -10,11 -10,11 +10,47 @@@ class Swig < Formul
      sha256 "3443dbf17f78be0cecb5419772c71bb418caa91763590072224c196a57317717" => :yosemite
    end
  
++  depends_on "pkg-config" => :build
    depends_on "pcre"
++  depends_on "boost"
++  depends_on "tcl-tk"
++  depends_on "python"
++  depends_on "python3"
++  depends_on "perl"
++  depends_on "octave" => :optional
++  depends_on :java
++  depends_on "node" => :optional
++  depends_on "v8" => :optional
++  depends_on "android-sdk"
++  depends_on "android-ndk"
++  depends_on "ant"
++  depends_on "guile" => :optional
++  depends_on "minimal-racket" => :optional
++  depends_on "ruby" => :optional
++  depends_on "php71" => :optional
++  depends_on "ocaml" => :optional
++  depends_on "pike" => :optional
++  depends_on "chicken" => :optional
++  depends_on "mono" => :optional
++  depends_on "lua@5.3" => :optional
++  depends_on "gcc" # with go and java?
++  depends_on "r" => :optional
++  depends_on "go" => :optional
++  depends_on "clisp" => :optional
++  depends_on "dmd" => :optional
++  depends_on "zlib"
++  needs :cxx11
  
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-cpp11-testing
++      --with-pcre
++      --with-boost
++      --with-alllang
++    ]
++    system "./configure", *args
      system "make"
      system "make", "install"
    end
diff --cc Formula/szip.rb
index f4af73bffe74,f4af73bffe74..4cbe0a6e464e
--- a/Formula/szip.rb
+++ b/Formula/szip.rb
@@@ -13,6 -13,6 +13,8 @@@ class Szip < Formul
      sha256 "df5cfb198d5fbdc45bf9e386ffcf25535b995ca32477afe03ca2d277443ef022" => :mavericks
    end
  
++  depends_on :fortran
++
    def install
      system "./configure", "--disable-debug", "--disable-dependency-tracking",
                            "--prefix=#{prefix}"
diff --cc Formula/tbb.rb
index 2ea2b15fa327,2ea2b15fa327..da6be5d4d489
--- a/Formula/tbb.rb
+++ b/Formula/tbb.rb
@@@ -21,12 -21,12 +21,12 @@@ class Tbb < Formul
    depends_on "swig" => :build
  
    def install
--    compiler = ENV.compiler == :clang ? "clang" : "gcc"
++    compiler = (ENV.compiler == :llvm_clang || ENV.compiler == :clang) ? "clang" : "gcc"
      args = %W[tbb_build_prefix=BUILDPREFIX compiler=#{compiler}]
  
      if build.cxx11?
        ENV.cxx11
--      args << "cpp0x=1" << "stdlib=libc++"
++      args << "stdver=c++1z" << "stdlib=libc++"
      end
  
      system "make", *args
diff --cc Formula/testdisk.rb
index 0bbb9881b12f,0bbb9881b12f..cf623cb416fa
--- a/Formula/testdisk.rb
+++ b/Formula/testdisk.rb
@@@ -13,11 -13,11 +13,33 @@@ class Testdisk < Formul
      sha256 "d3e8a600a135807b630a4d649c052dc6065270910bd96f6b1f27265251787331" => :mavericks
    end
  
++  depends_on "qt" => :optional
++  depends_on "ncurses"
++  depends_on "jpeg"
++  depends_on "ntfs-3g"
++  depends_on "libewf"
++  depends_on "libiconv"
++  depends_on "zlib"
++  depends_on "e2fsprogs"
++
    def install
--    system "./configure", "--disable-debug",
--                          "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --prefix=#{prefix}
++      --enable-ncmouse
++      --with-ncurses
++      --with-ext2fs
++      --with-com_err
++      --with-jpeg
++      --with-ntfs3g
++      --with-iconv
++      --with-zlib
++      --with-uuid
++    ]
++    args << "--enable-qt" if build.with? "qt"
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/texi2html.rb
index bba5d5a6f9c9,bba5d5a6f9c9..62eb45a66ec1
--- a/Formula/texi2html.rb
+++ b/Formula/texi2html.rb
@@@ -15,6 -15,6 +15,7 @@@ class Texi2html < Formul
    keg_only :provided_pre_mountain_lion
  
    depends_on "gettext"
++  depends_on "libiconv"
  
    def install
      system "./configure", "--disable-dependency-tracking", "--prefix=#{prefix}",
diff --cc Formula/texinfo.rb
index 86aa62fdd6f2,86aa62fdd6f2..a7de37f3e2ea
--- a/Formula/texinfo.rb
+++ b/Formula/texinfo.rb
@@@ -17,10 -17,10 +17,21 @@@ class Texinfo < Formul
      of these files.
    EOS
  
++  depends_on "libiconv" => :optional
++  depends_on "gettext"
++
    def install
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-install-warnings",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-dependency-tracking
++      --disable-install-warnings
++      --enable-threads=posix
++      --with-libintl-prefix=#{Formula["gettext"].prefix}
++      --enable-nls
++      --enable-perl-xs
++      --prefix=#{prefix}
++    ]
++    args << "--with-libiconv-prefix=#{Formula["libiconv"].prefix}" if build.with? "libiconv"
++    system "./configure", *args
      system "make", "install"
      doc.install Dir["doc/refcard/txirefcard*"]
    end
diff --cc Formula/theora.rb
index 4b1d0b05c1be,4b1d0b05c1be..5d27f105ac1d
--- a/Formula/theora.rb
+++ b/Formula/theora.rb
@@@ -28,8 -28,8 +28,13 @@@ class Theora < Formul
  
    depends_on "pkg-config" => :build
    depends_on "libtool" => :build
++  depends_on "doxygen" => :build
++  depends_on :tex => :build
++  depends_on "sdl2"
    depends_on "libogg"
    depends_on "libvorbis"
++  depends_on "cairo"
++  depends_on "libpng"
  
    def install
      cp Dir["#{Formula["libtool"].opt_share}/libtool/*/config.{guess,sub}"], buildpath
diff --cc Formula/tmux.rb
index 902d5be7c75c,902d5be7c75c..328b70d9eda6
--- a/Formula/tmux.rb
+++ b/Formula/tmux.rb
@@@ -23,6 -23,6 +23,7 @@@ class Tmux < Formul
    depends_on "pkg-config" => :build
    depends_on "libevent"
    depends_on "utf8proc" => :optional
++  depends_on "ncurses"
  
    resource "completion" do
      url "https://raw.githubusercontent.com/imomaliev/tmux-bash-completion/homebrew_1.0.0/completions/tmux"
@@@ -33,7 -33,7 +34,7 @@@
      system "sh", "autogen.sh" if build.head?
  
      args = %W[
--      --disable-Dependency-tracking
++      --disable-dependency-tracking
        --prefix=#{prefix}
        --sysconfdir=#{etc}
      ]
diff --cc Formula/ucl.rb
index d9948bd7a5ce,d9948bd7a5ce..da4faefb70b9
--- a/Formula/ucl.rb
+++ b/Formula/ucl.rb
@@@ -13,10 -13,10 +13,13 @@@ class Ucl < Formul
      sha256 "4190f1602c52b934a93581741fcccba8dad4e8dc4f478342d71b1b564cd62834" => :mountain_lion
    end
  
++  depends_on :fortran
++
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-shared"
      system "make", "install"
    end
  
diff --cc Formula/unbound.rb
index 1ff28dd33be2,1ff28dd33be2..27ba506e8a51
--- a/Formula/unbound.rb
+++ b/Formula/unbound.rb
@@@ -11,29 -11,29 +11,49 @@@ class Unbound < Formul
      sha256 "88f88dcf06ce464bec1926ed7ba2fda7849b3ff4116c89ac2b69066a0ebfb6d9" => :yosemite
    end
  
--  depends_on "openssl"
++  depends_on "libressl"
    depends_on "libevent"
++  depends_on "python"
++  depends_on "swig"
++  depends_on "expat"
  
--  depends_on :python => :optional
--  depends_on "swig" if build.with?("python")
++  # Alternatives to openssl?
++  # depends_on "nettle"
++  # depends_on "nss"
++
++  depends_on "protobuf-c"
++  depends_on 'fstrm'
  
    def install
      args = %W[
++      --enable-flto
++      --enable-dnstap
++      --enable-tfo-client
++      --enable-tfo-server
++      --with-pthreads
        --prefix=#{prefix}
        --sysconfdir=#{etc}
        --with-libevent=#{Formula["libevent"].opt_prefix}
--      --with-ssl=#{Formula["openssl"].opt_prefix}
++      --with-ssl=#{Formula["libressl"].opt_prefix}
++      --with-libexpat=#{Formula["expat"].opt_prefix}
++      --with-protobuf-c=#{Formula["protobuf-c"].opt_prefix}
++      --with-libfstrm=#{Formula["fstrm"].opt_prefix}
      ]
++      # Requires htobe64 and be64toh?
++      # --enable-cachedb
++      #
++      # Alternatives to openssl?
++      # --with-nss=#{Formula["nss"].opt_prefix}
++      # --with-nettle=#{Formula["nettle"].opt_prefix}
  
--    if build.with? "python"
--      ENV.prepend "LDFLAGS", `python-config --ldflags`.chomp
++    ENV.prepend "LDFLAGS", `python-config --ldflags`.chomp
++    # ENV.prepend "CFLAGS", "-I#{Formula["nspr"].include}/nspr"
++    # ENV.prepend "CFLAGS", "-I#{Formula["nss"].include}/nss"
  
--      args << "--with-pyunbound"
--      args << "--with-pythonmodule"
--      args << "PYTHON_SITE_PKG=#{lib}/python2.7/site-packages"
--    end
++    args << "--with-pyunbound"
++    args << "--with-pythonmodule"
++    args << "PYTHON_SITE_PKG=#{lib}/python2.7/site-packages"
  
--    args << "--with-libexpat=#{MacOS.sdk_path}/usr" unless MacOS::CLT.installed?
      system "./configure", *args
  
      inreplace "doc/example.conf", 'username: "unbound"', 'username: "@@HOMEBREW-UNBOUND-USER@@"'
diff --cc Formula/unixodbc.rb
index 9868a6f0d15a,9868a6f0d15a..2e998c6624fd
--- a/Formula/unixodbc.rb
+++ b/Formula/unixodbc.rb
@@@ -16,12 -16,12 +16,15 @@@ class Unixodbc < Formul
  
    conflicts_with "virtuoso", :because => "Both install `isql` binaries."
  
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "readline"
++
    def install
      system "./configure", "--disable-debug",
                            "--disable-dependency-tracking",
                            "--prefix=#{prefix}",
--                          "--enable-static",
--                          "--enable-gui=no"
++                          "--enable-static"
      system "make", "install"
    end
  
diff --cc Formula/upx.rb
index 798a30236e3f,798a30236e3f..8a0570dd5963
--- a/Formula/upx.rb
+++ b/Formula/upx.rb
@@@ -13,6 -13,6 +13,7 @@@ class Upx < Formul
    end
  
    depends_on "ucl"
++  depends_on "zlib"
  
    def install
      system "make", "all"
diff --cc Formula/urweb.rb
index f7fb59642a89,f7fb59642a89..cc90850243f9
--- a/Formula/urweb.rb
+++ b/Formula/urweb.rb
@@@ -14,7 -14,7 +14,7 @@@ class Urweb < Formul
    depends_on "automake" => :build
    depends_on "libtool" => :build
    depends_on "mlton" => :build
--  depends_on "openssl"
++  depends_on "openssl@1.1"
    depends_on "gmp"
    depends_on :postgresql => :optional
    depends_on :mysql => :optional
@@@ -24,7 -24,7 +24,7 @@@
        --disable-debug
        --disable-dependency-tracking
        --disable-silent-rules
--      --with-openssl=#{Formula["openssl"].opt_prefix}
++      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
        --prefix=#{prefix}
        SITELISP=$prefix/share/emacs/site-lisp/urweb
      ]
diff --cc Formula/vala.rb
index 717fed69494e,717fed69494e..6662fed9973a
--- a/Formula/vala.rb
+++ b/Formula/vala.rb
@@@ -17,7 -17,7 +17,8 @@@ class Vala < Formul
    def install
      system "./configure", "--disable-dependency-tracking",
                            "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++                          "--prefix=#{prefix}",
++                          "--enable-static"
      system "make" # Fails to compile as a single step
      system "make", "install"
    end
diff --cc Formula/valgrind.rb
index 91af34c1c0fe,91af34c1c0fe..acc27c4ea82e
--- a/Formula/valgrind.rb
+++ b/Formula/valgrind.rb
@@@ -32,9 -32,9 +32,11 @@@ class Valgrind < Formul
    end
  
    depends_on :macos => :snow_leopard
++  depends_on :mpi => [:cc, :cxx]
++  depends_on "gdb"
++  needs :openmp
    # https://bugs.kde.org/show_bug.cgi?id=365327#c2
    # https://github.com/Homebrew/homebrew-core/pull/6231#issuecomment-255779374
--  depends_on MaximumMacOSRequirement => :el_capitan
  
    # Valgrind needs vcpreload_core-*-darwin.so to have execute permissions.
    # See #2150 for more information.
@@@ -43,6 -43,6 +45,9 @@@
    def install
      args = %W[
        --disable-dependency-tracking
++      --enable-ubsan
++      --enable-tls
++      --with-mpicc
        --prefix=#{prefix}
      ]
      if MacOS.prefer_64_bit?
diff --cc Formula/vim.rb
index 66127f22e20e,66127f22e20e..4aa1e9c9997d
--- a/Formula/vim.rb
+++ b/Formula/vim.rb
@@@ -20,11 -20,11 +20,11 @@@ class Vim < Formul
    LANGUAGES_OPTIONAL = %w[lua python3 tcl].freeze
    LANGUAGES_DEFAULT  = %w[perl python ruby].freeze
  
--  if MacOS.version >= :mavericks
--    option "with-custom-python", "Build with a custom Python 2 instead of the Homebrew version."
--    option "with-custom-ruby", "Build with a custom Ruby instead of the Homebrew version."
--    option "with-custom-perl", "Build with a custom Perl instead of the Homebrew version."
--  end
++  # if MacOS.version >= :mavericks
++  #   option "with-custom-python", "Build with a custom Python 2 instead of the Homebrew version."
++  #   option "with-custom-ruby", "Build with a custom Ruby instead of the Homebrew version."
++  #   option "with-custom-perl", "Build with a custom Perl instead of the Homebrew version."
++  # end
  
    option "with-python3", "Build vim with python3 instead of python[2] support"
    LANGUAGES_OPTIONAL.each do |language|
@@@ -34,14 -34,14 +34,20 @@@
      option "without-#{language}", "Build vim without #{language} support"
    end
  
--  depends_on :python => :recommended
--  depends_on :python3 => :optional
--  depends_on :ruby => "1.8" # Can be compiled against 1.8.x or >= 1.9.3-p385.
--  depends_on :perl => "5.3"
++  # depends_on :python => :recommended
++  # depends_on :python3 => :optional
++  # depends_on :ruby => "1.8" # Can be compiled against 1.8.x or >= 1.9.3-p385.
++  # depends_on :perl => "5.3"
++  depends_on "python" => :recommended
++  depends_on "python3" => :optional
++  depends_on "ruby"
++  depends_on "perl"
    depends_on "lua" => :optional
    depends_on "luajit" => :optional
    depends_on :x11 if build.with? "client-server"
    depends_on "gettext" => :optional
++  depends_on "cscope"
++  depends_on "ncurses"
  
    conflicts_with "ex-vi",
      :because => "vim and ex-vi both install bin/ex and bin/view"
@@@ -60,18 -60,18 +66,20 @@@
        ENV.append "LDFLAGS", "-F#{buildpath}/Frameworks"
      end
  
++    ENV.append "LDFLAGS", "-F#{HOMEBREW_PREFIX}/Frameworks"
++
      opts = []
  
      (LANGUAGES_OPTIONAL + LANGUAGES_DEFAULT).each do |language|
--      opts << "--enable-#{language}interp" if build.with? language
++      opts << "--enable-#{language}interp=dynamic" if build.with? language
      end
  
--    if opts.include?("--enable-pythoninterp") && opts.include?("--enable-python3interp")
--      # only compile with either python or python3 support, but not both
--      # (if vim74 is compiled with +python3/dyn, the Python[3] library lookup segfaults
--      # in other words, a command like ":py3 import sys" leads to a SEGV)
--      opts -= %w[--enable-pythoninterp]
--    end
++    # if opts.include?("--enable-pythoninterp=dynamic") && opts.include?("--enable-python3interp=dynamic")
++    #   # only compile with either python or python3 support, but not both
++    #   # (if vim74 is compiled with +python3/dyn, the Python[3] library lookup segfaults
++    #   # in other words, a command like ":py3 import sys" leads to a SEGV)
++    #   opts -= %w[--enable-pythoninterp=dynamic]
++    # end
  
      opts << "--disable-nls" if build.without? "gettext"
      opts << "--enable-gui=no"
@@@ -83,12 -83,12 +91,12 @@@
      end
  
      if build.with? "lua"
--      opts << "--enable-luainterp"
++      opts << "--enable-luainterp=dynamic"
      end
  
      if build.with? "luajit"
        opts << "--with-luajit"
--      opts << "--enable-luainterp"
++      opts << "--enable-luainterp=dynamic"
      end
  
      # We specify HOMEBREW_PREFIX as the prefix to make vim look in the
@@@ -103,6 -103,6 +111,8 @@@
                            "--with-tlib=ncurses",
                            "--enable-cscope",
                            "--with-compiledby=Homebrew",
++                          "--with-python-config-dir=#{Formula["python"].opt_prefix}/Frameworks/Python.framework/Versions/2.7/lib/python2.7/config",
++                          "--with-python3-config-dir=#{Formula["python3"].opt_prefix}/Frameworks/Python.framework/Versions/3.6/lib/python3.6/config-3.6m-darwin",
                            *opts
      system "make"
      # Parallel install could miss some symlinks
diff --cc Formula/wavpack.rb
index a444666e0ca7,a444666e0ca7..f4581a243e5b
--- a/Formula/wavpack.rb
+++ b/Formula/wavpack.rb
@@@ -11,6 -11,6 +11,9 @@@ class Wavpack < Formul
      sha256 "14d36c9f2f704d8d1181f63ad965690a4594444394ce42d2cfaf63cbfc981051" => :yosemite
    end
  
++  depends_on "libiconv"
++  depends_on "docbook" => :build
++
    head do
      url "https://github.com/dbry/WavPack.git"
      depends_on "automake" => :build
@@@ -19,7 -19,7 +22,17 @@@
    end
  
    def install
--    args = %W[--prefix=#{prefix} --disable-dependency-tracking]
++    args = %W[
++      --prefix=#{prefix}
++      --disable-dependency-tracking
++      --enable-largefile
++      --enable-apps
++      --enable-dsd
++      --enable-tests
++      --enable-asm
++      --enable-man
++      --with-iconv=#{Formula["libiconv"].prefix}
++    ]
  
      if build.head?
        system "./autogen.sh", *args
diff --cc Formula/webp.rb
index b47a603e4a9d,b47a603e4a9d..512340860066
--- a/Formula/webp.rb
+++ b/Formula/webp.rb
@@@ -24,14 -24,14 +24,28 @@@ class Webp < Formul
    depends_on "giflib" => :optional
  
    def install
++    args = %W[
++      --disable-dependency-tracking
++      --prefix=#{prefix}
++      --enable-everything
++      --enable-avx2
++      --enable-sse4.1
++      --enable-sse2
++      --enable-neon
++      --enable-threading
++      --enable-gl
++      --enable-png
++      --enable-jpeg
++      --enable-tiff
++      --enable-gif
++      --enable-libwebpmux
++      --enable-libwebpdemux
++      --enable-libwebpdecoder
++      --enable-libwebpextras
++    ]
      system "./autogen.sh" if build.head?
  
--    system "./configure", "--disable-dependency-tracking",
--                          "--disable-gl",
--                          "--enable-libwebpmux",
--                          "--enable-libwebpdemux",
--                          "--enable-libwebpdecoder",
--                          "--prefix=#{prefix}"
++    system "./configure", *args
      system "make", "install"
    end
  
diff --cc Formula/wget.rb
index de1dd24403e2,de1dd24403e2..a14ca59cefb7
--- a/Formula/wget.rb
+++ b/Formula/wget.rb
@@@ -19,7 -19,7 +19,6 @@@ class Wget < Formul
      depends_on "autoconf" => :build
      depends_on "automake" => :build
      depends_on "xz" => :build
--    depends_on "gettext"
    end
  
    deprecated_option "enable-debug" => "with-debug"
@@@ -28,7 -28,7 +27,12 @@@
  
    depends_on "pkg-config" => :build
    depends_on "pod2man" => :build if MacOS.version <= :snow_leopard
--  depends_on "openssl"
++  depends_on "libressl"
++  depends_on "gettext"
++  depends_on "libidn"
++  depends_on "libiconv"
++  depends_on "zlib"
++  depends_on "libunistring"
    depends_on "pcre" => :optional
    depends_on "libmetalink" => :optional
    depends_on "gpgme" => :optional
@@@ -42,7 -42,7 +46,7 @@@
        --prefix=#{prefix}
        --sysconfdir=#{etc}
        --with-ssl=openssl
--      --with-libssl-prefix=#{Formula["openssl"].opt_prefix}
++      --with-libssl-prefix=#{Formula["libressl"].opt_prefix}
      ]
  
      args << "--disable-debug" if build.without? "debug"
diff --cc Formula/wireshark.rb
index 30478e25a942,30478e25a942..232daf96d3e3
--- a/Formula/wireshark.rb
+++ b/Formula/wireshark.rb
@@@ -26,6 -26,6 +26,16 @@@ class Wireshark < Formul
    depends_on "gnutls"
    depends_on "libgcrypt"
    depends_on "dbus"
++  depends_on "gettext"
++  depends_on "krb5"
++  depends_on "git" => :optional
++  depends_on "libssh" => :optional
++  depends_on "perl"
++  depends_on "python"
++  depends_on "zlib"
++  depends_on "pod2man" => :optional
++  depends_on "lynx" => :optional
++  depends_on "asciidoc"
    depends_on "geoip" => :recommended
    depends_on "c-ares" => :recommended
    depends_on "libsmi" => :optional
@@@ -34,26 -34,26 +44,10 @@@
    depends_on "qt" => :optional
    depends_on "gtk+3" => :optional
    depends_on "gtk+" => :optional
++  depends_on "libpcap"
    depends_on "gnome-icon-theme" if build.with? "gtk+3"
  
--  resource "libpcap" do
--    url "http://www.tcpdump.org/release/libpcap-1.8.0.tar.gz"
--    sha256 "f47b51533f9f060afb304010ea5cbf51d032707333bca70c36351d255754659c"
--  end
--
    def install
--    if MacOS.version <= :mavericks
--      resource("libpcap").stage do
--        system "./configure", "--prefix=#{libexec}/vendor",
--                              "--enable-ipv6",
--                              "--disable-universal"
--        system "make", "install"
--      end
--      ENV.prepend_path "PATH", libexec/"vendor/bin"
--      ENV.prepend "CFLAGS", "-I#{libexec}/vendor/include"
--      ENV.prepend "LDFLAGS", "-L#{libexec}/vendor/lib"
--    end
--
      args = std_cmake_args
      args << "-DENABLE_GNUTLS=ON" << "-DENABLE_GCRYPT=ON"
  
diff --cc Formula/x264.rb
index a74bbe35084a,a74bbe35084a..f2c54060d308
--- a/Formula/x264.rb
+++ b/Formula/x264.rb
@@@ -18,6 -18,6 +18,7 @@@ class X264 < Formul
  
    depends_on "yasm" => :build
    depends_on "l-smash" => :optional
++  depends_on "gpac" => :optional
  
    deprecated_option "10-bit" => "with-10-bit"
  
@@@ -26,8 -26,8 +27,18 @@@
        --prefix=#{prefix}
        --enable-shared
        --enable-static
++      --enable-cli
++      --system-libx264
++      --enable-opencl
++      --enable-gpl
++      --enable-thread
++      --enable-interlaced
++      --chroma-format=all
++      --enable-asm
++      --enable-lto
        --enable-strip
      ]
++    args << "--enable-gpac" if build.with? "gpac"
      args << "--disable-lsmash" if build.without? "l-smash"
      args << "--bit-depth=10" if build.with? "10-bit"
  
diff --cc Formula/xvid.rb
index 795ec436b14b,795ec436b14b..b771e6248093
--- a/Formula/xvid.rb
+++ b/Formula/xvid.rb
@@@ -15,9 -15,9 +15,11 @@@ class Xvid < Formul
      sha256 "08dbe9151754cbf5920c01f003c9c2a419455c3f01dd2679eb8bc9b25c5190a5" => :mountain_lion
    end
  
++  depends_on "nasm" => :build
++
    def install
      cd "build/generic" do
--      system "./configure", "--disable-assembly", "--prefix=#{prefix}"
++      system "./configure", "--prefix=#{prefix}"
        ENV.deparallelize # Or make fails
        system "make"
        system "make", "install"
diff --cc Formula/xxhash.rb
index c6e4a0d234f2,c6e4a0d234f2..b67718cbaee8
--- a/Formula/xxhash.rb
+++ b/Formula/xxhash.rb
@@@ -14,6 -14,6 +14,8 @@@ class Xxhash < Formul
    def install
      system "make"
      bin.install "xxhsum"
++    bin.install "xxh32sum"
++    bin.install "xxh64sum"
    end
  
    test do
diff --cc Formula/xz.rb
index 7ec1cdbdc766,7ec1cdbdc766..52f91a7061c9
--- a/Formula/xz.rb
+++ b/Formula/xz.rb
@@@ -14,11 -14,11 +14,27 @@@ class Xz < Formul
      sha256 "82eef73a78db1c46ed8482c357f6ad1797a62f4c9124410b362efe885082892c" => :yosemite
    end
  
++  depends_on "libiconv" => :optional
++  depends_on "gettext" => :optional
++
    def install
--    system "./configure", "--disable-debug",
--                          "--disable-dependency-tracking",
--                          "--disable-silent-rules",
--                          "--prefix=#{prefix}"
++    args = %W[
++      --disable-debug
++      --disable-dependency-tracking
++      --disable-silent-rules
++      --enable-external-sha256
++      --enable-largefile
++      --enable-assembler=x86_64
++      --prefix=#{prefix}
++    ]
++
++    if build.with?("libiconv") || build.with?("gettext")
++      args << "--enable-nls"
++      args << "--with-libiconv-prefix=#{Formula["libiconv"].prefix}" if build.with? "libiconv"
++      args << "--with-libintl-prefix=#{Formula["gettext"].prefix}" if build.with? "libiconv"
++    end
++
++    system "./configure", *args
      system "make", "check"
      system "make", "install"
    end
diff --cc Formula/yasm.rb
index ccef0a7c190a,ccef0a7c190a..ed4ccb9413ac
--- a/Formula/yasm.rb
+++ b/Formula/yasm.rb
@@@ -22,6 -22,6 +22,9 @@@ class Yasm < Formul
    end
  
    depends_on :python => :optional
++  depends_on "libiconv"
++  depends_on "gettext"
++  depends_on "xmlto"
  
    resource "cython" do
      url "https://files.pythonhosted.org/packages/c6/fe/97319581905de40f1be7015a0ea1bd336a756f6249914b148a17eefa75dc/Cython-0.24.1.tar.gz"
@@@ -32,6 -32,6 +35,7 @@@
      args = %W[
        --disable-debug
        --prefix=#{prefix}
++      --enable-nls
      ]
  
      if build.with? "python"
